<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.panda.sport.rcs.mapper.StandardMatchInfoMapper">

    <!-- 开启本mapper所在namespace的二级缓存每隔三分钟刷新一次缓存数据-->
    <cache eviction="FIFO" flushInterval="300000" size="1024" readOnly="true"/>

    <resultMap id="BaseResultMap" type="com.panda.sport.rcs.pojo.StandardMatchInfo">
        <!--@mbg.generated-->
        <!--@Table standard_match_info-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="sport_id" jdbcType="BIGINT" property="sportId"/>
        <result column="standard_tournament_id" jdbcType="BIGINT" property="standardTournamentId"/>
        <result column="third_match_id" jdbcType="INTEGER" property="thirdMatchId"/>
        <result column="seconds_match_start" jdbcType="INTEGER" property="secondsMatchStart"/>
        <result column="pre_match_business" jdbcType="TINYINT" property="preMatchBusiness"/>
        <result column="live_odd_business" jdbcType="TINYINT" property="liveOddBusiness"/>
        <result column="operate_match_status" jdbcType="TINYINT" property="operateMatchStatus"/>
        <result column="begin_time" jdbcType="BIGINT" property="beginTime"/>
        <result column="active" jdbcType="TINYINT" property="active"/>
        <result column="pre_match_bet_status" jdbcType="TINYINT" property="preMatchBetStatus"/>
        <result column="live_odds_bet_status" jdbcType="TINYINT" property="liveOddsBetStatus"/>
        <result column="match_status" jdbcType="TINYINT" property="matchStatus"/>
        <result column="neutral_ground" jdbcType="TINYINT" property="neutralGround"/>
        <result column="match_manage_id" jdbcType="BIGINT" property="matchManageId"/>
        <result column="match_position_name" jdbcType="VARCHAR" property="matchPositionName"/>
        <result column="match_position_name_code" jdbcType="BIGINT" property="matchPositionNameCode"/>
        <result column="risk_manager_code" jdbcType="VARCHAR" property="riskManagerCode"/>
        <result column="data_source_code" jdbcType="VARCHAR" property="dataSourceCode"/>
        <result column="related_data_source_coder_list" jdbcType="VARCHAR" property="relatedDataSourceCoderList"/>
        <result column="related_data_source_coder_num" jdbcType="INTEGER" property="relatedDataSourceCoderNum"/>
        <result column="match_data_provider_code" jdbcType="VARCHAR" property="matchDataProviderCode"/>
        <result column="third_match_source_id" jdbcType="VARCHAR" property="thirdMatchSourceId"/>
        <result column="home_away_info" jdbcType="VARCHAR" property="homeAwayInfo"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="bet_status" jdbcType="TINYINT" property="betStatus"/>
        <result column="team_name" jdbcType="OTHER" property="teamName"/>
        <result column="team_manage_id" jdbcType="OTHER" property="teamManageId"/>
        <result column="match_period_id" jdbcType="BIGINT" property="matchPeriodId"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="modify_time" jdbcType="BIGINT" property="modifyTime"/>
        <result column="pre_risk_manager_code" jdbcType="VARCHAR" property="preRiskManagerCode"/>
        <result column="live_risk_manager_code" jdbcType="VARCHAR" property="liveRiskManagerCode"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, sport_id, standard_tournament_id, third_match_id, seconds_match_start, pre_match_business,
        live_odd_business, operate_match_status, begin_time, active, pre_match_bet_status,
        live_odds_bet_status, match_status, neutral_ground, match_manage_id, match_position_name,
        match_position_name_code, risk_manager_code, data_source_code, related_data_source_coder_list,
        related_data_source_coder_num, match_data_provider_code, third_match_source_id, home_away_info,
        parent_id, bet_status, team_name, team_manage_id, match_period_id, remark, create_time,
        modify_time,pre_risk_manager_code,live_risk_manager_code,match_length
    </sql>

    <select id="selectPageByConditionV2" resultType="com.panda.sport.rcs.pojo.StandardMatchInfo">
        select
        smi.id, smi.sport_id, smi.standard_tournament_id, smi.third_match_id, smi.seconds_match_start,
        sst.name_code nameCode,sst.tournament_level tournamentLevel,'0' is_delete,smi.event_time,
        smi.pre_match_business pre_match_business,
        smi.live_odd_business live_odd_business,
        case when smi.operate_match_status = 2 or rmc.status = 2 then 2
        when smi.operate_match_status = 3 or rmc.status = 1 then 3
        when smi.operate_match_status = 0 then 0 else 1 end operate_match_status,
        smi.begin_time, active, smi.pre_match_bet_status,
        smi.live_odds_bet_status, IFNULL(smi.match_status,0) match_status, smi.neutral_ground, smi.match_manage_id,
        smi.match_position_name,
        smi.match_position_name_code, smi.risk_manager_code, smi.data_source_code, smi.related_data_source_coder_list,
        smi.related_data_source_coder_num, smi.match_data_provider_code, smi.third_match_source_id, smi.home_away_info,
        smi.parent_id, smi.bet_status, smi.team_name, smi.team_manage_id, smi.match_period_id, smi.remark,
        smi.create_time,smi.pre_risk_manager_code,smi.live_risk_manager_code
        from standard_match_info smi
        LEFT JOIN standard_sport_tournament sst on smi.standard_tournament_id = sst .id
        LEFT JOIN (SELECT s.match_id,s.status,s.update_time,s.data_source FROM
        ( SELECT match_id, STATUS, data_source, update_time FROM rcs_trade_config WHERE trader_level = 1 and status is not null ORDER BY update_time DESC limit 100000000 ) s GROUP BY s.match_id) rmc ON rmc.match_id = smi.id
        LEFT JOIN rcs_match_collection rmn ON rmn.match_id = smi.id
        where 1=1
        and #{obj.currentTimeMillis,jdbcType=BIGINT} &lt;= (smi.begin_time+14400000)
        AND (UNIX_TIMESTAMP(smi.update_time)*1000 >= #{obj.updateTimeMillis,jdbcType=BIGINT} or
        sst.modify_time >= #{obj.updateTimeMillis,jdbcType=BIGINT} or
        UNIX_TIMESTAMP(rmc.update_time)*1000 >= #{obj.updateTimeMillis,jdbcType=BIGINT})
        order by begin_time asc
    </select>


    <select id="selectMatchs" resultType="com.panda.sport.rcs.pojo.StandardMatchInfo">
        select
        smi.id, smi.sport_id, smi.standard_tournament_id, smi.third_match_id, smi.seconds_match_start,
        smi.pre_match_business,sst.name_code nameCode,sst.tournament_level tournamentLevel,
        smi.live_odd_business,
        case when smi.operate_match_status = 2 or rmc.operate_match_status = 2 then 2
        when smi.operate_match_status = 3 or rmc.operate_match_status = 3 then 3
        when smi.operate_match_status = 0 then 0 else 1 end operate_match_status,
        smi.begin_time, active, smi.pre_match_bet_status,
        smi.live_odds_bet_status, IFNULL(smi.match_status,0) match_status, smi.neutral_ground, smi.match_manage_id,
        smi.match_position_name,
        smi.match_position_name_code, smi.risk_manager_code, smi.data_source_code, smi.related_data_source_coder_list,
        smi.related_data_source_coder_num, smi.match_data_provider_code, smi.third_match_source_id, smi.home_away_info,
        smi.parent_id, smi.bet_status, smi.team_name, smi.team_manage_id, smi.match_period_id, smi.remark,
        smi.create_time,IFNULL(rmc.trade_type,0) trade_type,smi.pre_risk_manager_code,smi.live_risk_manager_code
        from standard_match_info smi
        left join standard_sport_tournament sst on smi.standard_tournament_id = sst .id
        LEFT JOIN rcs_match_config rmc ON rmc.match_id = smi.id
        LEFT JOIN rcs_match_collection rmn ON rmn.match_id = smi.id
        where 1=1 AND smi.live_odd_business = 1
        and (smi.begin_time+14400000)>=(unix_timestamp(now())*1000)
        and (smi.modify_time >= #{obj.updateTimeMillis,jdbcType=BIGINT} or sst.modify_time >=
        #{obj.updateTimeMillis,jdbcType=BIGINT} or UNIX_TIMESTAMP(rmc.modify_time)*1000 >=
        #{obj.updateTimeMillis,jdbcType=BIGINT})
        order by begin_time asc
    </select>

    <select id="selectPageByCondition" resultType="com.panda.sport.rcs.pojo.StandardMatchInfo">
        select
        smi.id, smi.sport_id, smi.standard_tournament_id, smi.third_match_id, smi.seconds_match_start,
        smi.pre_match_business,sst.name_code nameCode,sst.tournament_level tournamentLevel,
        smi.live_odd_business,
        case when smi.operate_match_status = 2 or rmc.operate_match_status = 2 then 2
        when smi.operate_match_status = 3 or rmc.operate_match_status = 3 then 3
        when smi.operate_match_status = 0 then 0 else 1 end operate_match_status,
        smi.begin_time, active, smi.pre_match_bet_status,
        smi.live_odds_bet_status, smi.match_status, smi.neutral_ground, smi.match_manage_id, smi.match_position_name,
        smi.match_position_name_code, smi.risk_manager_code, smi.data_source_code, smi.related_data_source_coder_list,
        smi.related_data_source_coder_num, smi.match_data_provider_code, smi.third_match_source_id, smi.home_away_info,
        smi.parent_id, smi.bet_status, smi.team_name, smi.team_manage_id, smi.match_period_id, smi.remark,
        smi.create_time,IFNULL(rmc.trade_type,0) trade_type,smi.pre_risk_manager_code,smi.live_risk_manager_code
        from standard_match_info smi
        left join standard_sport_tournament sst on smi.standard_tournament_id = sst .id
        LEFT JOIN rcs_match_config rmc ON rmc.match_id = smi.id
        LEFT JOIN rcs_match_collection rmn ON rmn.match_id = smi.id
        <where>
            <if test="obj.liveOddBusiness == 1">
                <if test="obj.currentTimeMillis != null">
                    <![CDATA[ and #{obj.currentTimeMillis,jdbcType=BIGINT} >= smi.begin_time]]>
                </if>
                and smi.match_status =1 and smi.live_odd_business =1
            </if>
            <if test="obj.currentTimeMillis != null">
                <![CDATA[and #{obj.currentTimeMillis,jdbcType=BIGINT} <= (smi.begin_time+14400000)  ]]>
            </if>
            <if test="obj.liveOddBusiness == null">
                and (smi.match_status = 0 or smi.match_status is null) and smi.pre_match_business = 1
            </if>
            <if test="obj.beginTimeMillis!=null">
                <![CDATA[ and smi.begin_time >=  #{obj.beginTimeMillis,jdbcType=BIGINT}  ]]>
            </if>
            <if test="obj.endTimeMillis!=null">
                <![CDATA[ and smi.begin_time <=  #{obj.endTimeMillis,jdbcType=BIGINT}  ]]>
            </if>
            <if test="obj.tournamentLevel !=null ">
                and sst.tournament_level = #{obj.tournamentLevel}
            </if>
            <if test="obj.matchId != null">
                and smi.id = #{obj.matchId,jdbcType=BIGINT}
            </if>
            <if test="obj.matchManageId != null and obj.matchManageId != ''">
                and smi.match_manage_id = #{obj.matchManageId,jdbcType=VARCHAR}
            </if>
            <if test="obj.operateMatchStatus != null">
                and smi.operate_match_status = #{obj.operateMatchStatus,jdbcType=INTEGER}
            </if>
            <if test="obj.sportId != null">
                and smi.sport_id = #{obj.sportId,jdbcType=BIGINT}
            </if>
            <if test="obj.updateTimeMillis != null">
                and (smi.modify_time >= #{obj.updateTimeMillis,jdbcType=BIGINT} or sst.modify_time >=
                #{obj.updateTimeMillis,jdbcType=BIGINT} or UNIX_TIMESTAMP(rmc.modify_time)*1000 >=
                #{obj.updateTimeMillis,jdbcType=BIGINT} or rmn.update_time >=
                #{obj.updateTimeMillis,jdbcType=BIGINT})
            </if>
            <if test="obj.tradeType != null">
                <if test="obj.tradeType == 1">
                    and rmc.trade_type = 1
                </if>
                <if test="obj.tradeType == 0">
                    and (rmc.trade_type is null or rmc.trade_type = 0)
                </if>
            </if>
            <if test="obj.matchCollectStatus != null">
                <if test="obj.matchCollectStatus == true ">
                    and rmn.user_id = #{obj.tradeId,jdbcType=BIGINT} and rmn.status = 1
                </if>
            </if>
            <if test="obj.standardTournamentId != null">
                and smi.standard_tournament_id = #{obj.standardTournamentId,jdbcType=BIGINT}
            </if>
        </where>
        order by begin_time asc
    </select>

    <select id="selectTournamentsByCondition" resultType="com.panda.sport.rcs.pojo.StandardMatchInfo">
        select smi.standard_tournament_id,name_code
        from standard_match_info smi
        left join standard_sport_tournament sst on smi.standard_tournament_id = sst .id
        <where>
            <if test="obj.liveOddBusiness == 1">
                <if test="obj.currentTimeMillis != null">
                    <![CDATA[ and smi.begin_time  <= #{obj.currentTimeMillis,jdbcType=BIGINT} + 300*1000 ]]>
                </if>
                and smi.match_status =1 and smi.live_odd_business =1
            </if>
            <if test="obj.currentTimeMillis != null">
                <![CDATA[and smi.begin_time > = #{obj.currentTimeMillis,jdbcType=BIGINT} - 14400000  ]]>
            </if>
            <if test="obj.liveOddBusiness == null">
                and (smi.match_status = 0 or smi.match_status is null) and smi.pre_match_business = 1
            </if>
            <if test="obj.beginTimeMillis!=null">
                <![CDATA[ and smi.begin_time >=  #{obj.beginTimeMillis,jdbcType=BIGINT}  ]]>
            </if>
            <if test="obj.endTimeMillis!=null">
                <![CDATA[ and smi.begin_time <=  #{obj.endTimeMillis,jdbcType=BIGINT}  ]]>
            </if>
            <if test="obj.tournamentLevel !=null ">
                and sst.tournament_level = #{obj.tournamentLevel}
            </if>
            <if test="obj.matchId != null">
                and smi.id = #{obj.matchId,jdbcType=BIGINT}
            </if>
            <if test="obj.matchManageId != null and obj.matchManageId != ''">
                and smi.match_manage_id = #{obj.matchManageId,jdbcType=VARCHAR}
            </if>
            <if test="obj.operateMatchStatus != null">
                and smi.operate_match_status = #{obj.operateMatchStatus,jdbcType=INTEGER}
            </if>
            <if test="obj.sportId != null">
                and smi.sport_id = #{obj.sportId,jdbcType=BIGINT}
            </if>
            <if test="obj.updateTimeMillis != null">
                and (smi.modify_time >= #{obj.updateTimeMillis,jdbcType=BIGINT} or sst.modify_time >=
                #{obj.updateTimeMillis,jdbcType=BIGINT} or UNIX_TIMESTAMP(rmc.modify_time)*1000 >=
                #{obj.updateTimeMillis,jdbcType=BIGINT} or rmn.update_time >=
                #{obj.updateTimeMillis,jdbcType=BIGINT})
            </if>
            <if test="obj.tradeType != null">
                <if test="obj.tradeType == 1">
                    and rmc.trade_type = 1
                </if>
                <if test="obj.tradeType == 0">
                    and (rmc.trade_type is null or rmc.trade_type = 0)
                </if>
            </if>
            <if test="obj.matchCollectStatus != null">
                <if test="obj.matchCollectStatus == true ">
                    and rmn.user_id = #{obj.tradeId,jdbcType=BIGINT} and rmn.status = 1
                </if>
            </if>
            <if test="obj.standardTournamentId != null">
                and smi.standard_tournament_id = #{obj.standardTournamentId,jdbcType=BIGINT}
            </if>
        </where>
        GROUP BY smi.standard_tournament_id
    </select>

    <select id="selectConditionById" resultType="com.panda.sport.rcs.vo.TraderConditionVo">
        SELECT
        smi.id,
        smi.begin_time,
        smi.live_odd_business,
        sst.tournament_level,
        smi.sport_id,
        smi.begin_time
        FROM
        standard_match_info smi
        LEFT JOIN standard_sport_tournament sst ON smi.standard_tournament_id = sst.id
        WHERE
        smi.id = #{id}
    </select>


    <select id="selectMacthInfo" resultType="com.panda.sport.rcs.vo.TournamentMatchInfoVo">
        SELECT
        msi.period,
        smi.*,
        rmds.total_value,
        rmds.total_order_nums,
        rmds.settled_real_time_value,
        rmds.settled_profit_value,
        msi.score,
        msi.seconds_match_start secondsMatchStart,
        (SELECT score FROM match_period p WHERE p.standard_match_id = smi.id AND p.period = 6 LIMIT 1 ) set1Score
        FROM
        standard_match_info smi
        LEFT JOIN rcs_standard_sport_market_sell s ON s.match_info_id = smi.id
        LEFT JOIN rcs_match_dimension_statistics rmds ON smi.id = rmds.match_id
        LEFT JOIN match_statistics_info msi ON smi.id = msi.standard_match_id
        WHERE
        smi.standard_tournament_id = #{tournamentId}
        AND smi.risk_manager_code IS NOT NULL
        AND IFNULL(smi.match_status,-1) NOT IN(3)
        AND ( s.pre_match_sell_status = 'Sold' OR s.live_match_sell_status = 'Sold' )
        AND FROM_UNIXTIME( smi.begin_time / 1000-60*60*12, '%Y-%m-%d' ) = #{dateTime}
        ORDER BY
        smi.begin_time
    </select>

    <select id="selectMatchPositionByOptionId" parameterType="java.lang.Long" resultType="java.lang.String">
        <!--@mbg.generated-->
        SELECT
        d.match_position
        FROM
        standard_sport_odds_fields_templet ae
        LEFT JOIN standard_sport_market_odds a ON ae.id = a.odds_fields_templet_id
        LEFT JOIN standard_sport_market b ON a.market_id = b.id
        LEFT JOIN standard_match_info c ON b.standard_match_info_id = c.id
        LEFT JOIN standard_match_team_relation d ON c.id = d.standard_match_id
        WHERE ae.addition1=d.standard_team_id and ae.id = #{id,jdbcType=BIGINT}
    </select>




    <select id="selectTournamentCount" resultType="com.panda.sport.rcs.pojo.StandardMatchInfo">
        SELECT *
        FROM standard_match_info smi
        WHERE
        <if test="matchType == 1">
            ((
            smi.match_status IN ( 0, 1, 2, 10 )
            AND smi.live_odd_business = 0
            )
            OR (
            smi.match_status IN ( 0 ))
            AND smi.live_odd_business = 1
            )
        </if>
        <if test="matchType == 2">
            smi.match_status IN (1, 2, 10)
            AND smi.live_odd_business = 1
        </if>
        <if test="tournamentIds != null and tournamentIds.size() != 0">
            AND smi.standard_tournament_id in
            <foreach collection="tournamentIds" item="tId" index="index"
                     open="(" close=")" separator=",">
                #{tId}
            </foreach>
        </if>
        <if test="matchIds != null and matchIds.size() != 0">
            AND smi.id not in
            <foreach collection="matchIds" item="mId" index="index"
                     open="(" close=")" separator=",">
                #{mId}
            </foreach>
        </if>
        <![CDATA[and ( UNIX_TIMESTAMP()-(60*60*4)<=smi.begin_time/1000 and smi.sport_id in (1,2) ) ]]>
    </select>

    <select id="getGrounderNumber" resultType="java.lang.Integer">
        SELECT  COUNT(*) FROM standard_match_info WHERE  match_status=1 AND live_odd_business=1
    </select>

    <select id="selectMarketIdByState" resultType="java.lang.Long">
        SELECT
        id
        FROM
        standard_sport_market
        WHERE
        standard_match_info_id = #{matchId}
        AND market_category_id IN ( SELECT child_key FROM rcs_code WHERE father_key = 'play_phase' AND remark = #{state}
        )
    </select>
    
    <select id="queryMatchEndIds" parameterType="Map" resultType="String">
    	SELECT id FROM standard_match_info i 
		WHERE i.sport_id = 1 AND i.begin_time >= UNIX_TIMESTAMP() * 1000 - 2 * 24 * 60 * 60 * 1000
		AND i.begin_time &lt;= UNIX_TIMESTAMP() * 1000 - 4 * 60 * 60 * 1000
		AND i.match_status IN (3,4)
    </select>
    
	<select id="getAllSellMatchList" resultType="com.panda.sport.rcs.vo.StandardMatchAllSellVo">
        SELECT i.id matchInfoId , i.sport_id sportId,i.begin_time beginTime ,i.match_manage_id matchManageId,i.pre_match_business preMatchBusiness,
        i.live_odd_business liveOddBusiness , i.pre_risk_manager_code preRiskManagerCode , i.live_risk_manager_code liveRiskManagerCode,
        i.operate_match_status operateMatchStatus ,i.match_status matchStatus,t1.name_code homeNameCode , t2.name_code awayNameCode,
        t.name_code tournamentCode 
        FROM standard_match_info i 
        LEFT JOIN standard_match_team_relation r1 ON r1.standard_match_id = i.id AND r1.match_position = 'home'
        LEFT JOIN standard_match_team_relation r2 ON r2.standard_match_id = i.id AND r2.match_position = 'away'
        LEFT JOIN standard_sport_team t1 ON t1.id = r1.standard_team_id
        LEFT JOIN standard_sport_team t2 ON t2.id = r2.standard_team_id
        LEFT JOIN standard_sport_tournament t ON t.id = i.standard_tournament_id 
        WHERE (i.pre_match_business = 1 OR i.live_odd_business = 1) 
        <if test="marketLiveOddsQueryVo.beginTimeMillis != null and marketLiveOddsQueryVo.beginTimeMillis != ''">
            AND i.begin_time >= #{marketLiveOddsQueryVo.beginTimeMillis} AND i.begin_time &lt; #{marketLiveOddsQueryVo.endTimeMillis}
        </if>
        <if test="marketLiveOddsQueryVo.matchManageId != null and marketLiveOddsQueryVo.matchManageId != ''">
            and i.match_manage_id in (${marketLiveOddsQueryVo.matchManageId})
        </if>
        <if test="marketLiveOddsQueryVo.liveOddBusiness != null and marketLiveOddsQueryVo.liveOddBusiness != ''">
        	and i.match_status IN ( 1, 2, 10 ) 
        </if>
        <if test="marketLiveOddsQueryVo.liveOddBusiness == null or marketLiveOddsQueryVo.liveOddBusiness == ''">
        	and i.match_status not IN ( 1, 2, 10 ) 
        	and i.begin_time >= UNIX_TIMESTAMP() * 1000 
        </if>
       	and ((i.sport_id = 1 and i.match_status not in (1,2,10) and i.pre_risk_manager_code = 'MTS') 
       		or (i.sport_id = 1 and i.match_status in (1,2,10) and i.live_risk_manager_code = 'MTS')
       		)       	
        AND i.sport_id = #{marketLiveOddsQueryVo.sportId}
        AND (i.match_status NOT IN ( 3, 4, 5, 6, 9 ) or i.match_status is NULL) 
        and i.begin_time >= UNIX_TIMESTAMP() * 1000 - 4 * 60 * 60 * 1000
        and ((i.pre_match_business = 1 and i.match_status not in (1,2,10)) or (i.live_odd_business = 1 and i.match_status in (1,2,10)))
        and exists (select 1 from standard_sport_market where standard_match_info_id = i.id)
        order by i.begin_time,t.tournament_level
    </select>
    <select id="queryTimeOutMatch" resultType="com.panda.sport.rcs.pojo.StandardMatchInfo">
        SELECT t.id
        FROM standard_match_info t
        WHERE t.id = #{id}
        AND( t.event_code = 'time_start_0' OR t.event_code = 'timeout')
    </select>

    <select id="getMatchList" resultType="com.panda.sport.rcs.pojo.StandardMatchInfo">
        /*SELECT t.id,t.sport_id
        FROM standard_match_info t
        WHERE t.match_status  = 0*/
        SELECT sm.id,sm.sport_id from rcs_tournament_template t INNER JOIN standard_match_info sm on sm.id = t.type_val  where sm.match_status  = 0 and t.match_type = 1
        /*and sm.id = '3304654'*/
    </select>

    <select id="getMacthInfoById" resultType="com.panda.sport.rcs.pojo.StandardMatchInfo">
        SELECT
            <include refid="Base_Column_List" />
        FROM
            standard_match_info
        WHERE
            id = #{matchId}
    </select>
</mapper>