/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Information about a specific event result in a city
 */
@ApiModel(description = "Information about a specific event result in a city")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class CityResultData {
  @SerializedName("eventTime")
  private OffsetDateTime eventTime = null;

  @SerializedName("drawResult")
  private List<Integer> drawResult = null;

  @SerializedName("drawMachine")
  private List<Integer> drawMachine = null;

  public CityResultData eventTime(OffsetDateTime eventTime) {
    this.eventTime = eventTime;
    return this;
  }

   /**
   * Event time
   * @return eventTime
  **/
  @ApiModelProperty(value = "Event time")
  public OffsetDateTime getEventTime() {
    return eventTime;
  }

  public void setEventTime(OffsetDateTime eventTime) {
    this.eventTime = eventTime;
  }

  public CityResultData drawResult(List<Integer> drawResult) {
    this.drawResult = drawResult;
    return this;
  }

  public CityResultData addDrawResultItem(Integer drawResultItem) {
    if (this.drawResult == null) {
      this.drawResult = new ArrayList<Integer>();
    }
    this.drawResult.add(drawResultItem);
    return this;
  }

   /**
   * Ordered array of numbers included in result.
   * @return drawResult
  **/
  @ApiModelProperty(value = "Ordered array of numbers included in result.")
  public List<Integer> getDrawResult() {
    return drawResult;
  }

  public void setDrawResult(List<Integer> drawResult) {
    this.drawResult = drawResult;
  }

  public CityResultData drawMachine(List<Integer> drawMachine) {
    this.drawMachine = drawMachine;
    return this;
  }

  public CityResultData addDrawMachineItem(Integer drawMachineItem) {
    if (this.drawMachine == null) {
      this.drawMachine = new ArrayList<Integer>();
    }
    this.drawMachine.add(drawMachineItem);
    return this;
  }

   /**
   * Ordered array of numbers included in machine result.
   * @return drawMachine
  **/
  @ApiModelProperty(value = "Ordered array of numbers included in machine result.")
  public List<Integer> getDrawMachine() {
    return drawMachine;
  }

  public void setDrawMachine(List<Integer> drawMachine) {
    this.drawMachine = drawMachine;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CityResultData cityResultData = (CityResultData) o;
    return Objects.equals(this.eventTime, cityResultData.eventTime) &&
        Objects.equals(this.drawResult, cityResultData.drawResult) &&
        Objects.equals(this.drawMachine, cityResultData.drawMachine);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventTime, drawResult, drawMachine);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CityResultData {\n");
    
    sb.append("    eventTime: ").append(toIndentedString(eventTime)).append("\n");
    sb.append("    drawResult: ").append(toIndentedString(drawResult)).append("\n");
    sb.append("    drawMachine: ").append(toIndentedString(drawMachine)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

