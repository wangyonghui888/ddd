/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.TeamToTeamPerformance;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about past matched between both teams. 
 */
@ApiModel(description = "Information about past matched between both teams. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class TeamToTeamStats {
  @SerializedName("headToHead")
  private List<List<String>> headToHead = null;

  @SerializedName("performance")
  private TeamToTeamPerformance performance = null;

  @SerializedName("lastResult")
  private List<List<String>> lastResult = null;

  public TeamToTeamStats headToHead(List<List<String>> headToHead) {
    this.headToHead = headToHead;
    return this;
  }

  public TeamToTeamStats addHeadToHeadItem(List<String> headToHeadItem) {
    if (this.headToHead == null) {
      this.headToHead = new ArrayList<List<String>>();
    }
    this.headToHead.add(headToHeadItem);
    return this;
  }

   /**
   * Information about past matches between both teams. 
   * @return headToHead
  **/
  @ApiModelProperty(value = "Information about past matches between both teams. ")
  public List<List<String>> getHeadToHead() {
    return headToHead;
  }

  public void setHeadToHead(List<List<String>> headToHead) {
    this.headToHead = headToHead;
  }

  public TeamToTeamStats performance(TeamToTeamPerformance performance) {
    this.performance = performance;
    return this;
  }

   /**
   * Get performance
   * @return performance
  **/
  @ApiModelProperty(value = "")
  public TeamToTeamPerformance getPerformance() {
    return performance;
  }

  public void setPerformance(TeamToTeamPerformance performance) {
    this.performance = performance;
  }

  public TeamToTeamStats lastResult(List<List<String>> lastResult) {
    this.lastResult = lastResult;
    return this;
  }

  public TeamToTeamStats addLastResultItem(List<String> lastResultItem) {
    if (this.lastResult == null) {
      this.lastResult = new ArrayList<List<String>>();
    }
    this.lastResult.add(lastResultItem);
    return this;
  }

   /**
   * Last match result of team. 
   * @return lastResult
  **/
  @ApiModelProperty(value = "Last match result of team. ")
  public List<List<String>> getLastResult() {
    return lastResult;
  }

  public void setLastResult(List<List<String>> lastResult) {
    this.lastResult = lastResult;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamToTeamStats teamToTeamStats = (TeamToTeamStats) o;
    return Objects.equals(this.headToHead, teamToTeamStats.headToHead) &&
        Objects.equals(this.performance, teamToTeamStats.performance) &&
        Objects.equals(this.lastResult, teamToTeamStats.lastResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(headToHead, performance, lastResult);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamToTeamStats {\n");
    
    sb.append("    headToHead: ").append(toIndentedString(headToHead)).append("\n");
    sb.append("    performance: ").append(toIndentedString(performance)).append("\n");
    sb.append("    lastResult: ").append(toIndentedString(lastResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

