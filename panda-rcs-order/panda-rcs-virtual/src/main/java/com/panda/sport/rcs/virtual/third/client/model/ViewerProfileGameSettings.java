/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.TickerGameSetting;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Viewer Profile Game Settings 
 */
@ApiModel(description = "Viewer Profile Game Settings ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")




public class ViewerProfileGameSettings {
  @SerializedName("classType")
  private String classType = null;

  @SerializedName("gameType")
  private String gameType = null;

  @SerializedName("soundVolume")
  private Integer soundVolume = null;

  @SerializedName("tickerSettings")
  private List<TickerGameSetting> tickerSettings = null;

  public ViewerProfileGameSettings() {
    this.classType = this.getClass().getSimpleName();
  }
  public ViewerProfileGameSettings classType(String classType) {
    this.classType = classType;
    return this;
  }

   /**
   * Get classType
   * @return classType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getClassType() {
    return classType;
  }

  public void setClassType(String classType) {
    this.classType = classType;
  }

  public ViewerProfileGameSettings gameType(String gameType) {
    this.gameType = gameType;
    return this;
  }

   /**
   * Game.
   * @return gameType
  **/
  @ApiModelProperty(required = true, value = "Game.")
  public String getGameType() {
    return gameType;
  }

  public void setGameType(String gameType) {
    this.gameType = gameType;
  }

  public ViewerProfileGameSettings soundVolume(Integer soundVolume) {
    this.soundVolume = soundVolume;
    return this;
  }

   /**
   * Sound volumen level. 
   * minimum: 0
   * maximum: 100
   * @return soundVolume
  **/
  @ApiModelProperty(value = "Sound volumen level. ")
  public Integer getSoundVolume() {
    return soundVolume;
  }

  public void setSoundVolume(Integer soundVolume) {
    this.soundVolume = soundVolume;
  }

  public ViewerProfileGameSettings tickerSettings(List<TickerGameSetting> tickerSettings) {
    this.tickerSettings = tickerSettings;
    return this;
  }

  public ViewerProfileGameSettings addTickerSettingsItem(TickerGameSetting tickerSettingsItem) {
    if (this.tickerSettings == null) {
      this.tickerSettings = new ArrayList<TickerGameSetting>();
    }
    this.tickerSettings.add(tickerSettingsItem);
    return this;
  }

   /**
   * Ticker configuration for each one of the states of the viewer; PREAMBLE, INGAME, RESULT. If the ticker definition is not defined for a particular state, the ticker will not be shown. 
   * @return tickerSettings
  **/
  @ApiModelProperty(value = "Ticker configuration for each one of the states of the viewer; PREAMBLE, INGAME, RESULT. If the ticker definition is not defined for a particular state, the ticker will not be shown. ")
  public List<TickerGameSetting> getTickerSettings() {
    return tickerSettings;
  }

  public void setTickerSettings(List<TickerGameSetting> tickerSettings) {
    this.tickerSettings = tickerSettings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ViewerProfileGameSettings viewerProfileGameSettings = (ViewerProfileGameSettings) o;
    return Objects.equals(this.classType, viewerProfileGameSettings.classType) &&
        Objects.equals(this.gameType, viewerProfileGameSettings.gameType) &&
        Objects.equals(this.soundVolume, viewerProfileGameSettings.soundVolume) &&
        Objects.equals(this.tickerSettings, viewerProfileGameSettings.tickerSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(classType, gameType, soundVolume, tickerSettings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ViewerProfileGameSettings {\n");
    
    sb.append("    classType: ").append(toIndentedString(classType)).append("\n");
    sb.append("    gameType: ").append(toIndentedString(gameType)).append("\n");
    sb.append("    soundVolume: ").append(toIndentedString(soundVolume)).append("\n");
    sb.append("    tickerSettings: ").append(toIndentedString(tickerSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

