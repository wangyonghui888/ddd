/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.ChKnockoutMatchDayStats;
import com.panda.sport.rcs.virtual.third.client.model.ChResultStat;
import com.panda.sport.rcs.virtual.third.client.model.EbkStats;
import com.panda.sport.rcs.virtual.third.client.model.FootballClassificationEntry;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about the stats of Champions event 
 */
@ApiModel(description = "Information about the stats of Champions event ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class EbkStatsChampion extends EbkStats {
  @SerializedName("groupClassification")
  private List<List<FootballClassificationEntry>> groupClassification = null;

  @SerializedName("groupHistory")
  private List<ChResultStat> groupHistory = null;

  @SerializedName("knockoutStats")
  private List<ChKnockoutMatchDayStats> knockoutStats = null;

  public EbkStatsChampion groupClassification(List<List<FootballClassificationEntry>> groupClassification) {
    this.groupClassification = groupClassification;
    return this;
  }

  public EbkStatsChampion addGroupClassificationItem(List<FootballClassificationEntry> groupClassificationItem) {
    if (this.groupClassification == null) {
      this.groupClassification = new ArrayList<List<FootballClassificationEntry>>();
    }
    this.groupClassification.add(groupClassificationItem);
    return this;
  }

   /**
   * history of matches results since first match day of the current cup
   * @return groupClassification
  **/
  @ApiModelProperty(value = "history of matches results since first match day of the current cup")
  public List<List<FootballClassificationEntry>> getGroupClassification() {
    return groupClassification;
  }

  public void setGroupClassification(List<List<FootballClassificationEntry>> groupClassification) {
    this.groupClassification = groupClassification;
  }

  public EbkStatsChampion groupHistory(List<ChResultStat> groupHistory) {
    this.groupHistory = groupHistory;
    return this;
  }

  public EbkStatsChampion addGroupHistoryItem(ChResultStat groupHistoryItem) {
    if (this.groupHistory == null) {
      this.groupHistory = new ArrayList<ChResultStat>();
    }
    this.groupHistory.add(groupHistoryItem);
    return this;
  }

   /**
   * history of matches results since first match day of the current cup until last match day of group phase
   * @return groupHistory
  **/
  @ApiModelProperty(value = "history of matches results since first match day of the current cup until last match day of group phase")
  public List<ChResultStat> getGroupHistory() {
    return groupHistory;
  }

  public void setGroupHistory(List<ChResultStat> groupHistory) {
    this.groupHistory = groupHistory;
  }

  public EbkStatsChampion knockoutStats(List<ChKnockoutMatchDayStats> knockoutStats) {
    this.knockoutStats = knockoutStats;
    return this;
  }

  public EbkStatsChampion addKnockoutStatsItem(ChKnockoutMatchDayStats knockoutStatsItem) {
    if (this.knockoutStats == null) {
      this.knockoutStats = new ArrayList<ChKnockoutMatchDayStats>();
    }
    this.knockoutStats.add(knockoutStatsItem);
    return this;
  }

   /**
   * history of matches results since first match day of knockout phase
   * @return knockoutStats
  **/
  @ApiModelProperty(value = "history of matches results since first match day of knockout phase")
  public List<ChKnockoutMatchDayStats> getKnockoutStats() {
    return knockoutStats;
  }

  public void setKnockoutStats(List<ChKnockoutMatchDayStats> knockoutStats) {
    this.knockoutStats = knockoutStats;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EbkStatsChampion ebkStatsChampion = (EbkStatsChampion) o;
    return Objects.equals(this.groupClassification, ebkStatsChampion.groupClassification) &&
        Objects.equals(this.groupHistory, ebkStatsChampion.groupHistory) &&
        Objects.equals(this.knockoutStats, ebkStatsChampion.knockoutStats) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupClassification, groupHistory, knockoutStats, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EbkStatsChampion {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    groupClassification: ").append(toIndentedString(groupClassification)).append("\n");
    sb.append("    groupHistory: ").append(toIndentedString(groupHistory)).append("\n");
    sb.append("    knockoutStats: ").append(toIndentedString(knockoutStats)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

