/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.TicketDetail;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Entity for send ticket data to External API 
 */
@ApiModel(description = "Entity for send ticket data to External API ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class SellTicketExternal {
  @SerializedName("timeSend")
  private OffsetDateTime timeSend = null;

  @SerializedName("calculationId")
  private Integer calculationId = null;

  @SerializedName("walletId")
  private Long walletId = null;

  @SerializedName("walletExtToken")
  private String walletExtToken = null;

  @SerializedName("tagsId")
  private Integer tagsId = null;

  @SerializedName("sessionSettingsId")
  private Integer sessionSettingsId = null;

  @SerializedName("entityExtId")
  private String entityExtId = null;

  @SerializedName("parentId")
  private Integer parentId = null;

  @SerializedName("staffExtId")
  private String staffExtId = null;

  @SerializedName("staffParentId")
  private Integer staffParentId = null;

  @SerializedName("details")
  private TicketDetail details = null;
  
  public SellTicketExternal() {}
  
  public SellTicketExternal(Integer calculationId, String entityExtId, Integer parentId) {
	super();
	this.timeSend = OffsetDateTime.now();
	this.calculationId = calculationId;
	this.entityExtId = entityExtId;
	this.parentId = parentId;
	
	this.details = new TicketDetail();
	this.details.setEvents(new ArrayList<>());
	this.details.setSystemBets(new ArrayList<>());
}
  
  public TicketEvent addEvent(Long eventId,Integer playListId , Boolean isBanker) {
	  TicketEvent ticketEvent = new TicketEvent();
      ticketEvent.setEventId(eventId);
      ticketEvent.setPlaylistId(playListId);
      ticketEvent.setIsBanker(isBanker);
      ticketEvent.setBets(new ArrayList<>());
      
      this.details.getEvents().add(ticketEvent);
      return ticketEvent;
  }

public SellTicketExternal timeSend(OffsetDateTime timeSend) {
    this.timeSend = timeSend;
    return this;
  }

   /**
   * Timestamp (on client side) timestamp in RFC3339 / ISO_8601 format. Precission in milliseconds. for current ticket, used as transaction id, as no more than 2 tickets are allowed to be created on same timestamp. 
   * @return timeSend
  **/
  @ApiModelProperty(value = "Timestamp (on client side) timestamp in RFC3339 / ISO_8601 format. Precission in milliseconds. for current ticket, used as transaction id, as no more than 2 tickets are allowed to be created on same timestamp. ")
  public OffsetDateTime getTimeSend() {
    return timeSend;
  }

  public void setTimeSend(OffsetDateTime timeSend) {
    this.timeSend = timeSend;
  }

  public SellTicketExternal calculationId(Integer calculationId) {
    this.calculationId = calculationId;
    return this;
  }

   /**
   * Id of the CalculationContext to use for this ticket. 
   * @return calculationId
  **/
  @ApiModelProperty(value = "Id of the CalculationContext to use for this ticket. ")
  public Integer getCalculationId() {
    return calculationId;
  }

  public void setCalculationId(Integer calculationId) {
    this.calculationId = calculationId;
  }

  public SellTicketExternal walletId(Long walletId) {
    this.walletId = walletId;
    return this;
  }

   /**
   * The default wallet identifier. For non-promotional stake and receive final payment. If not provided, would be solved based in priority of wallets with compatible currency. Optional 
   * @return walletId
  **/
  @ApiModelProperty(value = "The default wallet identifier. For non-promotional stake and receive final payment. If not provided, would be solved based in priority of wallets with compatible currency. Optional ")
  public Long getWalletId() {
    return walletId;
  }

  public void setWalletId(Long walletId) {
    this.walletId = walletId;
  }

  public SellTicketExternal walletExtToken(String walletExtToken) {
    this.walletExtToken = walletExtToken;
    return this;
  }

   /**
   * External token for Wallet integration 
   * @return walletExtToken
  **/
  @ApiModelProperty(value = "External token for Wallet integration ")
  public String getWalletExtToken() {
    return walletExtToken;
  }

  public void setWalletExtToken(String walletExtToken) {
    this.walletExtToken = walletExtToken;
  }

  public SellTicketExternal tagsId(Integer tagsId) {
    this.tagsId = tagsId;
    return this;
  }

   /**
   * Id of the group of tags assigned to this ticket. 
   * @return tagsId
  **/
  @ApiModelProperty(value = "Id of the group of tags assigned to this ticket. ")
  public Integer getTagsId() {
    return tagsId;
  }

  public void setTagsId(Integer tagsId) {
    this.tagsId = tagsId;
  }

  public SellTicketExternal sessionSettingsId(Integer sessionSettingsId) {
    this.sessionSettingsId = sessionSettingsId;
    return this;
  }

   /**
   * TODO 
   * @return sessionSettingsId
  **/
  @ApiModelProperty(value = "TODO ")
  public Integer getSessionSettingsId() {
    return sessionSettingsId;
  }

  public void setSessionSettingsId(Integer sessionSettingsId) {
    this.sessionSettingsId = sessionSettingsId;
  }

  public SellTicketExternal entityExtId(String entityExtId) {
    this.entityExtId = entityExtId;
    return this;
  }

   /**
   * External id, for 3rd party integrations. 
   * @return entityExtId
  **/
  @ApiModelProperty(value = "External id, for 3rd party integrations. ")
  public String getEntityExtId() {
    return entityExtId;
  }

  public void setEntityExtId(String entityExtId) {
    this.entityExtId = entityExtId;
  }

  public SellTicketExternal parentId(Integer parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * Unique internal id, used in API to refer entity. 
   * @return parentId
  **/
  @ApiModelProperty(value = "Unique internal id, used in API to refer entity. ")
  public Integer getParentId() {
    return parentId;
  }

  public void setParentId(Integer parentId) {
    this.parentId = parentId;
  }

  public SellTicketExternal staffExtId(String staffExtId) {
    this.staffExtId = staffExtId;
    return this;
  }

   /**
   * External id, for 3rd party integrations. 
   * @return staffExtId
  **/
  @ApiModelProperty(value = "External id, for 3rd party integrations. ")
  public String getStaffExtId() {
    return staffExtId;
  }

  public void setStaffExtId(String staffExtId) {
    this.staffExtId = staffExtId;
  }

  public SellTicketExternal staffParentId(Integer staffParentId) {
    this.staffParentId = staffParentId;
    return this;
  }

   /**
   * Unique internal id, used in API to refer entity. 
   * @return staffParentId
  **/
  @ApiModelProperty(value = "Unique internal id, used in API to refer entity. ")
  public Integer getStaffParentId() {
    return staffParentId;
  }

  public void setStaffParentId(Integer staffParentId) {
    this.staffParentId = staffParentId;
  }

  public SellTicketExternal details(TicketDetail details) {
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @ApiModelProperty(value = "")
  public TicketDetail getDetails() {
    return details;
  }

  public void setDetails(TicketDetail details) {
    this.details = details;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SellTicketExternal sellTicketExternal = (SellTicketExternal) o;
    return Objects.equals(this.timeSend, sellTicketExternal.timeSend) &&
        Objects.equals(this.calculationId, sellTicketExternal.calculationId) &&
        Objects.equals(this.walletId, sellTicketExternal.walletId) &&
        Objects.equals(this.walletExtToken, sellTicketExternal.walletExtToken) &&
        Objects.equals(this.tagsId, sellTicketExternal.tagsId) &&
        Objects.equals(this.sessionSettingsId, sellTicketExternal.sessionSettingsId) &&
        Objects.equals(this.entityExtId, sellTicketExternal.entityExtId) &&
        Objects.equals(this.parentId, sellTicketExternal.parentId) &&
        Objects.equals(this.staffExtId, sellTicketExternal.staffExtId) &&
        Objects.equals(this.staffParentId, sellTicketExternal.staffParentId) &&
        Objects.equals(this.details, sellTicketExternal.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timeSend, calculationId, walletId, walletExtToken, tagsId, sessionSettingsId, entityExtId, parentId, staffExtId, staffParentId, details);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SellTicketExternal {\n");
    
    sb.append("    timeSend: ").append(toIndentedString(timeSend)).append("\n");
    sb.append("    calculationId: ").append(toIndentedString(calculationId)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    walletExtToken: ").append(toIndentedString(walletExtToken)).append("\n");
    sb.append("    tagsId: ").append(toIndentedString(tagsId)).append("\n");
    sb.append("    sessionSettingsId: ").append(toIndentedString(sessionSettingsId)).append("\n");
    sb.append("    entityExtId: ").append(toIndentedString(entityExtId)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    staffExtId: ").append(toIndentedString(staffExtId)).append("\n");
    sb.append("    staffParentId: ").append(toIndentedString(staffParentId)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

