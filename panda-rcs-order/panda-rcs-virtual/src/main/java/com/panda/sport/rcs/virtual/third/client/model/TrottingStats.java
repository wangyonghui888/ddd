/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents updated properties for each trotting
 */
@ApiModel(description = "Represents updated properties for each trotting")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class TrottingStats {
  @SerializedName("forecast")
  private List<String> forecast = null;

  @SerializedName("handicap")
  private Float handicap = null;

  public TrottingStats forecast(List<String> forecast) {
    this.forecast = forecast;
    return this;
  }

  public TrottingStats addForecastItem(String forecastItem) {
    if (this.forecast == null) {
      this.forecast = new ArrayList<String>();
    }
    this.forecast.add(forecastItem);
    return this;
  }

   /**
   * Last trotting positions at five previous races.
   * @return forecast
  **/
  @ApiModelProperty(value = "Last trotting positions at five previous races.")
  public List<String> getForecast() {
    return forecast;
  }

  public void setForecast(List<String> forecast) {
    this.forecast = forecast;
  }

  public TrottingStats handicap(Float handicap) {
    this.handicap = handicap;
    return this;
  }

   /**
   * Get handicap
   * @return handicap
  **/
  @ApiModelProperty(value = "")
  public Float getHandicap() {
    return handicap;
  }

  public void setHandicap(Float handicap) {
    this.handicap = handicap;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrottingStats trottingStats = (TrottingStats) o;
    return Objects.equals(this.forecast, trottingStats.forecast) &&
        Objects.equals(this.handicap, trottingStats.handicap);
  }

  @Override
  public int hashCode() {
    return Objects.hash(forecast, handicap);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrottingStats {\n");
    
    sb.append("    forecast: ").append(toIndentedString(forecast)).append("\n");
    sb.append("    handicap: ").append(toIndentedString(handicap)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

