/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.ChGroupClassificationEntry;
import com.panda.sport.rcs.virtual.third.client.model.ChKnockoutClassificationEntry;
import com.panda.sport.rcs.virtual.third.client.model.EventBlockStats;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about stats of football event blocks. 
 */
@ApiModel(description = "Information about stats of football event blocks. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class ChEventBlockStats extends EventBlockStats {
  @SerializedName("groupClassification")
  private List<ChGroupClassificationEntry> groupClassification = null;

  @SerializedName("knockoutClassification")
  private List<ChKnockoutClassificationEntry> knockoutClassification = null;

  public ChEventBlockStats groupClassification(List<ChGroupClassificationEntry> groupClassification) {
    this.groupClassification = groupClassification;
    return this;
  }

  public ChEventBlockStats addGroupClassificationItem(ChGroupClassificationEntry groupClassificationItem) {
    if (this.groupClassification == null) {
      this.groupClassification = new ArrayList<ChGroupClassificationEntry>();
    }
    this.groupClassification.add(groupClassificationItem);
    return this;
  }

   /**
   * Identifier of groups in qualify stage, resulting of a size totalTeams / groups.size After qualify stage, a cup stage would start if number of groups &gt; 1. 
   * @return groupClassification
  **/
  @ApiModelProperty(value = "Identifier of groups in qualify stage, resulting of a size totalTeams / groups.size After qualify stage, a cup stage would start if number of groups > 1. ")
  public List<ChGroupClassificationEntry> getGroupClassification() {
    return groupClassification;
  }

  public void setGroupClassification(List<ChGroupClassificationEntry> groupClassification) {
    this.groupClassification = groupClassification;
  }

  public ChEventBlockStats knockoutClassification(List<ChKnockoutClassificationEntry> knockoutClassification) {
    this.knockoutClassification = knockoutClassification;
    return this;
  }

  public ChEventBlockStats addKnockoutClassificationItem(ChKnockoutClassificationEntry knockoutClassificationItem) {
    if (this.knockoutClassification == null) {
      this.knockoutClassification = new ArrayList<ChKnockoutClassificationEntry>();
    }
    this.knockoutClassification.add(knockoutClassificationItem);
    return this;
  }

   /**
   * Get knockoutClassification
   * @return knockoutClassification
  **/
  @ApiModelProperty(value = "")
  public List<ChKnockoutClassificationEntry> getKnockoutClassification() {
    return knockoutClassification;
  }

  public void setKnockoutClassification(List<ChKnockoutClassificationEntry> knockoutClassification) {
    this.knockoutClassification = knockoutClassification;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChEventBlockStats chEventBlockStats = (ChEventBlockStats) o;
    return Objects.equals(this.groupClassification, chEventBlockStats.groupClassification) &&
        Objects.equals(this.knockoutClassification, chEventBlockStats.knockoutClassification) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupClassification, knockoutClassification, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChEventBlockStats {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    groupClassification: ").append(toIndentedString(groupClassification)).append("\n");
    sb.append("    knockoutClassification: ").append(toIndentedString(knockoutClassification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

