/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.Participant;
import java.io.IOException;

/**
 * The motor bike race participant information. 
 */
@ApiModel(description = "The motor bike race participant information. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class EvMotorbikeParticipant extends Participant {
  @SerializedName("name")
  private String name = null;

  @SerializedName("speed")
  private Float speed = null;

  @SerializedName("stamina")
  private Float stamina = null;

  @SerializedName("wins")
  private Float wins = null;

  /**
   * Gets or Sets group
   */
  @JsonAdapter(GroupEnum.Adapter.class)
  public enum GroupEnum {
    NORMAL("NORMAL"),
    
    SLOW("SLOW");

    private String value;

    GroupEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GroupEnum fromValue(String text) {
      for (GroupEnum b : GroupEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<GroupEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GroupEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GroupEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return GroupEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("group")
  private GroupEnum group = null;

  public EvMotorbikeParticipant name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EvMotorbikeParticipant speed(Float speed) {
    this.speed = speed;
    return this;
  }

   /**
   * Get speed
   * @return speed
  **/
  @ApiModelProperty(value = "")
  public Float getSpeed() {
    return speed;
  }

  public void setSpeed(Float speed) {
    this.speed = speed;
  }

  public EvMotorbikeParticipant stamina(Float stamina) {
    this.stamina = stamina;
    return this;
  }

   /**
   * Get stamina
   * @return stamina
  **/
  @ApiModelProperty(value = "")
  public Float getStamina() {
    return stamina;
  }

  public void setStamina(Float stamina) {
    this.stamina = stamina;
  }

  public EvMotorbikeParticipant wins(Float wins) {
    this.wins = wins;
    return this;
  }

   /**
   * Get wins
   * @return wins
  **/
  @ApiModelProperty(value = "")
  public Float getWins() {
    return wins;
  }

  public void setWins(Float wins) {
    this.wins = wins;
  }

  public EvMotorbikeParticipant group(GroupEnum group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @ApiModelProperty(value = "")
  public GroupEnum getGroup() {
    return group;
  }

  public void setGroup(GroupEnum group) {
    this.group = group;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EvMotorbikeParticipant evMotorbikeParticipant = (EvMotorbikeParticipant) o;
    return Objects.equals(this.name, evMotorbikeParticipant.name) &&
        Objects.equals(this.speed, evMotorbikeParticipant.speed) &&
        Objects.equals(this.stamina, evMotorbikeParticipant.stamina) &&
        Objects.equals(this.wins, evMotorbikeParticipant.wins) &&
        Objects.equals(this.group, evMotorbikeParticipant.group) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, speed, stamina, wins, group, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EvMotorbikeParticipant {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    speed: ").append(toIndentedString(speed)).append("\n");
    sb.append("    stamina: ").append(toIndentedString(stamina)).append("\n");
    sb.append("    wins: ").append(toIndentedString(wins)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

