/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.EventResultData;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about result of Perfect Six event blocks. 
 */
@ApiModel(description = "Information about result of Perfect Six event blocks. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class SxEventResultData extends EventResultData {
  @SerializedName("cloverBalls")
  private List<Integer> cloverBalls = null;

  @SerializedName("isWinX2")
  private Boolean isWinX2 = null;

  @SerializedName("isSecondChance")
  private Boolean isSecondChance = null;

  @SerializedName("isExtra5balls")
  private Boolean isExtra5balls = null;

  public SxEventResultData cloverBalls(List<Integer> cloverBalls) {
    this.cloverBalls = cloverBalls;
    return this;
  }

  public SxEventResultData addCloverBallsItem(Integer cloverBallsItem) {
    if (this.cloverBalls == null) {
      this.cloverBalls = new ArrayList<Integer>();
    }
    this.cloverBalls.add(cloverBallsItem);
    return this;
  }

   /**
   * In each game, in two of the last 30 empty slots for the selected balls, clover symbols are displayed.If the player has a winning ticket,  and one of the numbers selected in the winning tip is drawn on a clover symbol slot, the winning amount for that tip is doubled. If both clover slots are covered by selected numbers of the same winning tip, the winnings are tripled. This bonus only applies to Number bets. 
   * @return cloverBalls
  **/
  @ApiModelProperty(value = "In each game, in two of the last 30 empty slots for the selected balls, clover symbols are displayed.If the player has a winning ticket,  and one of the numbers selected in the winning tip is drawn on a clover symbol slot, the winning amount for that tip is doubled. If both clover slots are covered by selected numbers of the same winning tip, the winnings are tripled. This bonus only applies to Number bets. ")
  public List<Integer> getCloverBalls() {
    return cloverBalls;
  }

  public void setCloverBalls(List<Integer> cloverBalls) {
    this.cloverBalls = cloverBalls;
  }

  public SxEventResultData isWinX2(Boolean isWinX2) {
    this.isWinX2 = isWinX2;
    return this;
  }

   /**
   * This game bonus will appear periodically after the betting window has closed and the event is about to start - there is no prior warning during the betting stage.  The screen will turn red and bonus graphics will be displayed. In this bonus game, all winnings are doubled.This bonus is randomly triggered and the probability of it  occurring is fixed and equal to 1/100. This bonus only applies to Number bets. 
   * @return isWinX2
  **/
  @ApiModelProperty(value = "This game bonus will appear periodically after the betting window has closed and the event is about to start - there is no prior warning during the betting stage.  The screen will turn red and bonus graphics will be displayed. In this bonus game, all winnings are doubled.This bonus is randomly triggered and the probability of it  occurring is fixed and equal to 1/100. This bonus only applies to Number bets. ")
  public Boolean isIsWinX2() {
    return isWinX2;
  }

  public void setIsWinX2(Boolean isWinX2) {
    this.isWinX2 = isWinX2;
  }

  public SxEventResultData isSecondChance(Boolean isSecondChance) {
    this.isSecondChance = isSecondChance;
    return this;
  }

   /**
   * This game bonus occurs after an event finishes, there is no prior warning during the betting stage. If it is triggered,  losing tickets from the event are valid for the next event also. Winning tickets from the first event will not be valid again. It is randomly triggered and the probability of it occurring is fixed and equal to 1/100. 
   * @return isSecondChance
  **/
  @ApiModelProperty(value = "This game bonus occurs after an event finishes, there is no prior warning during the betting stage. If it is triggered,  losing tickets from the event are valid for the next event also. Winning tickets from the first event will not be valid again. It is randomly triggered and the probability of it occurring is fixed and equal to 1/100. ")
  public Boolean isIsSecondChance() {
    return isSecondChance;
  }

  public void setIsSecondChance(Boolean isSecondChance) {
    this.isSecondChance = isSecondChance;
  }

  public SxEventResultData isExtra5balls(Boolean isExtra5balls) {
    this.isExtra5balls = isExtra5balls;
    return this;
  }

   /**
   * Bonus game appears periodically after the bets are closed. At the end of the draw 5 extra balls are pulled out 
   * @return isExtra5balls
  **/
  @ApiModelProperty(value = "Bonus game appears periodically after the bets are closed. At the end of the draw 5 extra balls are pulled out ")
  public Boolean isIsExtra5balls() {
    return isExtra5balls;
  }

  public void setIsExtra5balls(Boolean isExtra5balls) {
    this.isExtra5balls = isExtra5balls;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SxEventResultData sxEventResultData = (SxEventResultData) o;
    return Objects.equals(this.cloverBalls, sxEventResultData.cloverBalls) &&
        Objects.equals(this.isWinX2, sxEventResultData.isWinX2) &&
        Objects.equals(this.isSecondChance, sxEventResultData.isSecondChance) &&
        Objects.equals(this.isExtra5balls, sxEventResultData.isExtra5balls) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloverBalls, isWinX2, isSecondChance, isExtra5balls, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SxEventResultData {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    cloverBalls: ").append(toIndentedString(cloverBalls)).append("\n");
    sb.append("    isWinX2: ").append(toIndentedString(isWinX2)).append("\n");
    sb.append("    isSecondChance: ").append(toIndentedString(isSecondChance)).append("\n");
    sb.append("    isExtra5balls: ").append(toIndentedString(isExtra5balls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

