/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Info to show in tickets. Perhaps we need to use tickets skins and delete this info. 
 */
@ApiModel(description = "Info to show in tickets. Perhaps we need to use tickets skins and delete this info. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class TicketAdvertisement {
  @SerializedName("ticketTexts")
  private List<String> ticketTexts = null;

  @SerializedName("ticketTopUrl")
  private String ticketTopUrl = null;

  @SerializedName("legalText")
  private String legalText = null;

  public TicketAdvertisement ticketTexts(List<String> ticketTexts) {
    this.ticketTexts = ticketTexts;
    return this;
  }

  public TicketAdvertisement addTicketTextsItem(String ticketTextsItem) {
    if (this.ticketTexts == null) {
      this.ticketTexts = new ArrayList<String>();
    }
    this.ticketTexts.add(ticketTextsItem);
    return this;
  }

   /**
   * adverstiment text to show in ticket. Max 6 texts. 
   * @return ticketTexts
  **/
  @ApiModelProperty(value = "adverstiment text to show in ticket. Max 6 texts. ")
  public List<String> getTicketTexts() {
    return ticketTexts;
  }

  public void setTicketTexts(List<String> ticketTexts) {
    this.ticketTexts = ticketTexts;
  }

  public TicketAdvertisement ticketTopUrl(String ticketTopUrl) {
    this.ticketTopUrl = ticketTopUrl;
    return this;
  }

   /**
   * url to show top logo image in the ticket  
   * @return ticketTopUrl
  **/
  @ApiModelProperty(value = "url to show top logo image in the ticket  ")
  public String getTicketTopUrl() {
    return ticketTopUrl;
  }

  public void setTicketTopUrl(String ticketTopUrl) {
    this.ticketTopUrl = ticketTopUrl;
  }

  public TicketAdvertisement legalText(String legalText) {
    this.legalText = legalText;
    return this;
  }

   /**
   * legal text to show on bottom ticket 
   * @return legalText
  **/
  @ApiModelProperty(value = "legal text to show on bottom ticket ")
  public String getLegalText() {
    return legalText;
  }

  public void setLegalText(String legalText) {
    this.legalText = legalText;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TicketAdvertisement ticketAdvertisement = (TicketAdvertisement) o;
    return Objects.equals(this.ticketTexts, ticketAdvertisement.ticketTexts) &&
        Objects.equals(this.ticketTopUrl, ticketAdvertisement.ticketTopUrl) &&
        Objects.equals(this.legalText, ticketAdvertisement.legalText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ticketTexts, ticketTopUrl, legalText);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TicketAdvertisement {\n");
    
    sb.append("    ticketTexts: ").append(toIndentedString(ticketTexts)).append("\n");
    sb.append("    ticketTopUrl: ").append(toIndentedString(ticketTopUrl)).append("\n");
    sb.append("    legalText: ").append(toIndentedString(legalText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

