/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.EventStats;
import com.panda.sport.rcs.virtual.third.client.model.GameEventData;
import com.panda.sport.rcs.virtual.third.client.model.Participant;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Entity that stores all the information related to an event in the markets stage. Probabilities    - if PLAYLIST &amp;&amp; GL &amp;&amp; OddsettingsId !&#x3D; empty -&gt; probabilityValues &amp;&amp; kValues &#x3D;&#x3D; empty &amp;&amp; oddValue !&#x3D; empty   - if PLAYLIST &amp;&amp; GL &amp;&amp; OddsettingsId &#x3D;&#x3D; empty -&gt; probabilityValues &amp;&amp; kValues !&#x3D; empty &amp;&amp; oddValue &#x3D;&#x3D; empty   - if PLAYLIST &amp;&amp; !GL &amp;&amp; OddsettingsId !&#x3D; empty -&gt; probabilityValues &amp;&amp; kValues &#x3D;&#x3D; empty &amp;&amp; oddValue !&#x3D; empty   - if PLAYLIST &amp;&amp; !GL &amp;&amp; OddsettingsId &#x3D;&#x3D; empty -&gt; probabilityValues !&#x3D; empty &amp;&amp; kValues &#x3D;&#x3D; empty &amp;&amp; oddValue &#x3D;&#x3D; empty   - if CHANNEL &amp;&amp; (GL || !GL) &amp;&amp; OddsettingsId !&#x3D; empty -&gt; probabilityValues &amp;&amp; kValues &#x3D;&#x3D; empty &amp;&amp; oddValue !&#x3D; empty 
 */
@ApiModel(description = "Entity that stores all the information related to an event in the markets stage. Probabilities    - if PLAYLIST && GL && OddsettingsId != empty -> probabilityValues && kValues == empty && oddValue != empty   - if PLAYLIST && GL && OddsettingsId == empty -> probabilityValues && kValues != empty && oddValue == empty   - if PLAYLIST && !GL && OddsettingsId != empty -> probabilityValues && kValues == empty && oddValue != empty   - if PLAYLIST && !GL && OddsettingsId == empty -> probabilityValues != empty && kValues == empty && oddValue == empty   - if CHANNEL && (GL || !GL) && OddsettingsId != empty -> probabilityValues && kValues == empty && oddValue != empty ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class EventData {
  @SerializedName("participants")
  private List<Participant> participants = new ArrayList<Participant>();

  @SerializedName("probabilityValues")
  private List<Integer> probabilityValues = null;

  @SerializedName("kValues")
  private List<Integer> kValues = null;

  @SerializedName("oddValues")
  private List<String> oddValues = null;

  @SerializedName("oddSettings")
  private String oddSettings = null;

  @SerializedName("liveUrl")
  private String liveUrl = null;

  @SerializedName("stats")
  private EventStats stats = null;

  @SerializedName("gameEventData")
  private GameEventData gameEventData = null;

  public EventData participants(List<Participant> participants) {
    this.participants = participants;
    return this;
  }

  public EventData addParticipantsItem(Participant participantsItem) {
    this.participants.add(participantsItem);
    return this;
  }

   /**
   * Participants. Open for extensibility. 
   * @return participants
  **/
  @ApiModelProperty(required = true, value = "Participants. Open for extensibility. ")
  public List<Participant> getParticipants() {
    return participants;
  }

  public void setParticipants(List<Participant> participants) {
    this.participants = participants;
  }

  public EventData probabilityValues(List<Integer> probabilityValues) {
    this.probabilityValues = probabilityValues;
    return this;
  }

  public EventData addProbabilityValuesItem(Integer probabilityValuesItem) {
    if (this.probabilityValues == null) {
      this.probabilityValues = new ArrayList<Integer>();
    }
    this.probabilityValues.add(probabilityValuesItem);
    return this;
  }

   /**
   * Probability transported as integer mapping prob 0--1 -&gt; 0--999.999. Odds should be calculated on client side according to OddSettings. 
   * @return probabilityValues
  **/
  @ApiModelProperty(value = "Probability transported as integer mapping prob 0--1 -> 0--999.999. Odds should be calculated on client side according to OddSettings. ")
  public List<Integer> getProbabilityValues() {
    return probabilityValues;
  }

  public void setProbabilityValues(List<Integer> probabilityValues) {
    this.probabilityValues = probabilityValues;
  }

  public EventData kValues(List<Integer> kValues) {
    this.kValues = kValues;
    return this;
  }

  public EventData addKValuesItem(Integer kValuesItem) {
    if (this.kValues == null) {
      this.kValues = new ArrayList<Integer>();
    }
    this.kValues.add(kValuesItem);
    return this;
  }

   /**
   * k value transported as integer mapping prob 0--1 -&gt; 0--999.999. Odds should be calculated on client side according to OddSettings. Only abal 
   * @return kValues
  **/
  @ApiModelProperty(value = "k value transported as integer mapping prob 0--1 -> 0--999.999. Odds should be calculated on client side according to OddSettings. Only abal ")
  public List<Integer> getKValues() {
    return kValues;
  }

  public void setKValues(List<Integer> kValues) {
    this.kValues = kValues;
  }

  public EventData oddValues(List<String> oddValues) {
    this.oddValues = oddValues;
    return this;
  }

  public EventData addOddValuesItem(String oddValuesItem) {
    if (this.oddValues == null) {
      this.oddValues = new ArrayList<String>();
    }
    this.oddValues.add(oddValuesItem);
    return this;
  }

   /**
   * Explicit odd value. Sample: 2.34
   * @return oddValues
  **/
  @ApiModelProperty(value = "Explicit odd value. Sample: 2.34")
  public List<String> getOddValues() {
    return oddValues;
  }

  public void setOddValues(List<String> oddValues) {
    this.oddValues = oddValues;
  }

  public EventData oddSettings(String oddSettings) {
    this.oddSettings = oddSettings;
    return this;
  }

   /**
   * Json with the oddSettings of the different markets
   * @return oddSettings
  **/
  @ApiModelProperty(value = "Json with the oddSettings of the different markets")
  public String getOddSettings() {
    return oddSettings;
  }

  public void setOddSettings(String oddSettings) {
    this.oddSettings = oddSettings;
  }

  public EventData liveUrl(String liveUrl) {
    this.liveUrl = liveUrl;
    return this;
  }

   /**
   * Live streaming URL for live events
   * @return liveUrl
  **/
  @ApiModelProperty(value = "Live streaming URL for live events")
  public String getLiveUrl() {
    return liveUrl;
  }

  public void setLiveUrl(String liveUrl) {
    this.liveUrl = liveUrl;
  }

  public EventData stats(EventStats stats) {
    this.stats = stats;
    return this;
  }

   /**
   * Get stats
   * @return stats
  **/
  @ApiModelProperty(value = "")
  public EventStats getStats() {
    return stats;
  }

  public void setStats(EventStats stats) {
    this.stats = stats;
  }

  public EventData gameEventData(GameEventData gameEventData) {
    this.gameEventData = gameEventData;
    return this;
  }

   /**
   * Get gameEventData
   * @return gameEventData
  **/
  @ApiModelProperty(value = "")
  public GameEventData getGameEventData() {
    return gameEventData;
  }

  public void setGameEventData(GameEventData gameEventData) {
    this.gameEventData = gameEventData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventData eventData = (EventData) o;
    return Objects.equals(this.participants, eventData.participants) &&
        Objects.equals(this.probabilityValues, eventData.probabilityValues) &&
        Objects.equals(this.kValues, eventData.kValues) &&
        Objects.equals(this.oddValues, eventData.oddValues) &&
        Objects.equals(this.oddSettings, eventData.oddSettings) &&
        Objects.equals(this.liveUrl, eventData.liveUrl) &&
        Objects.equals(this.stats, eventData.stats) &&
        Objects.equals(this.gameEventData, eventData.gameEventData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(participants, probabilityValues, kValues, oddValues, oddSettings, liveUrl, stats, gameEventData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventData {\n");
    
    sb.append("    participants: ").append(toIndentedString(participants)).append("\n");
    sb.append("    probabilityValues: ").append(toIndentedString(probabilityValues)).append("\n");
    sb.append("    kValues: ").append(toIndentedString(kValues)).append("\n");
    sb.append("    oddValues: ").append(toIndentedString(oddValues)).append("\n");
    sb.append("    oddSettings: ").append(toIndentedString(oddSettings)).append("\n");
    sb.append("    liveUrl: ").append(toIndentedString(liveUrl)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    gameEventData: ").append(toIndentedString(gameEventData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

