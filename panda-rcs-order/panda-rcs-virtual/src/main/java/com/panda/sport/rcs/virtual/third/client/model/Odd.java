/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Information about odd of event. 
 */
@ApiModel(description = "Information about odd of event. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class Odd {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("probability")
  private Double probability = null;

  @SerializedName("k")
  private Double k = null;

  @SerializedName("value")
  private String value = null;

  public Odd id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Odd name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Odd probability(Double probability) {
    this.probability = probability;
    return this;
  }

   /**
   * The probability of victory. 
   * @return probability
  **/
  @ApiModelProperty(value = "The probability of victory. ")
  public Double getProbability() {
    return probability;
  }

  public void setProbability(Double probability) {
    this.probability = probability;
  }

  public Odd k(Double k) {
    this.k = k;
    return this;
  }

   /**
   * TODO 
   * @return k
  **/
  @ApiModelProperty(value = "TODO ")
  public Double getK() {
    return k;
  }

  public void setK(Double k) {
    this.k = k;
  }

  public Odd value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The value information. 
   * @return value
  **/
  @ApiModelProperty(value = "The value information. ")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Odd odd = (Odd) o;
    return Objects.equals(this.id, odd.id) &&
        Objects.equals(this.name, odd.name);
//        Objects.equals(this.probability, odd.probability) &&
//        Objects.equals(this.k, odd.k) &&
//        Objects.equals(this.value, odd.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, probability, k, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Odd {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    probability: ").append(toIndentedString(probability)).append("\n");
    sb.append("    k: ").append(toIndentedString(k)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

