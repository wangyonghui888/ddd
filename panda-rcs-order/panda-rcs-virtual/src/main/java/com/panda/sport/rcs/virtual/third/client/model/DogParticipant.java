/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.RaceParticipant;
import java.io.IOException;
import java.util.List;

/**
 * The dog race participant information. 
 */
@ApiModel(description = "The dog race participant information. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class DogParticipant extends RaceParticipant {
  @SerializedName("age")
  private Integer age = null;

  @SerializedName("sex")
  private String sex = null;

  @SerializedName("timeSinceSeason")
  private Integer timeSinceSeason = null;

  @SerializedName("art")
  private Float art = null;

  @SerializedName("aggressiveness")
  private Float aggressiveness = null;

  @SerializedName("bestTime")
  private Float bestTime = null;

  @SerializedName("currentWeight")
  private Float currentWeight = null;

  @SerializedName("idealWeight")
  private Float idealWeight = null;

  @SerializedName("racingLine")
  private String racingLine = null;

  @SerializedName("ability")
  private Float ability = null;

  @SerializedName("star")
  private Integer star = null;

  @SerializedName("pace")
  private String pace = null;

  public DogParticipant age(Integer age) {
    this.age = age;
    return this;
  }

   /**
   * Age of the dog participant 
   * @return age
  **/
  @ApiModelProperty(value = "Age of the dog participant ")
  public Integer getAge() {
    return age;
  }

  public void setAge(Integer age) {
    this.age = age;
  }

  public DogParticipant sex(String sex) {
    this.sex = sex;
    return this;
  }

   /**
   * Sex of the dog participant 
   * @return sex
  **/
  @ApiModelProperty(value = "Sex of the dog participant ")
  public String getSex() {
    return sex;
  }

  public void setSex(String sex) {
    this.sex = sex;
  }

  public DogParticipant timeSinceSeason(Integer timeSinceSeason) {
    this.timeSinceSeason = timeSinceSeason;
    return this;
  }

   /**
   * Time since season 
   * @return timeSinceSeason
  **/
  @ApiModelProperty(value = "Time since season ")
  public Integer getTimeSinceSeason() {
    return timeSinceSeason;
  }

  public void setTimeSinceSeason(Integer timeSinceSeason) {
    this.timeSinceSeason = timeSinceSeason;
  }

  public DogParticipant art(Float art) {
    this.art = art;
    return this;
  }

   /**
   * Art 
   * @return art
  **/
  @ApiModelProperty(value = "Art ")
  public Float getArt() {
    return art;
  }

  public void setArt(Float art) {
    this.art = art;
  }

  public DogParticipant aggressiveness(Float aggressiveness) {
    this.aggressiveness = aggressiveness;
    return this;
  }

   /**
   * Aggressiveness of the dog participant 
   * @return aggressiveness
  **/
  @ApiModelProperty(value = "Aggressiveness of the dog participant ")
  public Float getAggressiveness() {
    return aggressiveness;
  }

  public void setAggressiveness(Float aggressiveness) {
    this.aggressiveness = aggressiveness;
  }

  public DogParticipant bestTime(Float bestTime) {
    this.bestTime = bestTime;
    return this;
  }

   /**
   * Best time of the dog participant 
   * @return bestTime
  **/
  @ApiModelProperty(value = "Best time of the dog participant ")
  public Float getBestTime() {
    return bestTime;
  }

  public void setBestTime(Float bestTime) {
    this.bestTime = bestTime;
  }

  public DogParticipant currentWeight(Float currentWeight) {
    this.currentWeight = currentWeight;
    return this;
  }

   /**
   * Current weight the dog participant 
   * @return currentWeight
  **/
  @ApiModelProperty(value = "Current weight the dog participant ")
  public Float getCurrentWeight() {
    return currentWeight;
  }

  public void setCurrentWeight(Float currentWeight) {
    this.currentWeight = currentWeight;
  }

  public DogParticipant idealWeight(Float idealWeight) {
    this.idealWeight = idealWeight;
    return this;
  }

   /**
   * Ideal weight of the dog participant 
   * @return idealWeight
  **/
  @ApiModelProperty(value = "Ideal weight of the dog participant ")
  public Float getIdealWeight() {
    return idealWeight;
  }

  public void setIdealWeight(Float idealWeight) {
    this.idealWeight = idealWeight;
  }

  public DogParticipant racingLine(String racingLine) {
    this.racingLine = racingLine;
    return this;
  }

   /**
   * Dog racing line 
   * @return racingLine
  **/
  @ApiModelProperty(value = "Dog racing line ")
  public String getRacingLine() {
    return racingLine;
  }

  public void setRacingLine(String racingLine) {
    this.racingLine = racingLine;
  }

  public DogParticipant ability(Float ability) {
    this.ability = ability;
    return this;
  }

   /**
   * Ability of the dog participant 
   * @return ability
  **/
  @ApiModelProperty(value = "Ability of the dog participant ")
  public Float getAbility() {
    return ability;
  }

  public void setAbility(Float ability) {
    this.ability = ability;
  }

  public DogParticipant star(Integer star) {
    this.star = star;
    return this;
  }

   /**
   * Dog quality from 1 to 5 
   * minimum: 1
   * maximum: 5
   * @return star
  **/
  @ApiModelProperty(value = "Dog quality from 1 to 5 ")
  public Integer getStar() {
    return star;
  }

  public void setStar(Integer star) {
    this.star = star;
  }

  public DogParticipant pace(String pace) {
    this.pace = pace;
    return this;
  }

   /**
   * Dog Pace on race. 
   * @return pace
  **/
  @ApiModelProperty(value = "Dog Pace on race. ")
  public String getPace() {
    return pace;
  }

  public void setPace(String pace) {
    this.pace = pace;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DogParticipant dogParticipant = (DogParticipant) o;
    return Objects.equals(this.age, dogParticipant.age) &&
        Objects.equals(this.sex, dogParticipant.sex) &&
        Objects.equals(this.timeSinceSeason, dogParticipant.timeSinceSeason) &&
        Objects.equals(this.art, dogParticipant.art) &&
        Objects.equals(this.aggressiveness, dogParticipant.aggressiveness) &&
        Objects.equals(this.bestTime, dogParticipant.bestTime) &&
        Objects.equals(this.currentWeight, dogParticipant.currentWeight) &&
        Objects.equals(this.idealWeight, dogParticipant.idealWeight) &&
        Objects.equals(this.racingLine, dogParticipant.racingLine) &&
        Objects.equals(this.ability, dogParticipant.ability) &&
        Objects.equals(this.star, dogParticipant.star) &&
        Objects.equals(this.pace, dogParticipant.pace) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(age, sex, timeSinceSeason, art, aggressiveness, bestTime, currentWeight, idealWeight, racingLine, ability, star, pace, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DogParticipant {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    sex: ").append(toIndentedString(sex)).append("\n");
    sb.append("    timeSinceSeason: ").append(toIndentedString(timeSinceSeason)).append("\n");
    sb.append("    art: ").append(toIndentedString(art)).append("\n");
    sb.append("    aggressiveness: ").append(toIndentedString(aggressiveness)).append("\n");
    sb.append("    bestTime: ").append(toIndentedString(bestTime)).append("\n");
    sb.append("    currentWeight: ").append(toIndentedString(currentWeight)).append("\n");
    sb.append("    idealWeight: ").append(toIndentedString(idealWeight)).append("\n");
    sb.append("    racingLine: ").append(toIndentedString(racingLine)).append("\n");
    sb.append("    ability: ").append(toIndentedString(ability)).append("\n");
    sb.append("    star: ").append(toIndentedString(star)).append("\n");
    sb.append("    pace: ").append(toIndentedString(pace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

