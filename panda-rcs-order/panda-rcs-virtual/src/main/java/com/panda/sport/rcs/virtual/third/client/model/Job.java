/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.ReportParams;
import java.io.IOException;

/**
 * Job
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class Job {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("extId")
  private String extId = null;

  @SerializedName("extGroupId")
  private String extGroupId = null;

  @SerializedName("creatorId")
  private Integer creatorId = null;

  /**
   * Status of current scheduler, could be ENABLED, DISABLED or DONE
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ENABLED("ENABLED"),
    
    DISABLED("DISABLED"),
    
    DONE("DONE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("lastTime")
  private Long lastTime = null;

  @SerializedName("scheduleTime")
  private Integer scheduleTime = null;

  /**
   * Seconds / Natural days / Natural Week / Natural month
   */
  @JsonAdapter(FrequencyUnitEnum.Adapter.class)
  public enum FrequencyUnitEnum {
    SECONDS("SECONDS"),
    
    NATURAL_DAYS("NATURAL_DAYS"),
    
    NATURAL_WEEK("NATURAL_WEEK"),
    
    NATURAL_MONTH("NATURAL_MONTH");

    private String value;

    FrequencyUnitEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FrequencyUnitEnum fromValue(String text) {
      for (FrequencyUnitEnum b : FrequencyUnitEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FrequencyUnitEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FrequencyUnitEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FrequencyUnitEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FrequencyUnitEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("frequencyUnit")
  private FrequencyUnitEnum frequencyUnit = null;

  @SerializedName("frequencyTimeZone")
  private String frequencyTimeZone = null;

  @SerializedName("frequencyAmount")
  private Integer frequencyAmount = null;

  @SerializedName("startTime")
  private Long startTime = null;

  @SerializedName("endTime")
  private Long endTime = null;

  @SerializedName("reportType")
  private String reportType = null;

  @SerializedName("reportParams")
  private ReportParams reportParams = null;

  @SerializedName("entityId")
  private Integer entityId = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("fileName")
  private String fileName = null;

  @SerializedName("deprecationDays")
  private Integer deprecationDays = null;

  public Job id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Unique ID of job scheduler
   * @return id
  **/
  @ApiModelProperty(value = "Unique ID of job scheduler")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Job extId(String extId) {
    this.extId = extId;
    return this;
  }

   /**
   * ExternalId reference to jobId generator
   * @return extId
  **/
  @ApiModelProperty(value = "ExternalId reference to jobId generator")
  public String getExtId() {
    return extId;
  }

  public void setExtId(String extId) {
    this.extId = extId;
  }

  public Job extGroupId(String extGroupId) {
    this.extGroupId = extGroupId;
    return this;
  }

   /**
   * Id used for aggregated reports on same creatorId
   * @return extGroupId
  **/
  @ApiModelProperty(value = "Id used for aggregated reports on same creatorId")
  public String getExtGroupId() {
    return extGroupId;
  }

  public void setExtGroupId(String extGroupId) {
    this.extGroupId = extGroupId;
  }

  public Job creatorId(Integer creatorId) {
    this.creatorId = creatorId;
    return this;
  }

   /**
   * Id of entity which requested generation of this report
   * @return creatorId
  **/
  @ApiModelProperty(value = "Id of entity which requested generation of this report")
  public Integer getCreatorId() {
    return creatorId;
  }

  public void setCreatorId(Integer creatorId) {
    this.creatorId = creatorId;
  }

  public Job status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status of current scheduler, could be ENABLED, DISABLED or DONE
   * @return status
  **/
  @ApiModelProperty(value = "Status of current scheduler, could be ENABLED, DISABLED or DONE")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Job lastTime(Long lastTime) {
    this.lastTime = lastTime;
    return this;
  }

   /**
   * Last time of report generated on current scheduler
   * @return lastTime
  **/
  @ApiModelProperty(value = "Last time of report generated on current scheduler")
  public Long getLastTime() {
    return lastTime;
  }

  public void setLastTime(Long lastTime) {
    this.lastTime = lastTime;
  }

  public Job scheduleTime(Integer scheduleTime) {
    this.scheduleTime = scheduleTime;
    return this;
  }

   /**
   * Beginning of schedule time trigger frequency
   * @return scheduleTime
  **/
  @ApiModelProperty(value = "Beginning of schedule time trigger frequency")
  public Integer getScheduleTime() {
    return scheduleTime;
  }

  public void setScheduleTime(Integer scheduleTime) {
    this.scheduleTime = scheduleTime;
  }

  public Job frequencyUnit(FrequencyUnitEnum frequencyUnit) {
    this.frequencyUnit = frequencyUnit;
    return this;
  }

   /**
   * Seconds / Natural days / Natural Week / Natural month
   * @return frequencyUnit
  **/
  @ApiModelProperty(value = "Seconds / Natural days / Natural Week / Natural month")
  public FrequencyUnitEnum getFrequencyUnit() {
    return frequencyUnit;
  }

  public void setFrequencyUnit(FrequencyUnitEnum frequencyUnit) {
    this.frequencyUnit = frequencyUnit;
  }

  public Job frequencyTimeZone(String frequencyTimeZone) {
    this.frequencyTimeZone = frequencyTimeZone;
    return this;
  }

   /**
   * Timezone used to calculate natural calendar time.
   * @return frequencyTimeZone
  **/
  @ApiModelProperty(value = "Timezone used to calculate natural calendar time.")
  public String getFrequencyTimeZone() {
    return frequencyTimeZone;
  }

  public void setFrequencyTimeZone(String frequencyTimeZone) {
    this.frequencyTimeZone = frequencyTimeZone;
  }

  public Job frequencyAmount(Integer frequencyAmount) {
    this.frequencyAmount = frequencyAmount;
    return this;
  }

   /**
   * Amount of frequency units between each schedule job check, and sice of each slice of time
   * @return frequencyAmount
  **/
  @ApiModelProperty(value = "Amount of frequency units between each schedule job check, and sice of each slice of time")
  public Integer getFrequencyAmount() {
    return frequencyAmount;
  }

  public void setFrequencyAmount(Integer frequencyAmount) {
    this.frequencyAmount = frequencyAmount;
  }

  public Job startTime(Long startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Start time of original data related to this report (&gt;&#x3D;)
   * @return startTime
  **/
  @ApiModelProperty(value = "Start time of original data related to this report (>=)")
  public Long getStartTime() {
    return startTime;
  }

  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }

  public Job endTime(Long endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * End time, non inclusive limit of original data related to this report (&lt;)
   * @return endTime
  **/
  @ApiModelProperty(value = "End time, non inclusive limit of original data related to this report (<)")
  public Long getEndTime() {
    return endTime;
  }

  public void setEndTime(Long endTime) {
    this.endTime = endTime;
  }

  public Job reportType(String reportType) {
    this.reportType = reportType;
    return this;
  }

   /**
   * Identifies the type of the report params/data
   * @return reportType
  **/
  @ApiModelProperty(value = "Identifies the type of the report params/data")
  public String getReportType() {
    return reportType;
  }

  public void setReportType(String reportType) {
    this.reportType = reportType;
  }

  public Job reportParams(ReportParams reportParams) {
    this.reportParams = reportParams;
    return this;
  }

   /**
   * Get reportParams
   * @return reportParams
  **/
  @ApiModelProperty(value = "")
  public ReportParams getReportParams() {
    return reportParams;
  }

  public void setReportParams(ReportParams reportParams) {
    this.reportParams = reportParams;
  }

  public Job entityId(Integer entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * Root entity for generation of this report.
   * @return entityId
  **/
  @ApiModelProperty(value = "Root entity for generation of this report.")
  public Integer getEntityId() {
    return entityId;
  }

  public void setEntityId(Integer entityId) {
    this.entityId = entityId;
  }

  public Job description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Human readable description of each report generated Can include following constants inside strings definitions, that will be instanced on final values for each report generated  | Constant  | Value                                                         | |-----------|---------------------------------------------------------------| | @from     | Start time in yyyy-mm-dd format                               | | @to       | End time in yyyy-mm-dd format                                 | | @yyyy     | Start year                                                    | | @mm       | Start month                                                   | | @dd       | Start day                                                     | | @hhmmss   | Start hh::mm::ss.  in 24h format in timezone defined for task | | @YYYY     | End year                                                      | | @MM       | End month                                                     | | @DD       | End day                                                       | | @HHMMSS   | End hh::mm::ss.  in 24h format in timezone defined for task   | 
   * @return description
  **/
  @ApiModelProperty(value = "Human readable description of each report generated Can include following constants inside strings definitions, that will be instanced on final values for each report generated  | Constant  | Value                                                         | |-----------|---------------------------------------------------------------| | @from     | Start time in yyyy-mm-dd format                               | | @to       | End time in yyyy-mm-dd format                                 | | @yyyy     | Start year                                                    | | @mm       | Start month                                                   | | @dd       | Start day                                                     | | @hhmmss   | Start hh::mm::ss.  in 24h format in timezone defined for task | | @YYYY     | End year                                                      | | @MM       | End month                                                     | | @DD       | End day                                                       | | @HHMMSS   | End hh::mm::ss.  in 24h format in timezone defined for task   | ")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Job fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Filename of current report to be attached on target Can include following constants inside strings definitions, that will be instanced on final values for each report generated  | Constant  | Value                                                         | |-----------|---------------------------------------------------------------| | @from     | Start time in yyyy-mm-dd format                               | | @to       | End time in yyyy-mm-dd format                                 | | @yyyy     | Start year                                                    | | @mm       | Start month                                                   | | @dd       | Start day                                                     | | @hhmmss   | Start hh::mm::ss.  in 24h format in timezone defined for task | | @YYYY     | End year                                                      | | @MM       | End month                                                     | | @DD       | End day                                                       | | @HHMMSS   | End hh::mm::ss.  in 24h format in timezone defined for task   | 
   * @return fileName
  **/
  @ApiModelProperty(value = "Filename of current report to be attached on target Can include following constants inside strings definitions, that will be instanced on final values for each report generated  | Constant  | Value                                                         | |-----------|---------------------------------------------------------------| | @from     | Start time in yyyy-mm-dd format                               | | @to       | End time in yyyy-mm-dd format                                 | | @yyyy     | Start year                                                    | | @mm       | Start month                                                   | | @dd       | Start day                                                     | | @hhmmss   | Start hh::mm::ss.  in 24h format in timezone defined for task | | @YYYY     | End year                                                      | | @MM       | End month                                                     | | @DD       | End day                                                       | | @HHMMSS   | End hh::mm::ss.  in 24h format in timezone defined for task   | ")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public Job deprecationDays(Integer deprecationDays) {
    this.deprecationDays = deprecationDays;
    return this;
  }

   /**
   * Days until deprecation of each individual generated report on this schedule (optional)
   * @return deprecationDays
  **/
  @ApiModelProperty(value = "Days until deprecation of each individual generated report on this schedule (optional)")
  public Integer getDeprecationDays() {
    return deprecationDays;
  }

  public void setDeprecationDays(Integer deprecationDays) {
    this.deprecationDays = deprecationDays;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Job job = (Job) o;
    return Objects.equals(this.id, job.id) &&
        Objects.equals(this.extId, job.extId) &&
        Objects.equals(this.extGroupId, job.extGroupId) &&
        Objects.equals(this.creatorId, job.creatorId) &&
        Objects.equals(this.status, job.status) &&
        Objects.equals(this.lastTime, job.lastTime) &&
        Objects.equals(this.scheduleTime, job.scheduleTime) &&
        Objects.equals(this.frequencyUnit, job.frequencyUnit) &&
        Objects.equals(this.frequencyTimeZone, job.frequencyTimeZone) &&
        Objects.equals(this.frequencyAmount, job.frequencyAmount) &&
        Objects.equals(this.startTime, job.startTime) &&
        Objects.equals(this.endTime, job.endTime) &&
        Objects.equals(this.reportType, job.reportType) &&
        Objects.equals(this.reportParams, job.reportParams) &&
        Objects.equals(this.entityId, job.entityId) &&
        Objects.equals(this.description, job.description) &&
        Objects.equals(this.fileName, job.fileName) &&
        Objects.equals(this.deprecationDays, job.deprecationDays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, extId, extGroupId, creatorId, status, lastTime, scheduleTime, frequencyUnit, frequencyTimeZone, frequencyAmount, startTime, endTime, reportType, reportParams, entityId, description, fileName, deprecationDays);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Job {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    extId: ").append(toIndentedString(extId)).append("\n");
    sb.append("    extGroupId: ").append(toIndentedString(extGroupId)).append("\n");
    sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lastTime: ").append(toIndentedString(lastTime)).append("\n");
    sb.append("    scheduleTime: ").append(toIndentedString(scheduleTime)).append("\n");
    sb.append("    frequencyUnit: ").append(toIndentedString(frequencyUnit)).append("\n");
    sb.append("    frequencyTimeZone: ").append(toIndentedString(frequencyTimeZone)).append("\n");
    sb.append("    frequencyAmount: ").append(toIndentedString(frequencyAmount)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    reportType: ").append(toIndentedString(reportType)).append("\n");
    sb.append("    reportParams: ").append(toIndentedString(reportParams)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    deprecationDays: ").append(toIndentedString(deprecationDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

