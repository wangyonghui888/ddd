/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Object with information needed in every report row
 */
@ApiModel(description = "Object with information needed in every report row")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class PosReportRow {
  @SerializedName("serialNumber")
  private String serialNumber = null;

  @SerializedName("imei1")
  private String imei1 = null;

  @SerializedName("imei2")
  private String imei2 = null;

  @SerializedName("allocation")
  private String allocation = null;

  @SerializedName("agentCode")
  private String agentCode = null;

  @SerializedName("userId")
  private String userId = null;

  @SerializedName("sharedBy")
  private List<String> sharedBy = null;

  @SerializedName("outsiderPosRunners")
  private List<String> outsiderPosRunners = null;

  @SerializedName("totalNumberOfTickets")
  private Long totalNumberOfTickets = 0l;

  @SerializedName("totalWon")
  private Double totalWon = 0.0d;

  @SerializedName("totalStake")
  private Double totalStake = 0.0d;

  @SerializedName("totalSessionTime")
  private Integer totalSessionTime = null;

  @SerializedName("numberOfCancelledTickets")
  private Long numberOfCancelledTickets = 0l;

  @SerializedName("totalCancelledAmount")
  private Double totalCancelledAmount = 0.0d;

  @SerializedName("dateOfLastLogin")
  private OffsetDateTime dateOfLastLogin = null;

  public PosReportRow serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * Serial number of POS device (set in spreadsheet)
   * @return serialNumber
  **/
  @ApiModelProperty(value = "Serial number of POS device (set in spreadsheet)")
  public String getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }

  public PosReportRow imei1(String imei1) {
    this.imei1 = imei1;
    return this;
  }

   /**
   * MEI number 1 of POS device (set in spreadsheet)
   * @return imei1
  **/
  @ApiModelProperty(value = "MEI number 1 of POS device (set in spreadsheet)")
  public String getImei1() {
    return imei1;
  }

  public void setImei1(String imei1) {
    this.imei1 = imei1;
  }

  public PosReportRow imei2(String imei2) {
    this.imei2 = imei2;
    return this;
  }

   /**
   * IMEI number 2 of POS device (set in spreadsheet)
   * @return imei2
  **/
  @ApiModelProperty(value = "IMEI number 2 of POS device (set in spreadsheet)")
  public String getImei2() {
    return imei2;
  }

  public void setImei2(String imei2) {
    this.imei2 = imei2;
  }

  public PosReportRow allocation(String allocation) {
    this.allocation = allocation;
    return this;
  }

   /**
   * Name of the agent (set in spreadsheet)
   * @return allocation
  **/
  @ApiModelProperty(value = "Name of the agent (set in spreadsheet)")
  public String getAllocation() {
    return allocation;
  }

  public void setAllocation(String allocation) {
    this.allocation = allocation;
  }

  public PosReportRow agentCode(String agentCode) {
    this.agentCode = agentCode;
    return this;
  }

   /**
   * Agent Code, internal to Logispin (set in spreadsheet)
   * @return agentCode
  **/
  @ApiModelProperty(value = "Agent Code, internal to Logispin (set in spreadsheet)")
  public String getAgentCode() {
    return agentCode;
  }

  public void setAgentCode(String agentCode) {
    this.agentCode = agentCode;
  }

  public PosReportRow userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Agent iSolution ID (set in spreadsheet)
   * @return userId
  **/
  @ApiModelProperty(value = "Agent iSolution ID (set in spreadsheet)")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public PosReportRow sharedBy(List<String> sharedBy) {
    this.sharedBy = sharedBy;
    return this;
  }

  public PosReportRow addSharedByItem(String sharedByItem) {
    if (this.sharedBy == null) {
      this.sharedBy = new ArrayList<String>();
    }
    this.sharedBy.add(sharedByItem);
    return this;
  }

   /**
   * List of iSolutionID of runners separated by comas that have used the POS device in last 24h and which parent is the entity with iSolutionID in User ID field
   * @return sharedBy
  **/
  @ApiModelProperty(value = "List of iSolutionID of runners separated by comas that have used the POS device in last 24h and which parent is the entity with iSolutionID in User ID field")
  public List<String> getSharedBy() {
    return sharedBy;
  }

  public void setSharedBy(List<String> sharedBy) {
    this.sharedBy = sharedBy;
  }

  public PosReportRow outsiderPosRunners(List<String> outsiderPosRunners) {
    this.outsiderPosRunners = outsiderPosRunners;
    return this;
  }

  public PosReportRow addOutsiderPosRunnersItem(String outsiderPosRunnersItem) {
    if (this.outsiderPosRunners == null) {
      this.outsiderPosRunners = new ArrayList<String>();
    }
    this.outsiderPosRunners.add(outsiderPosRunnersItem);
    return this;
  }

   /**
   * List of iSolutionID of runners separated by comas that have used the POS device in last 24h and which parent is NOT the entity with iSolutionID in User ID field
   * @return outsiderPosRunners
  **/
  @ApiModelProperty(value = "List of iSolutionID of runners separated by comas that have used the POS device in last 24h and which parent is NOT the entity with iSolutionID in User ID field")
  public List<String> getOutsiderPosRunners() {
    return outsiderPosRunners;
  }

  public void setOutsiderPosRunners(List<String> outsiderPosRunners) {
    this.outsiderPosRunners = outsiderPosRunners;
  }

  public PosReportRow totalNumberOfTickets(Long totalNumberOfTickets) {
    this.totalNumberOfTickets = totalNumberOfTickets;
    return this;
  }

   /**
   * Total number of tickets sold by the device in the last 24h
   * @return totalNumberOfTickets
  **/
  @ApiModelProperty(value = "Total number of tickets sold by the device in the last 24h")
  public Long getTotalNumberOfTickets() {
    return totalNumberOfTickets;
  }

  public void setTotalNumberOfTickets(Long totalNumberOfTickets) {
    this.totalNumberOfTickets = totalNumberOfTickets;
  }

  public PosReportRow totalWon(Double totalWon) {
    this.totalWon = totalWon;
    return this;
  }

   /**
   * Total winning amount from all the tickets sold by the device in the last 24h
   * @return totalWon
  **/
  @ApiModelProperty(value = "Total winning amount from all the tickets sold by the device in the last 24h")
  public Double getTotalWon() {
    return totalWon;
  }

  public void setTotalWon(Double totalWon) {
    this.totalWon = totalWon;
  }

  public PosReportRow totalStake(Double totalStake) {
    this.totalStake = totalStake;
    return this;
  }

   /**
   * Total stake from all the tickets sold by the device in the last 24h
   * @return totalStake
  **/
  @ApiModelProperty(value = "Total stake from all the tickets sold by the device in the last 24h")
  public Double getTotalStake() {
    return totalStake;
  }

  public void setTotalStake(Double totalStake) {
    this.totalStake = totalStake;
  }

  public PosReportRow totalSessionTime(Integer totalSessionTime) {
    this.totalSessionTime = totalSessionTime;
    return this;
  }

   /**
   * In seconds, total time that the device was an active session. It will be 0 if POS device was not used in the last 24h
   * @return totalSessionTime
  **/
  @ApiModelProperty(value = "In seconds, total time that the device was an active session. It will be 0 if POS device was not used in the last 24h")
  public Integer getTotalSessionTime() {
    return totalSessionTime;
  }

  public void setTotalSessionTime(Integer totalSessionTime) {
    this.totalSessionTime = totalSessionTime;
  }

  public PosReportRow numberOfCancelledTickets(Long numberOfCancelledTickets) {
    this.numberOfCancelledTickets = numberOfCancelledTickets;
    return this;
  }

   /**
   * Number of cancelled tickets sold by the device in the last 24h
   * @return numberOfCancelledTickets
  **/
  @ApiModelProperty(value = "Number of cancelled tickets sold by the device in the last 24h")
  public Long getNumberOfCancelledTickets() {
    return numberOfCancelledTickets;
  }

  public void setNumberOfCancelledTickets(Long numberOfCancelledTickets) {
    this.numberOfCancelledTickets = numberOfCancelledTickets;
  }

  public PosReportRow totalCancelledAmount(Double totalCancelledAmount) {
    this.totalCancelledAmount = totalCancelledAmount;
    return this;
  }

   /**
   * Stake from all cancelled tickets sold by the device in the last 24h
   * @return totalCancelledAmount
  **/
  @ApiModelProperty(value = "Stake from all cancelled tickets sold by the device in the last 24h")
  public Double getTotalCancelledAmount() {
    return totalCancelledAmount;
  }

  public void setTotalCancelledAmount(Double totalCancelledAmount) {
    this.totalCancelledAmount = totalCancelledAmount;
  }

  public PosReportRow dateOfLastLogin(OffsetDateTime dateOfLastLogin) {
    this.dateOfLastLogin = dateOfLastLogin;
    return this;
  }

   /**
   * Datetime of the last successful login
   * @return dateOfLastLogin
  **/
  @ApiModelProperty(value = "Datetime of the last successful login")
  public OffsetDateTime getDateOfLastLogin() {
    return dateOfLastLogin;
  }

  public void setDateOfLastLogin(OffsetDateTime dateOfLastLogin) {
    this.dateOfLastLogin = dateOfLastLogin;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PosReportRow posReportRow = (PosReportRow) o;
    return Objects.equals(this.serialNumber, posReportRow.serialNumber) &&
        Objects.equals(this.imei1, posReportRow.imei1) &&
        Objects.equals(this.imei2, posReportRow.imei2) &&
        Objects.equals(this.allocation, posReportRow.allocation) &&
        Objects.equals(this.agentCode, posReportRow.agentCode) &&
        Objects.equals(this.userId, posReportRow.userId) &&
        Objects.equals(this.sharedBy, posReportRow.sharedBy) &&
        Objects.equals(this.outsiderPosRunners, posReportRow.outsiderPosRunners) &&
        Objects.equals(this.totalNumberOfTickets, posReportRow.totalNumberOfTickets) &&
        Objects.equals(this.totalWon, posReportRow.totalWon) &&
        Objects.equals(this.totalStake, posReportRow.totalStake) &&
        Objects.equals(this.totalSessionTime, posReportRow.totalSessionTime) &&
        Objects.equals(this.numberOfCancelledTickets, posReportRow.numberOfCancelledTickets) &&
        Objects.equals(this.totalCancelledAmount, posReportRow.totalCancelledAmount) &&
        Objects.equals(this.dateOfLastLogin, posReportRow.dateOfLastLogin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serialNumber, imei1, imei2, allocation, agentCode, userId, sharedBy, outsiderPosRunners, totalNumberOfTickets, totalWon, totalStake, totalSessionTime, numberOfCancelledTickets, totalCancelledAmount, dateOfLastLogin);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PosReportRow {\n");
    
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    imei1: ").append(toIndentedString(imei1)).append("\n");
    sb.append("    imei2: ").append(toIndentedString(imei2)).append("\n");
    sb.append("    allocation: ").append(toIndentedString(allocation)).append("\n");
    sb.append("    agentCode: ").append(toIndentedString(agentCode)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    sharedBy: ").append(toIndentedString(sharedBy)).append("\n");
    sb.append("    outsiderPosRunners: ").append(toIndentedString(outsiderPosRunners)).append("\n");
    sb.append("    totalNumberOfTickets: ").append(toIndentedString(totalNumberOfTickets)).append("\n");
    sb.append("    totalWon: ").append(toIndentedString(totalWon)).append("\n");
    sb.append("    totalStake: ").append(toIndentedString(totalStake)).append("\n");
    sb.append("    totalSessionTime: ").append(toIndentedString(totalSessionTime)).append("\n");
    sb.append("    numberOfCancelledTickets: ").append(toIndentedString(numberOfCancelledTickets)).append("\n");
    sb.append("    totalCancelledAmount: ").append(toIndentedString(totalCancelledAmount)).append("\n");
    sb.append("    dateOfLastLogin: ").append(toIndentedString(dateOfLastLogin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

