/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.BaseWalletTransactionResponse;
import java.io.IOException;

/**
 * WalletCreditResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class WalletCreditResponse extends BaseWalletTransactionResponse {
  @SerializedName("oldCredit")
  private Double oldCredit = null;

  @SerializedName("newCredit")
  private Double newCredit = null;

  @SerializedName("extTransactionID")
  private String extTransactionID = null;

  @SerializedName("extTranctionData")
  private String extTranctionData = null;

  @SerializedName("creditAmount")
  private Double creditAmount = null;

  @SerializedName("extWalletId")
  private String extWalletId = null;

  @SerializedName("isPromotion")
  private Boolean isPromotion = null;

  public WalletCreditResponse oldCredit(Double oldCredit) {
    this.oldCredit = oldCredit;
    return this;
  }

   /**
   * Amount of credit before transaction is applied. If empty, old_credit is estimated, on last credit cached on client system.
   * @return oldCredit
  **/
  @ApiModelProperty(value = "Amount of credit before transaction is applied. If empty, old_credit is estimated, on last credit cached on client system.")
  public Double getOldCredit() {
    return oldCredit;
  }

  public void setOldCredit(Double oldCredit) {
    this.oldCredit = oldCredit;
  }

  public WalletCreditResponse newCredit(Double newCredit) {
    this.newCredit = newCredit;
    return this;
  }

   /**
   * Amount of credit after transaction is applied. If empty, new_credit is estimated based on transaction request.
   * @return newCredit
  **/
  @ApiModelProperty(value = "Amount of credit after transaction is applied. If empty, new_credit is estimated based on transaction request.")
  public Double getNewCredit() {
    return newCredit;
  }

  public void setNewCredit(Double newCredit) {
    this.newCredit = newCredit;
  }

  public WalletCreditResponse extTransactionID(String extTransactionID) {
    this.extTransactionID = extTransactionID;
    return this;
  }

   /**
   * Get extTransactionID
   * @return extTransactionID
  **/
  @ApiModelProperty(value = "")
  public String getExtTransactionID() {
    return extTransactionID;
  }

  public void setExtTransactionID(String extTransactionID) {
    this.extTransactionID = extTransactionID;
  }

  public WalletCreditResponse extTranctionData(String extTranctionData) {
    this.extTranctionData = extTranctionData;
    return this;
  }

   /**
   * Third party external transaction data.
   * @return extTranctionData
  **/
  @ApiModelProperty(value = "Third party external transaction data.")
  public String getExtTranctionData() {
    return extTranctionData;
  }

  public void setExtTranctionData(String extTranctionData) {
    this.extTranctionData = extTranctionData;
  }

  public WalletCreditResponse creditAmount(Double creditAmount) {
    this.creditAmount = creditAmount;
    return this;
  }

   /**
   * Total of the credited amount. If it&#39;s null we will ignore it otherwise newCredit and oldCredit should not be used.
   * @return creditAmount
  **/
  @ApiModelProperty(value = "Total of the credited amount. If it's null we will ignore it otherwise newCredit and oldCredit should not be used.")
  public Double getCreditAmount() {
    return creditAmount;
  }

  public void setCreditAmount(Double creditAmount) {
    this.creditAmount = creditAmount;
  }

  public WalletCreditResponse extWalletId(String extWalletId) {
    this.extWalletId = extWalletId;
    return this;
  }

   /**
   * 3rd party unique id for wallet.
   * @return extWalletId
  **/
  @ApiModelProperty(value = "3rd party unique id for wallet.")
  public String getExtWalletId() {
    return extWalletId;
  }

  public void setExtWalletId(String extWalletId) {
    this.extWalletId = extWalletId;
  }

  public WalletCreditResponse isPromotion(Boolean isPromotion) {
    this.isPromotion = isPromotion;
    return this;
  }

   /**
   * When true, the given wallet is considered to be related to promotional credit/freebets.
   * @return isPromotion
  **/
  @ApiModelProperty(value = "When true, the given wallet is considered to be related to promotional credit/freebets.")
  public Boolean isIsPromotion() {
    return isPromotion;
  }

  public void setIsPromotion(Boolean isPromotion) {
    this.isPromotion = isPromotion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WalletCreditResponse walletCreditResponse = (WalletCreditResponse) o;
    return Objects.equals(this.oldCredit, walletCreditResponse.oldCredit) &&
        Objects.equals(this.newCredit, walletCreditResponse.newCredit) &&
        Objects.equals(this.extTransactionID, walletCreditResponse.extTransactionID) &&
        Objects.equals(this.extTranctionData, walletCreditResponse.extTranctionData) &&
        Objects.equals(this.creditAmount, walletCreditResponse.creditAmount) &&
        Objects.equals(this.extWalletId, walletCreditResponse.extWalletId) &&
        Objects.equals(this.isPromotion, walletCreditResponse.isPromotion) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(oldCredit, newCredit, extTransactionID, extTranctionData, creditAmount, extWalletId, isPromotion, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WalletCreditResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    oldCredit: ").append(toIndentedString(oldCredit)).append("\n");
    sb.append("    newCredit: ").append(toIndentedString(newCredit)).append("\n");
    sb.append("    extTransactionID: ").append(toIndentedString(extTransactionID)).append("\n");
    sb.append("    extTranctionData: ").append(toIndentedString(extTranctionData)).append("\n");
    sb.append("    creditAmount: ").append(toIndentedString(creditAmount)).append("\n");
    sb.append("    extWalletId: ").append(toIndentedString(extWalletId)).append("\n");
    sb.append("    isPromotion: ").append(toIndentedString(isPromotion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

