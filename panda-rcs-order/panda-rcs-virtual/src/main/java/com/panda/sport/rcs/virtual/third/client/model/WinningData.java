/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Total amount that system will pay to ticket owner for this system bet. Rule to pay: - maxWinning + bonus &lt; maxPayout ? maxWinning + bonus : maxPayout 
 */
@ApiModel(description = "Total amount that system will pay to ticket owner for this system bet. Rule to pay: - maxWinning + bonus < maxPayout ? maxWinning + bonus : maxPayout ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class WinningData {
  @SerializedName("limitMaxPayout")
  private Double limitMaxPayout = null;

  @SerializedName("minWinning")
  private Double minWinning = null;

  @SerializedName("maxWinning")
  private Double maxWinning = null;

  @SerializedName("minBonus")
  private Double minBonus = null;

  @SerializedName("maxBonus")
  private Double maxBonus = null;

  @SerializedName("winningCount")
  private Integer winningCount = null;

  public WinningData limitMaxPayout(Double limitMaxPayout) {
    this.limitMaxPayout = limitMaxPayout;
    return this;
  }

   /**
   * Potencial total max amount (without bonus) that ticket owner could win for this systembet if he win all your bets. 
   * @return limitMaxPayout
  **/
  @ApiModelProperty(value = "Potencial total max amount (without bonus) that ticket owner could win for this systembet if he win all your bets. ")
  public Double getLimitMaxPayout() {
    return limitMaxPayout;
  }

  public void setLimitMaxPayout(Double limitMaxPayout) {
    this.limitMaxPayout = limitMaxPayout;
  }

  public WinningData minWinning(Double minWinning) {
    this.minWinning = minWinning;
    return this;
  }

   /**
   * Potencial total min amount (without bonus) that ticket owner could win for this systembet if he win n-combination bets. 
   * @return minWinning
  **/
  @ApiModelProperty(value = "Potencial total min amount (without bonus) that ticket owner could win for this systembet if he win n-combination bets. ")
  public Double getMinWinning() {
    return minWinning;
  }

  public void setMinWinning(Double minWinning) {
    this.minWinning = minWinning;
  }

  public WinningData maxWinning(Double maxWinning) {
    this.maxWinning = maxWinning;
    return this;
  }

   /**
   * Potencial total max amount (without bonus) that ticket owner could win for this systembet if he win all your bets. 
   * @return maxWinning
  **/
  @ApiModelProperty(value = "Potencial total max amount (without bonus) that ticket owner could win for this systembet if he win all your bets. ")
  public Double getMaxWinning() {
    return maxWinning;
  }

  public void setMaxWinning(Double maxWinning) {
    this.maxWinning = maxWinning;
  }

  public WinningData minBonus(Double minBonus) {
    this.minBonus = minBonus;
    return this;
  }

   /**
   * Min Bonus is a percentage of minWinning to add to minWinning for this systembet. This bonus is calculated using bonus field LimitSettings Entity. The total systembet amount to win is calculated minWinning + minbonus. 
   * @return minBonus
  **/
  @ApiModelProperty(value = "Min Bonus is a percentage of minWinning to add to minWinning for this systembet. This bonus is calculated using bonus field LimitSettings Entity. The total systembet amount to win is calculated minWinning + minbonus. ")
  public Double getMinBonus() {
    return minBonus;
  }

  public void setMinBonus(Double minBonus) {
    this.minBonus = minBonus;
  }

  public WinningData maxBonus(Double maxBonus) {
    this.maxBonus = maxBonus;
    return this;
  }

   /**
   * Max Bonus is a percentage of maxWinning to add to maxWinning for this systembet. This bonus is calculated using bonus field LimitSettings Entity. The total systembet amount to win is calculated maxWinning + bonus. 
   * @return maxBonus
  **/
  @ApiModelProperty(value = "Max Bonus is a percentage of maxWinning to add to maxWinning for this systembet. This bonus is calculated using bonus field LimitSettings Entity. The total systembet amount to win is calculated maxWinning + bonus. ")
  public Double getMaxBonus() {
    return maxBonus;
  }

  public void setMaxBonus(Double maxBonus) {
    this.maxBonus = maxBonus;
  }

  public WinningData winningCount(Integer winningCount) {
    this.winningCount = winningCount;
    return this;
  }

   /**
   * Combination number used to calculate maxWinning amount. 
   * @return winningCount
  **/
  @ApiModelProperty(value = "Combination number used to calculate maxWinning amount. ")
  public Integer getWinningCount() {
    return winningCount;
  }

  public void setWinningCount(Integer winningCount) {
    this.winningCount = winningCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WinningData winningData = (WinningData) o;
    return Objects.equals(this.limitMaxPayout, winningData.limitMaxPayout) &&
        Objects.equals(this.minWinning, winningData.minWinning) &&
        Objects.equals(this.maxWinning, winningData.maxWinning) &&
        Objects.equals(this.minBonus, winningData.minBonus) &&
        Objects.equals(this.maxBonus, winningData.maxBonus) &&
        Objects.equals(this.winningCount, winningData.winningCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(limitMaxPayout, minWinning, maxWinning, minBonus, maxBonus, winningCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WinningData {\n");
    
    sb.append("    limitMaxPayout: ").append(toIndentedString(limitMaxPayout)).append("\n");
    sb.append("    minWinning: ").append(toIndentedString(minWinning)).append("\n");
    sb.append("    maxWinning: ").append(toIndentedString(maxWinning)).append("\n");
    sb.append("    minBonus: ").append(toIndentedString(minBonus)).append("\n");
    sb.append("    maxBonus: ").append(toIndentedString(maxBonus)).append("\n");
    sb.append("    winningCount: ").append(toIndentedString(winningCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

