/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Assets configuration by playlist. 
 */
@ApiModel(description = "Assets configuration by playlist. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")




public class Assets {
  @SerializedName("classType")
  private String classType = null;

  @SerializedName("iconId")
  private String iconId = null;

  @SerializedName("clientConfiguration")
  private String clientConfiguration = null;

  public Assets() {
    this.classType = this.getClass().getSimpleName();
  }
  public Assets classType(String classType) {
    this.classType = classType;
    return this;
  }

   /**
   * Get classType
   * @return classType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getClassType() {
    return classType;
  }

  public void setClassType(String classType) {
    this.classType = classType;
  }

  public Assets iconId(String iconId) {
    this.iconId = iconId;
    return this;
  }

   /**
   * unique identifier that defines which icons are to be displayed for the playlist.
   * @return iconId
  **/
  @ApiModelProperty(value = "unique identifier that defines which icons are to be displayed for the playlist.")
  public String getIconId() {
    return iconId;
  }

  public void setIconId(String iconId) {
    this.iconId = iconId;
  }

  public Assets clientConfiguration(String clientConfiguration) {
    this.clientConfiguration = clientConfiguration;
    return this;
  }

   /**
   * Client name for custom configuration. If null, default configuration will be applied.
   * @return clientConfiguration
  **/
  @ApiModelProperty(value = "Client name for custom configuration. If null, default configuration will be applied.")
  public String getClientConfiguration() {
    return clientConfiguration;
  }

  public void setClientConfiguration(String clientConfiguration) {
    this.clientConfiguration = clientConfiguration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Assets assets = (Assets) o;
    return Objects.equals(this.classType, assets.classType) &&
        Objects.equals(this.iconId, assets.iconId) &&
        Objects.equals(this.clientConfiguration, assets.clientConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(classType, iconId, clientConfiguration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Assets {\n");
    
    sb.append("    classType: ").append(toIndentedString(classType)).append("\n");
    sb.append("    iconId: ").append(toIndentedString(iconId)).append("\n");
    sb.append("    clientConfiguration: ").append(toIndentedString(clientConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

