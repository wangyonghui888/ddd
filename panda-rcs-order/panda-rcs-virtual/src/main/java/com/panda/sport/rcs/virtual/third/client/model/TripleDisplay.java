/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.Display;
import com.panda.sport.rcs.virtual.third.client.model.WidgetContent;
import java.io.IOException;

/**
 * Triple Display to set positioned displays. 
 */
@ApiModel(description = "Triple Display to set positioned displays. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class TripleDisplay extends Display {
  @SerializedName("mainPosition")
  private WidgetContent mainPosition = null;

  @SerializedName("leftPosition")
  private WidgetContent leftPosition = null;

  @SerializedName("rightPosition")
  private WidgetContent rightPosition = null;

  public TripleDisplay mainPosition(WidgetContent mainPosition) {
    this.mainPosition = mainPosition;
    return this;
  }

   /**
   * Get mainPosition
   * @return mainPosition
  **/
  @ApiModelProperty(value = "")
  public WidgetContent getMainPosition() {
    return mainPosition;
  }

  public void setMainPosition(WidgetContent mainPosition) {
    this.mainPosition = mainPosition;
  }

  public TripleDisplay leftPosition(WidgetContent leftPosition) {
    this.leftPosition = leftPosition;
    return this;
  }

   /**
   * Get leftPosition
   * @return leftPosition
  **/
  @ApiModelProperty(value = "")
  public WidgetContent getLeftPosition() {
    return leftPosition;
  }

  public void setLeftPosition(WidgetContent leftPosition) {
    this.leftPosition = leftPosition;
  }

  public TripleDisplay rightPosition(WidgetContent rightPosition) {
    this.rightPosition = rightPosition;
    return this;
  }

   /**
   * Get rightPosition
   * @return rightPosition
  **/
  @ApiModelProperty(value = "")
  public WidgetContent getRightPosition() {
    return rightPosition;
  }

  public void setRightPosition(WidgetContent rightPosition) {
    this.rightPosition = rightPosition;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TripleDisplay tripleDisplay = (TripleDisplay) o;
    return Objects.equals(this.mainPosition, tripleDisplay.mainPosition) &&
        Objects.equals(this.leftPosition, tripleDisplay.leftPosition) &&
        Objects.equals(this.rightPosition, tripleDisplay.rightPosition) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mainPosition, leftPosition, rightPosition, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TripleDisplay {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    mainPosition: ").append(toIndentedString(mainPosition)).append("\n");
    sb.append("    leftPosition: ").append(toIndentedString(leftPosition)).append("\n");
    sb.append("    rightPosition: ").append(toIndentedString(rightPosition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

