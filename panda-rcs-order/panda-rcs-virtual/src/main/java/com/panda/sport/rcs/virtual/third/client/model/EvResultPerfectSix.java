/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.EvResult;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about result of Perfect Six event blocks. 
 */
@ApiModel(description = "Information about result of Perfect Six event blocks. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class EvResultPerfectSix extends EvResult {
  @SerializedName("balls")
  private List<Integer> balls = null;

  @SerializedName("cloverBalls")
  private List<Integer> cloverBalls = null;

  @SerializedName("isWinX2")
  private Boolean isWinX2 = null;

  @SerializedName("isBonusRepeat")
  private Boolean isBonusRepeat = null;

  @SerializedName("isExtra5Ball")
  private Boolean isExtra5Ball = null;

  @SerializedName("topColor")
  private List<String> topColor = null;

  @SerializedName("firstColor")
  private String firstColor = null;

  @SerializedName("lastColor")
  private String lastColor = null;

  @SerializedName("moreOddEven")
  private String moreOddEven = null;

  @SerializedName("preSumOddEven")
  private String preSumOddEven = null;

  @SerializedName("firstOddEven")
  private String firstOddEven = null;

  @SerializedName("lastOddEven")
  private String lastOddEven = null;

  @SerializedName("presumOverUnder")
  private String presumOverUnder = null;

  @SerializedName("firstOverUnder")
  private String firstOverUnder = null;

  @SerializedName("lastOverUnder")
  private String lastOverUnder = null;

  public EvResultPerfectSix balls(List<Integer> balls) {
    this.balls = balls;
    return this;
  }

  public EvResultPerfectSix addBallsItem(Integer ballsItem) {
    if (this.balls == null) {
      this.balls = new ArrayList<Integer>();
    }
    this.balls.add(ballsItem);
    return this;
  }

   /**
   * Ordered array of numbers included in result.
   * @return balls
  **/
  @ApiModelProperty(value = "Ordered array of numbers included in result.")
  public List<Integer> getBalls() {
    return balls;
  }

  public void setBalls(List<Integer> balls) {
    this.balls = balls;
  }

  public EvResultPerfectSix cloverBalls(List<Integer> cloverBalls) {
    this.cloverBalls = cloverBalls;
    return this;
  }

  public EvResultPerfectSix addCloverBallsItem(Integer cloverBallsItem) {
    if (this.cloverBalls == null) {
      this.cloverBalls = new ArrayList<Integer>();
    }
    this.cloverBalls.add(cloverBallsItem);
    return this;
  }

   /**
   * Array of numbers with clover bonus.
   * @return cloverBalls
  **/
  @ApiModelProperty(value = "Array of numbers with clover bonus.")
  public List<Integer> getCloverBalls() {
    return cloverBalls;
  }

  public void setCloverBalls(List<Integer> cloverBalls) {
    this.cloverBalls = cloverBalls;
  }

  public EvResultPerfectSix isWinX2(Boolean isWinX2) {
    this.isWinX2 = isWinX2;
    return this;
  }

   /**
   * Event with x2 bonus.
   * @return isWinX2
  **/
  @ApiModelProperty(value = "Event with x2 bonus.")
  public Boolean isIsWinX2() {
    return isWinX2;
  }

  public void setIsWinX2(Boolean isWinX2) {
    this.isWinX2 = isWinX2;
  }

  public EvResultPerfectSix isBonusRepeat(Boolean isBonusRepeat) {
    this.isBonusRepeat = isBonusRepeat;
    return this;
  }

   /**
   * Event with Bonus Repeat bonus.
   * @return isBonusRepeat
  **/
  @ApiModelProperty(value = "Event with Bonus Repeat bonus.")
  public Boolean isIsBonusRepeat() {
    return isBonusRepeat;
  }

  public void setIsBonusRepeat(Boolean isBonusRepeat) {
    this.isBonusRepeat = isBonusRepeat;
  }

  public EvResultPerfectSix isExtra5Ball(Boolean isExtra5Ball) {
    this.isExtra5Ball = isExtra5Ball;
    return this;
  }

   /**
   * Event with Bonus 5 Extra Ball.
   * @return isExtra5Ball
  **/
  @ApiModelProperty(value = "Event with Bonus 5 Extra Ball.")
  public Boolean isIsExtra5Ball() {
    return isExtra5Ball;
  }

  public void setIsExtra5Ball(Boolean isExtra5Ball) {
    this.isExtra5Ball = isExtra5Ball;
  }

  public EvResultPerfectSix topColor(List<String> topColor) {
    this.topColor = topColor;
    return this;
  }

  public EvResultPerfectSix addTopColorItem(String topColorItem) {
    if (this.topColor == null) {
      this.topColor = new ArrayList<String>();
    }
    this.topColor.add(topColorItem);
    return this;
  }

   /**
   * Array with the top color or colors.
   * @return topColor
  **/
  @ApiModelProperty(value = "Array with the top color or colors.")
  public List<String> getTopColor() {
    return topColor;
  }

  public void setTopColor(List<String> topColor) {
    this.topColor = topColor;
  }

  public EvResultPerfectSix firstColor(String firstColor) {
    this.firstColor = firstColor;
    return this;
  }

   /**
   * Get firstColor
   * @return firstColor
  **/
  @ApiModelProperty(value = "")
  public String getFirstColor() {
    return firstColor;
  }

  public void setFirstColor(String firstColor) {
    this.firstColor = firstColor;
  }

  public EvResultPerfectSix lastColor(String lastColor) {
    this.lastColor = lastColor;
    return this;
  }

   /**
   * Get lastColor
   * @return lastColor
  **/
  @ApiModelProperty(value = "")
  public String getLastColor() {
    return lastColor;
  }

  public void setLastColor(String lastColor) {
    this.lastColor = lastColor;
  }

  public EvResultPerfectSix moreOddEven(String moreOddEven) {
    this.moreOddEven = moreOddEven;
    return this;
  }

   /**
   * Get moreOddEven
   * @return moreOddEven
  **/
  @ApiModelProperty(value = "")
  public String getMoreOddEven() {
    return moreOddEven;
  }

  public void setMoreOddEven(String moreOddEven) {
    this.moreOddEven = moreOddEven;
  }

  public EvResultPerfectSix preSumOddEven(String preSumOddEven) {
    this.preSumOddEven = preSumOddEven;
    return this;
  }

   /**
   * Get preSumOddEven
   * @return preSumOddEven
  **/
  @ApiModelProperty(value = "")
  public String getPreSumOddEven() {
    return preSumOddEven;
  }

  public void setPreSumOddEven(String preSumOddEven) {
    this.preSumOddEven = preSumOddEven;
  }

  public EvResultPerfectSix firstOddEven(String firstOddEven) {
    this.firstOddEven = firstOddEven;
    return this;
  }

   /**
   * Get firstOddEven
   * @return firstOddEven
  **/
  @ApiModelProperty(value = "")
  public String getFirstOddEven() {
    return firstOddEven;
  }

  public void setFirstOddEven(String firstOddEven) {
    this.firstOddEven = firstOddEven;
  }

  public EvResultPerfectSix lastOddEven(String lastOddEven) {
    this.lastOddEven = lastOddEven;
    return this;
  }

   /**
   * Get lastOddEven
   * @return lastOddEven
  **/
  @ApiModelProperty(value = "")
  public String getLastOddEven() {
    return lastOddEven;
  }

  public void setLastOddEven(String lastOddEven) {
    this.lastOddEven = lastOddEven;
  }

  public EvResultPerfectSix presumOverUnder(String presumOverUnder) {
    this.presumOverUnder = presumOverUnder;
    return this;
  }

   /**
   * Get presumOverUnder
   * @return presumOverUnder
  **/
  @ApiModelProperty(value = "")
  public String getPresumOverUnder() {
    return presumOverUnder;
  }

  public void setPresumOverUnder(String presumOverUnder) {
    this.presumOverUnder = presumOverUnder;
  }

  public EvResultPerfectSix firstOverUnder(String firstOverUnder) {
    this.firstOverUnder = firstOverUnder;
    return this;
  }

   /**
   * Get firstOverUnder
   * @return firstOverUnder
  **/
  @ApiModelProperty(value = "")
  public String getFirstOverUnder() {
    return firstOverUnder;
  }

  public void setFirstOverUnder(String firstOverUnder) {
    this.firstOverUnder = firstOverUnder;
  }

  public EvResultPerfectSix lastOverUnder(String lastOverUnder) {
    this.lastOverUnder = lastOverUnder;
    return this;
  }

   /**
   * Get lastOverUnder
   * @return lastOverUnder
  **/
  @ApiModelProperty(value = "")
  public String getLastOverUnder() {
    return lastOverUnder;
  }

  public void setLastOverUnder(String lastOverUnder) {
    this.lastOverUnder = lastOverUnder;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EvResultPerfectSix evResultPerfectSix = (EvResultPerfectSix) o;
    return Objects.equals(this.balls, evResultPerfectSix.balls) &&
        Objects.equals(this.cloverBalls, evResultPerfectSix.cloverBalls) &&
        Objects.equals(this.isWinX2, evResultPerfectSix.isWinX2) &&
        Objects.equals(this.isBonusRepeat, evResultPerfectSix.isBonusRepeat) &&
        Objects.equals(this.isExtra5Ball, evResultPerfectSix.isExtra5Ball) &&
        Objects.equals(this.topColor, evResultPerfectSix.topColor) &&
        Objects.equals(this.firstColor, evResultPerfectSix.firstColor) &&
        Objects.equals(this.lastColor, evResultPerfectSix.lastColor) &&
        Objects.equals(this.moreOddEven, evResultPerfectSix.moreOddEven) &&
        Objects.equals(this.preSumOddEven, evResultPerfectSix.preSumOddEven) &&
        Objects.equals(this.firstOddEven, evResultPerfectSix.firstOddEven) &&
        Objects.equals(this.lastOddEven, evResultPerfectSix.lastOddEven) &&
        Objects.equals(this.presumOverUnder, evResultPerfectSix.presumOverUnder) &&
        Objects.equals(this.firstOverUnder, evResultPerfectSix.firstOverUnder) &&
        Objects.equals(this.lastOverUnder, evResultPerfectSix.lastOverUnder) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(balls, cloverBalls, isWinX2, isBonusRepeat, isExtra5Ball, topColor, firstColor, lastColor, moreOddEven, preSumOddEven, firstOddEven, lastOddEven, presumOverUnder, firstOverUnder, lastOverUnder, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EvResultPerfectSix {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    balls: ").append(toIndentedString(balls)).append("\n");
    sb.append("    cloverBalls: ").append(toIndentedString(cloverBalls)).append("\n");
    sb.append("    isWinX2: ").append(toIndentedString(isWinX2)).append("\n");
    sb.append("    isBonusRepeat: ").append(toIndentedString(isBonusRepeat)).append("\n");
    sb.append("    isExtra5Ball: ").append(toIndentedString(isExtra5Ball)).append("\n");
    sb.append("    topColor: ").append(toIndentedString(topColor)).append("\n");
    sb.append("    firstColor: ").append(toIndentedString(firstColor)).append("\n");
    sb.append("    lastColor: ").append(toIndentedString(lastColor)).append("\n");
    sb.append("    moreOddEven: ").append(toIndentedString(moreOddEven)).append("\n");
    sb.append("    preSumOddEven: ").append(toIndentedString(preSumOddEven)).append("\n");
    sb.append("    firstOddEven: ").append(toIndentedString(firstOddEven)).append("\n");
    sb.append("    lastOddEven: ").append(toIndentedString(lastOddEven)).append("\n");
    sb.append("    presumOverUnder: ").append(toIndentedString(presumOverUnder)).append("\n");
    sb.append("    firstOverUnder: ").append(toIndentedString(firstOverUnder)).append("\n");
    sb.append("    lastOverUnder: ").append(toIndentedString(lastOverUnder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

