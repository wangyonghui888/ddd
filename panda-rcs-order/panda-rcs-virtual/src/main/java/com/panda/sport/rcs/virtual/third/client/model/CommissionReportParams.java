/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.ReportParams;
import com.panda.sport.rcs.virtual.third.client.model.ReportTarget;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Internal Commission report parameters
 */
@ApiModel(description = "Internal Commission report parameters")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class CommissionReportParams extends ReportParams {
  @SerializedName("produces")
  private String produces = "text/csv";

  @SerializedName("targetEntity")
  private Integer targetEntity = null;

  @SerializedName("outputCurrency")
  private String outputCurrency = null;

  @SerializedName("commissionDate")
  private OffsetDateTime commissionDate = null;

  @SerializedName("domain")
  private String domain = null;

  @SerializedName("hidePlaylistNoCommission")
  private Boolean hidePlaylistNoCommission = null;

  public CommissionReportParams produces(String produces) {
    this.produces = produces;
    return this;
  }

   /**
   * Produces. 
   * @return produces
  **/
  @ApiModelProperty(required = true, value = "Produces. ")
  public String getProduces() {
    return produces;
  }

  public void setProduces(String produces) {
    this.produces = produces;
  }

  public CommissionReportParams targetEntity(Integer targetEntity) {
    this.targetEntity = targetEntity;
    return this;
  }

   /**
   * Id of entity which represent the target entity. 
   * @return targetEntity
  **/
  @ApiModelProperty(required = true, value = "Id of entity which represent the target entity. ")
  public Integer getTargetEntity() {
    return targetEntity;
  }

  public void setTargetEntity(Integer targetEntity) {
    this.targetEntity = targetEntity;
  }

  public CommissionReportParams outputCurrency(String outputCurrency) {
    this.outputCurrency = outputCurrency;
    return this;
  }

   /**
   * Output currency
   * @return outputCurrency
  **/
  @ApiModelProperty(required = true, value = "Output currency")
  public String getOutputCurrency() {
    return outputCurrency;
  }

  public void setOutputCurrency(String outputCurrency) {
    this.outputCurrency = outputCurrency;
  }

  public CommissionReportParams commissionDate(OffsetDateTime commissionDate) {
    this.commissionDate = commissionDate;
    return this;
  }

   /**
   * Commission date
   * @return commissionDate
  **/
  @ApiModelProperty(required = true, value = "Commission date")
  public OffsetDateTime getCommissionDate() {
    return commissionDate;
  }

  public void setCommissionDate(OffsetDateTime commissionDate) {
    this.commissionDate = commissionDate;
  }

  public CommissionReportParams domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Commission Domain to get commission information.
   * @return domain
  **/
  @ApiModelProperty(value = "Commission Domain to get commission information.")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public CommissionReportParams hidePlaylistNoCommission(Boolean hidePlaylistNoCommission) {
    this.hidePlaylistNoCommission = hidePlaylistNoCommission;
    return this;
  }

   /**
   * Hide the playlist that have no commission from the report. 
   * @return hidePlaylistNoCommission
  **/
  @ApiModelProperty(value = "Hide the playlist that have no commission from the report. ")
  public Boolean isHidePlaylistNoCommission() {
    return hidePlaylistNoCommission;
  }

  public void setHidePlaylistNoCommission(Boolean hidePlaylistNoCommission) {
    this.hidePlaylistNoCommission = hidePlaylistNoCommission;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommissionReportParams commissionReportParams = (CommissionReportParams) o;
    return Objects.equals(this.produces, commissionReportParams.produces) &&
        Objects.equals(this.targetEntity, commissionReportParams.targetEntity) &&
        Objects.equals(this.outputCurrency, commissionReportParams.outputCurrency) &&
        Objects.equals(this.commissionDate, commissionReportParams.commissionDate) &&
        Objects.equals(this.domain, commissionReportParams.domain) &&
        Objects.equals(this.hidePlaylistNoCommission, commissionReportParams.hidePlaylistNoCommission) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(produces, targetEntity, outputCurrency, commissionDate, domain, hidePlaylistNoCommission, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommissionReportParams {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    produces: ").append(toIndentedString(produces)).append("\n");
    sb.append("    targetEntity: ").append(toIndentedString(targetEntity)).append("\n");
    sb.append("    outputCurrency: ").append(toIndentedString(outputCurrency)).append("\n");
    sb.append("    commissionDate: ").append(toIndentedString(commissionDate)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    hidePlaylistNoCommission: ").append(toIndentedString(hidePlaylistNoCommission)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

