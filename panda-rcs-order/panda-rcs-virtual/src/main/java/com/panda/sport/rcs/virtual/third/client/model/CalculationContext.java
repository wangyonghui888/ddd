/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.JackpotContext;
import com.panda.sport.rcs.virtual.third.client.model.OddContext;
import com.panda.sport.rcs.virtual.third.client.model.TaxContext;
import com.panda.sport.rcs.virtual.third.client.model.TicketContext;
import java.io.IOException;

/**
 * CalculationContext
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class CalculationContext {
  @SerializedName("ticketContext")
  private TicketContext ticketContext = null;

  @SerializedName("taxContext")
  private TaxContext taxContext = null;

  @SerializedName("oddContext")
  private OddContext oddContext = null;

  @SerializedName("jackpotContext")
  private JackpotContext jackpotContext = null;

  public CalculationContext ticketContext(TicketContext ticketContext) {
    this.ticketContext = ticketContext;
    return this;
  }

   /**
   * Get ticketContext
   * @return ticketContext
  **/
  @ApiModelProperty(value = "")
  public TicketContext getTicketContext() {
    return ticketContext;
  }

  public void setTicketContext(TicketContext ticketContext) {
    this.ticketContext = ticketContext;
  }

  public CalculationContext taxContext(TaxContext taxContext) {
    this.taxContext = taxContext;
    return this;
  }

   /**
   * Get taxContext
   * @return taxContext
  **/
  @ApiModelProperty(value = "")
  public TaxContext getTaxContext() {
    return taxContext;
  }

  public void setTaxContext(TaxContext taxContext) {
    this.taxContext = taxContext;
  }

  public CalculationContext oddContext(OddContext oddContext) {
    this.oddContext = oddContext;
    return this;
  }

   /**
   * Get oddContext
   * @return oddContext
  **/
  @ApiModelProperty(value = "")
  public OddContext getOddContext() {
    return oddContext;
  }

  public void setOddContext(OddContext oddContext) {
    this.oddContext = oddContext;
  }

  public CalculationContext jackpotContext(JackpotContext jackpotContext) {
    this.jackpotContext = jackpotContext;
    return this;
  }

   /**
   * Get jackpotContext
   * @return jackpotContext
  **/
  @ApiModelProperty(value = "")
  public JackpotContext getJackpotContext() {
    return jackpotContext;
  }

  public void setJackpotContext(JackpotContext jackpotContext) {
    this.jackpotContext = jackpotContext;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalculationContext calculationContext = (CalculationContext) o;
    return Objects.equals(this.ticketContext, calculationContext.ticketContext) &&
        Objects.equals(this.taxContext, calculationContext.taxContext) &&
        Objects.equals(this.oddContext, calculationContext.oddContext) &&
        Objects.equals(this.jackpotContext, calculationContext.jackpotContext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ticketContext, taxContext, oddContext, jackpotContext);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculationContext {\n");
    
    sb.append("    ticketContext: ").append(toIndentedString(ticketContext)).append("\n");
    sb.append("    taxContext: ").append(toIndentedString(taxContext)).append("\n");
    sb.append("    oddContext: ").append(toIndentedString(oddContext)).append("\n");
    sb.append("    jackpotContext: ").append(toIndentedString(jackpotContext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

