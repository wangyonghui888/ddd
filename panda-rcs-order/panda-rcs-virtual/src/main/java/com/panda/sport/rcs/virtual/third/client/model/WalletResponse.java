/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Base wallet response to bulk operation.
 */
@ApiModel(description = "Base wallet response to bulk operation.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")




public class WalletResponse {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    WALLETRESPONSE("WalletResponse"),
    
    WALLETCREDITRESPONSE("WalletCreditResponse"),
    
    MULTIWALLETTRANSACTIONRESPONSE("MultiWalletTransactionResponse"),
    
    SELLRESPONSE("SellResponse"),
    
    MULTIWALLETSELLRESPONSE("MultiWalletSellResponse");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("ticketId")
  private Long ticketId = null;

  /**
   * Confirm success of operation for specific request. A duplicated, should be considered as a success operation, with no effect. If error, error_id, and error_message should provide additional details about error. 
   */
  @JsonAdapter(ResultEnum.Adapter.class)
  public enum ResultEnum {
    SUCCESS("success"),
    
    RETRY("retry"),
    
    ERROR("error");

    private String value;

    ResultEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResultEnum fromValue(String text) {
      for (ResultEnum b : ResultEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ResultEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResultEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResultEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ResultEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("result")
  private ResultEnum result = null;

  @SerializedName("errorId")
  private Long errorId = null;

  @SerializedName("errorMessage")
  private String errorMessage = null;

  public WalletResponse type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public WalletResponse ticketId(Long ticketId) {
    this.ticketId = ticketId;
    return this;
  }

   /**
   * Get ticketId
   * @return ticketId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getTicketId() {
    return ticketId;
  }

  public void setTicketId(Long ticketId) {
    this.ticketId = ticketId;
  }

  public WalletResponse result(ResultEnum result) {
    this.result = result;
    return this;
  }

   /**
   * Confirm success of operation for specific request. A duplicated, should be considered as a success operation, with no effect. If error, error_id, and error_message should provide additional details about error. 
   * @return result
  **/
  @ApiModelProperty(required = true, value = "Confirm success of operation for specific request. A duplicated, should be considered as a success operation, with no effect. If error, error_id, and error_message should provide additional details about error. ")
  public ResultEnum getResult() {
    return result;
  }

  public void setResult(ResultEnum result) {
    this.result = result;
  }

  public WalletResponse errorId(Long errorId) {
    this.errorId = errorId;
    return this;
  }

   /**
   * Internal id of confirm error meesage.
   * @return errorId
  **/
  @ApiModelProperty(value = "Internal id of confirm error meesage.")
  public Long getErrorId() {
    return errorId;
  }

  public void setErrorId(Long errorId) {
    this.errorId = errorId;
  }

  public WalletResponse errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Readable description of confirm error.
   * @return errorMessage
  **/
  @ApiModelProperty(value = "Readable description of confirm error.")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WalletResponse walletResponse = (WalletResponse) o;
    return Objects.equals(this.type, walletResponse.type) &&
        Objects.equals(this.ticketId, walletResponse.ticketId) &&
        Objects.equals(this.result, walletResponse.result) &&
        Objects.equals(this.errorId, walletResponse.errorId) &&
        Objects.equals(this.errorMessage, walletResponse.errorMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, ticketId, result, errorId, errorMessage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WalletResponse {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    ticketId: ").append(toIndentedString(ticketId)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    errorId: ").append(toIndentedString(errorId)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

