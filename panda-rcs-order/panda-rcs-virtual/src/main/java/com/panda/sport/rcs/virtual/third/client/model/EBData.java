/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.EbkData;
import com.panda.sport.rcs.virtual.third.client.model.EvData;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Object with the data information of the event. 
 */
@ApiModel(description = "Object with the data information of the event. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class EBData {
  @SerializedName("eBlockId")
  private Long eBlockId = null;

  @SerializedName("playlistId")
  private Integer playlistId = null;

  @SerializedName("events")
  private List<EvData> events = null;

  @SerializedName("eventTime")
  private OffsetDateTime eventTime = null;

  @SerializedName("duration")
  private Integer duration = null;

  @SerializedName("data")
  private EbkData data = null;

  public EBData eBlockId(Long eBlockId) {
    this.eBlockId = eBlockId;
    return this;
  }

   /**
   * Get eBlockId
   * @return eBlockId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getEBlockId() {
    return eBlockId;
  }

  public void setEBlockId(Long eBlockId) {
    this.eBlockId = eBlockId;
  }

  public EBData playlistId(Integer playlistId) {
    this.playlistId = playlistId;
    return this;
  }

   /**
   * Get playlistId
   * @return playlistId
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getPlaylistId() {
    return playlistId;
  }

  public void setPlaylistId(Integer playlistId) {
    this.playlistId = playlistId;
  }

  public EBData events(List<EvData> events) {
    this.events = events;
    return this;
  }

  public EBData addEventsItem(EvData eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<EvData>();
    }
    this.events.add(eventsItem);
    return this;
  }

   /**
   * Get events
   * @return events
  **/
  @ApiModelProperty(value = "")
  public List<EvData> getEvents() {
    return events;
  }

  public void setEvents(List<EvData> events) {
    this.events = events;
  }

  public EBData eventTime(OffsetDateTime eventTime) {
    this.eventTime = eventTime;
    return this;
  }

   /**
   * Get eventTime
   * @return eventTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEventTime() {
    return eventTime;
  }

  public void setEventTime(OffsetDateTime eventTime) {
    this.eventTime = eventTime;
  }

  public EBData duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Total duration for this block. This time corresponds to the time from the beginning of the block of events until it ends (Start player). In channel, this value can be ddifferent for any block. In playlist, this value is same that countdown. The popouse that of this field is for controll the duration of event in any instant. 
   * @return duration
  **/
  @ApiModelProperty(value = "Total duration for this block. This time corresponds to the time from the beginning of the block of events until it ends (Start player). In channel, this value can be ddifferent for any block. In playlist, this value is same that countdown. The popouse that of this field is for controll the duration of event in any instant. ")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public EBData data(EbkData data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @ApiModelProperty(value = "")
  public EbkData getData() {
    return data;
  }

  public void setData(EbkData data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EBData ebData = (EBData) o;
    return Objects.equals(this.eBlockId, ebData.eBlockId) &&
        Objects.equals(this.playlistId, ebData.playlistId) &&
        Objects.equals(this.events, ebData.events) &&
        Objects.equals(this.eventTime, ebData.eventTime) &&
        Objects.equals(this.duration, ebData.duration) &&
        Objects.equals(this.data, ebData.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eBlockId, playlistId, events, eventTime, duration, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EBData {\n");
    
    sb.append("    eBlockId: ").append(toIndentedString(eBlockId)).append("\n");
    sb.append("    playlistId: ").append(toIndentedString(playlistId)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    eventTime: ").append(toIndentedString(eventTime)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

