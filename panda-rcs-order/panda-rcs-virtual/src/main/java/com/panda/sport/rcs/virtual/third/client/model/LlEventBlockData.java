/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.EventBlockData;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Live Loto custom data for eventblock. 
 */
@ApiModel(description = "Live Loto custom data for eventblock. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class LlEventBlockData extends EventBlockData {
  @SerializedName("minBet")
  private Integer minBet = null;

  @SerializedName("maxBet")
  private Integer maxBet = null;

  @SerializedName("croupierName")
  private String croupierName = null;

  @SerializedName("videoUrl")
  private String videoUrl = null;

  @SerializedName("presenterVideoUrl")
  private String presenterVideoUrl = null;

  @SerializedName("presenterImageUrl")
  private String presenterImageUrl = null;

  @SerializedName("placeBetsIdentUrl")
  private String placeBetsIdentUrl = null;

  @SerializedName("betsClosedIdentsUrl")
  private String betsClosedIdentsUrl = null;

  @SerializedName("gameIdentUrl")
  private String gameIdentUrl = null;

  @SerializedName("drawDate")
  private OffsetDateTime drawDate = null;

  @SerializedName("updateDate")
  private OffsetDateTime updateDate = null;

  public LlEventBlockData minBet(Integer minBet) {
    this.minBet = minBet;
    return this;
  }

   /**
   * Minimum bet
   * @return minBet
  **/
  @ApiModelProperty(value = "Minimum bet")
  public Integer getMinBet() {
    return minBet;
  }

  public void setMinBet(Integer minBet) {
    this.minBet = minBet;
  }

  public LlEventBlockData maxBet(Integer maxBet) {
    this.maxBet = maxBet;
    return this;
  }

   /**
   * Maximum bet
   * @return maxBet
  **/
  @ApiModelProperty(value = "Maximum bet")
  public Integer getMaxBet() {
    return maxBet;
  }

  public void setMaxBet(Integer maxBet) {
    this.maxBet = maxBet;
  }

  public LlEventBlockData croupierName(String croupierName) {
    this.croupierName = croupierName;
    return this;
  }

   /**
   * Croupier name
   * @return croupierName
  **/
  @ApiModelProperty(value = "Croupier name")
  public String getCroupierName() {
    return croupierName;
  }

  public void setCroupierName(String croupierName) {
    this.croupierName = croupierName;
  }

  public LlEventBlockData videoUrl(String videoUrl) {
    this.videoUrl = videoUrl;
    return this;
  }

   /**
   * Video URL
   * @return videoUrl
  **/
  @ApiModelProperty(value = "Video URL")
  public String getVideoUrl() {
    return videoUrl;
  }

  public void setVideoUrl(String videoUrl) {
    this.videoUrl = videoUrl;
  }

  public LlEventBlockData presenterVideoUrl(String presenterVideoUrl) {
    this.presenterVideoUrl = presenterVideoUrl;
    return this;
  }

   /**
   * Presenter Video URL
   * @return presenterVideoUrl
  **/
  @ApiModelProperty(value = "Presenter Video URL")
  public String getPresenterVideoUrl() {
    return presenterVideoUrl;
  }

  public void setPresenterVideoUrl(String presenterVideoUrl) {
    this.presenterVideoUrl = presenterVideoUrl;
  }

  public LlEventBlockData presenterImageUrl(String presenterImageUrl) {
    this.presenterImageUrl = presenterImageUrl;
    return this;
  }

   /**
   * Presenter Image URL
   * @return presenterImageUrl
  **/
  @ApiModelProperty(value = "Presenter Image URL")
  public String getPresenterImageUrl() {
    return presenterImageUrl;
  }

  public void setPresenterImageUrl(String presenterImageUrl) {
    this.presenterImageUrl = presenterImageUrl;
  }

  public LlEventBlockData placeBetsIdentUrl(String placeBetsIdentUrl) {
    this.placeBetsIdentUrl = placeBetsIdentUrl;
    return this;
  }

   /**
   * Place bets ident URL
   * @return placeBetsIdentUrl
  **/
  @ApiModelProperty(value = "Place bets ident URL")
  public String getPlaceBetsIdentUrl() {
    return placeBetsIdentUrl;
  }

  public void setPlaceBetsIdentUrl(String placeBetsIdentUrl) {
    this.placeBetsIdentUrl = placeBetsIdentUrl;
  }

  public LlEventBlockData betsClosedIdentsUrl(String betsClosedIdentsUrl) {
    this.betsClosedIdentsUrl = betsClosedIdentsUrl;
    return this;
  }

   /**
   * Bets closed ident URL
   * @return betsClosedIdentsUrl
  **/
  @ApiModelProperty(value = "Bets closed ident URL")
  public String getBetsClosedIdentsUrl() {
    return betsClosedIdentsUrl;
  }

  public void setBetsClosedIdentsUrl(String betsClosedIdentsUrl) {
    this.betsClosedIdentsUrl = betsClosedIdentsUrl;
  }

  public LlEventBlockData gameIdentUrl(String gameIdentUrl) {
    this.gameIdentUrl = gameIdentUrl;
    return this;
  }

   /**
   * Game ident URL
   * @return gameIdentUrl
  **/
  @ApiModelProperty(value = "Game ident URL")
  public String getGameIdentUrl() {
    return gameIdentUrl;
  }

  public void setGameIdentUrl(String gameIdentUrl) {
    this.gameIdentUrl = gameIdentUrl;
  }

  public LlEventBlockData drawDate(OffsetDateTime drawDate) {
    this.drawDate = drawDate;
    return this;
  }

   /**
   * Draw date
   * @return drawDate
  **/
  @ApiModelProperty(value = "Draw date")
  public OffsetDateTime getDrawDate() {
    return drawDate;
  }

  public void setDrawDate(OffsetDateTime drawDate) {
    this.drawDate = drawDate;
  }

  public LlEventBlockData updateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Update date
   * @return updateDate
  **/
  @ApiModelProperty(value = "Update date")
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LlEventBlockData llEventBlockData = (LlEventBlockData) o;
    return Objects.equals(this.minBet, llEventBlockData.minBet) &&
        Objects.equals(this.maxBet, llEventBlockData.maxBet) &&
        Objects.equals(this.croupierName, llEventBlockData.croupierName) &&
        Objects.equals(this.videoUrl, llEventBlockData.videoUrl) &&
        Objects.equals(this.presenterVideoUrl, llEventBlockData.presenterVideoUrl) &&
        Objects.equals(this.presenterImageUrl, llEventBlockData.presenterImageUrl) &&
        Objects.equals(this.placeBetsIdentUrl, llEventBlockData.placeBetsIdentUrl) &&
        Objects.equals(this.betsClosedIdentsUrl, llEventBlockData.betsClosedIdentsUrl) &&
        Objects.equals(this.gameIdentUrl, llEventBlockData.gameIdentUrl) &&
        Objects.equals(this.drawDate, llEventBlockData.drawDate) &&
        Objects.equals(this.updateDate, llEventBlockData.updateDate) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minBet, maxBet, croupierName, videoUrl, presenterVideoUrl, presenterImageUrl, placeBetsIdentUrl, betsClosedIdentsUrl, gameIdentUrl, drawDate, updateDate, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LlEventBlockData {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    minBet: ").append(toIndentedString(minBet)).append("\n");
    sb.append("    maxBet: ").append(toIndentedString(maxBet)).append("\n");
    sb.append("    croupierName: ").append(toIndentedString(croupierName)).append("\n");
    sb.append("    videoUrl: ").append(toIndentedString(videoUrl)).append("\n");
    sb.append("    presenterVideoUrl: ").append(toIndentedString(presenterVideoUrl)).append("\n");
    sb.append("    presenterImageUrl: ").append(toIndentedString(presenterImageUrl)).append("\n");
    sb.append("    placeBetsIdentUrl: ").append(toIndentedString(placeBetsIdentUrl)).append("\n");
    sb.append("    betsClosedIdentsUrl: ").append(toIndentedString(betsClosedIdentsUrl)).append("\n");
    sb.append("    gameIdentUrl: ").append(toIndentedString(gameIdentUrl)).append("\n");
    sb.append("    drawDate: ").append(toIndentedString(drawDate)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

