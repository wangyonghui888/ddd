/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.DeliveringStatus;
import com.panda.sport.rcs.virtual.third.client.model.GeneratingStatus;
import com.panda.sport.rcs.virtual.third.client.model.RenderingStatus;
import com.panda.sport.rcs.virtual.third.client.model.ReportData;
import com.panda.sport.rcs.virtual.third.client.model.ReportParams;
import com.panda.sport.rcs.virtual.third.client.model.ReportStatus;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Object with the data information of the report.
 */
@ApiModel(description = "Object with the data information of the report.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")




public class Report {
  @SerializedName("classType")
  private String classType = null;

  @SerializedName("reportId")
  private Long reportId = null;

  @SerializedName("jobId")
  private Long jobId = null;

  @SerializedName("extId")
  private String extId = null;

  @SerializedName("extGroupId")
  private String extGroupId = null;

  @SerializedName("creatorId")
  private Integer creatorId = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("params")
  private ReportParams params = null;

  @SerializedName("startTime")
  private OffsetDateTime startTime = null;

  @SerializedName("endTime")
  private OffsetDateTime endTime = null;

  @SerializedName("deprecationTime")
  private OffsetDateTime deprecationTime = null;

  @SerializedName("entityId")
  private Integer entityId = null;

  @SerializedName("fileName")
  private String fileName = null;

  @SerializedName("fileSize")
  private Integer fileSize = null;

  @SerializedName("status")
  private ReportStatus status = null;

  @SerializedName("generatingStatus")
  private GeneratingStatus generatingStatus = null;

  @SerializedName("renderingStatus")
  private RenderingStatus renderingStatus = null;

  @SerializedName("deliveringStatus")
  private DeliveringStatus deliveringStatus = null;

  @SerializedName("generationTime")
  private OffsetDateTime generationTime = null;

  @SerializedName("deliveredTime")
  private OffsetDateTime deliveredTime = null;

  @SerializedName("creationTime")
  private OffsetDateTime creationTime = null;

  @SerializedName("renderTime")
  private OffsetDateTime renderTime = null;

  @SerializedName("pausedTime")
  private OffsetDateTime pausedTime = null;

  @SerializedName("contentType")
  private String contentType = null;

  @SerializedName("data")
  private ReportData data = null;

  @SerializedName("sequentialReport")
  private Boolean sequentialReport = false;

  public Report() {
    this.classType = this.getClass().getSimpleName();
  }
  public Report classType(String classType) {
    this.classType = classType;
    return this;
  }

   /**
   * Get classType
   * @return classType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getClassType() {
    return classType;
  }

  public void setClassType(String classType) {
    this.classType = classType;
  }

  public Report reportId(Long reportId) {
    this.reportId = reportId;
    return this;
  }

   /**
   * Report unique identifier.
   * @return reportId
  **/
  @ApiModelProperty(value = "Report unique identifier.")
  public Long getReportId() {
    return reportId;
  }

  public void setReportId(Long reportId) {
    this.reportId = reportId;
  }

  public Report jobId(Long jobId) {
    this.jobId = jobId;
    return this;
  }

   /**
   * Id of job scheduler that generated current report.
   * @return jobId
  **/
  @ApiModelProperty(value = "Id of job scheduler that generated current report.")
  public Long getJobId() {
    return jobId;
  }

  public void setJobId(Long jobId) {
    this.jobId = jobId;
  }

  public Report extId(String extId) {
    this.extId = extId;
    return this;
  }

   /**
   * ExternalId reference to generated report.
   * @return extId
  **/
  @ApiModelProperty(value = "ExternalId reference to generated report.")
  public String getExtId() {
    return extId;
  }

  public void setExtId(String extId) {
    this.extId = extId;
  }

  public Report extGroupId(String extGroupId) {
    this.extGroupId = extGroupId;
    return this;
  }

   /**
   * Id used for aggregated reports on same creatorId.
   * @return extGroupId
  **/
  @ApiModelProperty(value = "Id used for aggregated reports on same creatorId.")
  public String getExtGroupId() {
    return extGroupId;
  }

  public void setExtGroupId(String extGroupId) {
    this.extGroupId = extGroupId;
  }

  public Report creatorId(Integer creatorId) {
    this.creatorId = creatorId;
    return this;
  }

   /**
   * Id of entity who requested generation of this report.
   * @return creatorId
  **/
  @ApiModelProperty(value = "Id of entity who requested generation of this report.")
  public Integer getCreatorId() {
    return creatorId;
  }

  public void setCreatorId(Integer creatorId) {
    this.creatorId = creatorId;
  }

  public Report description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Human readable description of current report.
   * @return description
  **/
  @ApiModelProperty(value = "Human readable description of current report.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Report params(ReportParams params) {
    this.params = params;
    return this;
  }

   /**
   * Get params
   * @return params
  **/
  @ApiModelProperty(value = "")
  public ReportParams getParams() {
    return params;
  }

  public void setParams(ReportParams params) {
    this.params = params;
  }

  public Report startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Start time of original data related to this report (&gt;&#x3D;).
   * @return startTime
  **/
  @ApiModelProperty(value = "Start time of original data related to this report (>=).")
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }

  public Report endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * End time, non inclusive limt of original data related to this report (&lt;).
   * @return endTime
  **/
  @ApiModelProperty(value = "End time, non inclusive limt of original data related to this report (<).")
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }

  public Report deprecationTime(OffsetDateTime deprecationTime) {
    this.deprecationTime = deprecationTime;
    return this;
  }

   /**
   * When report could be purged from the system (optional).
   * @return deprecationTime
  **/
  @ApiModelProperty(value = "When report could be purged from the system (optional).")
  public OffsetDateTime getDeprecationTime() {
    return deprecationTime;
  }

  public void setDeprecationTime(OffsetDateTime deprecationTime) {
    this.deprecationTime = deprecationTime;
  }

  public Report entityId(Integer entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * Root entity for generation of this report.
   * @return entityId
  **/
  @ApiModelProperty(value = "Root entity for generation of this report.")
  public Integer getEntityId() {
    return entityId;
  }

  public void setEntityId(Integer entityId) {
    this.entityId = entityId;
  }

  public Report fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Filename of current report to be attached on target.
   * @return fileName
  **/
  @ApiModelProperty(value = "Filename of current report to be attached on target.")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public Report fileSize(Integer fileSize) {
    this.fileSize = fileSize;
    return this;
  }

   /**
   * File size in bytes.
   * @return fileSize
  **/
  @ApiModelProperty(value = "File size in bytes.")
  public Integer getFileSize() {
    return fileSize;
  }

  public void setFileSize(Integer fileSize) {
    this.fileSize = fileSize;
  }

  public Report status(ReportStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public ReportStatus getStatus() {
    return status;
  }

  public void setStatus(ReportStatus status) {
    this.status = status;
  }

  public Report generatingStatus(GeneratingStatus generatingStatus) {
    this.generatingStatus = generatingStatus;
    return this;
  }

   /**
   * Get generatingStatus
   * @return generatingStatus
  **/
  @ApiModelProperty(value = "")
  public GeneratingStatus getGeneratingStatus() {
    return generatingStatus;
  }

  public void setGeneratingStatus(GeneratingStatus generatingStatus) {
    this.generatingStatus = generatingStatus;
  }

  public Report renderingStatus(RenderingStatus renderingStatus) {
    this.renderingStatus = renderingStatus;
    return this;
  }

   /**
   * Get renderingStatus
   * @return renderingStatus
  **/
  @ApiModelProperty(value = "")
  public RenderingStatus getRenderingStatus() {
    return renderingStatus;
  }

  public void setRenderingStatus(RenderingStatus renderingStatus) {
    this.renderingStatus = renderingStatus;
  }

  public Report deliveringStatus(DeliveringStatus deliveringStatus) {
    this.deliveringStatus = deliveringStatus;
    return this;
  }

   /**
   * Get deliveringStatus
   * @return deliveringStatus
  **/
  @ApiModelProperty(value = "")
  public DeliveringStatus getDeliveringStatus() {
    return deliveringStatus;
  }

  public void setDeliveringStatus(DeliveringStatus deliveringStatus) {
    this.deliveringStatus = deliveringStatus;
  }

  public Report generationTime(OffsetDateTime generationTime) {
    this.generationTime = generationTime;
    return this;
  }

   /**
   * Time at the moment of report request generation.
   * @return generationTime
  **/
  @ApiModelProperty(value = "Time at the moment of report request generation.")
  public OffsetDateTime getGenerationTime() {
    return generationTime;
  }

  public void setGenerationTime(OffsetDateTime generationTime) {
    this.generationTime = generationTime;
  }

  public Report deliveredTime(OffsetDateTime deliveredTime) {
    this.deliveredTime = deliveredTime;
    return this;
  }

   /**
   * Time at the moment generation finish, and result is avialable.
   * @return deliveredTime
  **/
  @ApiModelProperty(value = "Time at the moment generation finish, and result is avialable.")
  public OffsetDateTime getDeliveredTime() {
    return deliveredTime;
  }

  public void setDeliveredTime(OffsetDateTime deliveredTime) {
    this.deliveredTime = deliveredTime;
  }

  public Report creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

   /**
   * Time at the moment of report is created.
   * @return creationTime
  **/
  @ApiModelProperty(value = "Time at the moment of report is created.")
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }

  public Report renderTime(OffsetDateTime renderTime) {
    this.renderTime = renderTime;
    return this;
  }

   /**
   * Time at the moment report is rendered, and file is available.
   * @return renderTime
  **/
  @ApiModelProperty(value = "Time at the moment report is rendered, and file is available.")
  public OffsetDateTime getRenderTime() {
    return renderTime;
  }

  public void setRenderTime(OffsetDateTime renderTime) {
    this.renderTime = renderTime;
  }

  public Report pausedTime(OffsetDateTime pausedTime) {
    this.pausedTime = pausedTime;
    return this;
  }

   /**
   * Time at the moment that report status goes from Generating/Rendering/Sending to Paused.
   * @return pausedTime
  **/
  @ApiModelProperty(value = "Time at the moment that report status goes from Generating/Rendering/Sending to Paused.")
  public OffsetDateTime getPausedTime() {
    return pausedTime;
  }

  public void setPausedTime(OffsetDateTime pausedTime) {
    this.pausedTime = pausedTime;
  }

  public Report contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * Web content-type of data blob .
   * @return contentType
  **/
  @ApiModelProperty(value = "Web content-type of data blob .")
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }

  public Report data(ReportData data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @ApiModelProperty(value = "")
  public ReportData getData() {
    return data;
  }

  public void setData(ReportData data) {
    this.data = data;
  }

  public Report sequentialReport(Boolean sequentialReport) {
    this.sequentialReport = sequentialReport;
    return this;
  }

   /**
   * Check whether it is a sequential report or not.
   * @return sequentialReport
  **/
  @ApiModelProperty(value = "Check whether it is a sequential report or not.")
  public Boolean isSequentialReport() {
    return sequentialReport;
  }

  public void setSequentialReport(Boolean sequentialReport) {
    this.sequentialReport = sequentialReport;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Report report = (Report) o;
    return Objects.equals(this.classType, report.classType) &&
        Objects.equals(this.reportId, report.reportId) &&
        Objects.equals(this.jobId, report.jobId) &&
        Objects.equals(this.extId, report.extId) &&
        Objects.equals(this.extGroupId, report.extGroupId) &&
        Objects.equals(this.creatorId, report.creatorId) &&
        Objects.equals(this.description, report.description) &&
        Objects.equals(this.params, report.params) &&
        Objects.equals(this.startTime, report.startTime) &&
        Objects.equals(this.endTime, report.endTime) &&
        Objects.equals(this.deprecationTime, report.deprecationTime) &&
        Objects.equals(this.entityId, report.entityId) &&
        Objects.equals(this.fileName, report.fileName) &&
        Objects.equals(this.fileSize, report.fileSize) &&
        Objects.equals(this.status, report.status) &&
        Objects.equals(this.generatingStatus, report.generatingStatus) &&
        Objects.equals(this.renderingStatus, report.renderingStatus) &&
        Objects.equals(this.deliveringStatus, report.deliveringStatus) &&
        Objects.equals(this.generationTime, report.generationTime) &&
        Objects.equals(this.deliveredTime, report.deliveredTime) &&
        Objects.equals(this.creationTime, report.creationTime) &&
        Objects.equals(this.renderTime, report.renderTime) &&
        Objects.equals(this.pausedTime, report.pausedTime) &&
        Objects.equals(this.contentType, report.contentType) &&
        Objects.equals(this.data, report.data) &&
        Objects.equals(this.sequentialReport, report.sequentialReport);
  }

  @Override
  public int hashCode() {
    return Objects.hash(classType, reportId, jobId, extId, extGroupId, creatorId, description, params, startTime, endTime, deprecationTime, entityId, fileName, fileSize, status, generatingStatus, renderingStatus, deliveringStatus, generationTime, deliveredTime, creationTime, renderTime, pausedTime, contentType, data, sequentialReport);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Report {\n");
    
    sb.append("    classType: ").append(toIndentedString(classType)).append("\n");
    sb.append("    reportId: ").append(toIndentedString(reportId)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    extId: ").append(toIndentedString(extId)).append("\n");
    sb.append("    extGroupId: ").append(toIndentedString(extGroupId)).append("\n");
    sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    deprecationTime: ").append(toIndentedString(deprecationTime)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    generatingStatus: ").append(toIndentedString(generatingStatus)).append("\n");
    sb.append("    renderingStatus: ").append(toIndentedString(renderingStatus)).append("\n");
    sb.append("    deliveringStatus: ").append(toIndentedString(deliveringStatus)).append("\n");
    sb.append("    generationTime: ").append(toIndentedString(generationTime)).append("\n");
    sb.append("    deliveredTime: ").append(toIndentedString(deliveredTime)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    renderTime: ").append(toIndentedString(renderTime)).append("\n");
    sb.append("    pausedTime: ").append(toIndentedString(pausedTime)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    sequentialReport: ").append(toIndentedString(sequentialReport)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

