/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Mobile Profile Category 
 */
@ApiModel(description = "Mobile Profile Category ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class MobileProfileCategory {
  @SerializedName("categoryId")
  private String categoryId = null;

  @SerializedName("position")
  private Integer position = null;

  @SerializedName("tagSelect")
  private List<String> tagSelect = null;

  @SerializedName("logo")
  private String logo = null;

  public MobileProfileCategory categoryId(String categoryId) {
    this.categoryId = categoryId;
    return this;
  }

   /**
   * Unique Category Id 
   * @return categoryId
  **/
  @ApiModelProperty(required = true, value = "Unique Category Id ")
  public String getCategoryId() {
    return categoryId;
  }

  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }

  public MobileProfileCategory position(Integer position) {
    this.position = position;
    return this;
  }

   /**
   * Integer used to define the priority between categories. Positive values. With 0 being the lowest priority.  Used to order the categories list, from highest to lowest priority. If several categories have the same priority, they will be ordered by category.         
   * minimum: 0
   * @return position
  **/
  @ApiModelProperty(value = "Integer used to define the priority between categories. Positive values. With 0 being the lowest priority.  Used to order the categories list, from highest to lowest priority. If several categories have the same priority, they will be ordered by category.         ")
  public Integer getPosition() {
    return position;
  }

  public void setPosition(Integer position) {
    this.position = position;
  }

  public MobileProfileCategory tagSelect(List<String> tagSelect) {
    this.tagSelect = tagSelect;
    return this;
  }

  public MobileProfileCategory addTagSelectItem(String tagSelectItem) {
    if (this.tagSelect == null) {
      this.tagSelect = new ArrayList<String>();
    }
    this.tagSelect.add(tagSelectItem);
    return this;
  }

   /**
   * Tags selected for this category. These will be used to filter the playlist that will create the playlist group. 
   * @return tagSelect
  **/
  @ApiModelProperty(value = "Tags selected for this category. These will be used to filter the playlist that will create the playlist group. ")
  public List<String> getTagSelect() {
    return tagSelect;
  }

  public void setTagSelect(List<String> tagSelect) {
    this.tagSelect = tagSelect;
  }

  public MobileProfileCategory logo(String logo) {
    this.logo = logo;
    return this;
  }

   /**
   * Icon name in assert library            
   * @return logo
  **/
  @ApiModelProperty(value = "Icon name in assert library            ")
  public String getLogo() {
    return logo;
  }

  public void setLogo(String logo) {
    this.logo = logo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MobileProfileCategory mobileProfileCategory = (MobileProfileCategory) o;
    return Objects.equals(this.categoryId, mobileProfileCategory.categoryId) &&
        Objects.equals(this.position, mobileProfileCategory.position) &&
        Objects.equals(this.tagSelect, mobileProfileCategory.tagSelect) &&
        Objects.equals(this.logo, mobileProfileCategory.logo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryId, position, tagSelect, logo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MobileProfileCategory {\n");
    
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    tagSelect: ").append(toIndentedString(tagSelect)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

