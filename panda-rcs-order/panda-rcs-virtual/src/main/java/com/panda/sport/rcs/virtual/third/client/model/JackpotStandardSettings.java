/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.JackpotTypeSettings;
import java.io.IOException;

/**
 * JackpotStandardSettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class JackpotStandardSettings extends JackpotTypeSettings {
  @SerializedName("jackpotPercentFront")
  private Double jackpotPercentFront = null;

  @SerializedName("jackpotPercentReserve")
  private Double jackpotPercentReserve = null;

  @SerializedName("jackpotLowLimit")
  private Double jackpotLowLimit = null;

  @SerializedName("jackpotHighLimit")
  private Double jackpotHighLimit = null;

  public JackpotStandardSettings jackpotPercentFront(Double jackpotPercentFront) {
    this.jackpotPercentFront = jackpotPercentFront;
    return this;
  }

   /**
   * Get jackpotPercentFront
   * minimum: 0
   * maximum: 100
   * @return jackpotPercentFront
  **/
  @ApiModelProperty(value = "")
  public Double getJackpotPercentFront() {
    return jackpotPercentFront;
  }

  public void setJackpotPercentFront(Double jackpotPercentFront) {
    this.jackpotPercentFront = jackpotPercentFront;
  }

  public JackpotStandardSettings jackpotPercentReserve(Double jackpotPercentReserve) {
    this.jackpotPercentReserve = jackpotPercentReserve;
    return this;
  }

   /**
   * Get jackpotPercentReserve
   * minimum: 0
   * maximum: 100
   * @return jackpotPercentReserve
  **/
  @ApiModelProperty(value = "")
  public Double getJackpotPercentReserve() {
    return jackpotPercentReserve;
  }

  public void setJackpotPercentReserve(Double jackpotPercentReserve) {
    this.jackpotPercentReserve = jackpotPercentReserve;
  }

  public JackpotStandardSettings jackpotLowLimit(Double jackpotLowLimit) {
    this.jackpotLowLimit = jackpotLowLimit;
    return this;
  }

   /**
   * Get jackpotLowLimit
   * minimum: 0
   * @return jackpotLowLimit
  **/
  @ApiModelProperty(value = "")
  public Double getJackpotLowLimit() {
    return jackpotLowLimit;
  }

  public void setJackpotLowLimit(Double jackpotLowLimit) {
    this.jackpotLowLimit = jackpotLowLimit;
  }

  public JackpotStandardSettings jackpotHighLimit(Double jackpotHighLimit) {
    this.jackpotHighLimit = jackpotHighLimit;
    return this;
  }

   /**
   * Get jackpotHighLimit
   * minimum: 0
   * @return jackpotHighLimit
  **/
  @ApiModelProperty(value = "")
  public Double getJackpotHighLimit() {
    return jackpotHighLimit;
  }

  public void setJackpotHighLimit(Double jackpotHighLimit) {
    this.jackpotHighLimit = jackpotHighLimit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JackpotStandardSettings jackpotStandardSettings = (JackpotStandardSettings) o;
    return Objects.equals(this.jackpotPercentFront, jackpotStandardSettings.jackpotPercentFront) &&
        Objects.equals(this.jackpotPercentReserve, jackpotStandardSettings.jackpotPercentReserve) &&
        Objects.equals(this.jackpotLowLimit, jackpotStandardSettings.jackpotLowLimit) &&
        Objects.equals(this.jackpotHighLimit, jackpotStandardSettings.jackpotHighLimit) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jackpotPercentFront, jackpotPercentReserve, jackpotLowLimit, jackpotHighLimit, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JackpotStandardSettings {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    jackpotPercentFront: ").append(toIndentedString(jackpotPercentFront)).append("\n");
    sb.append("    jackpotPercentReserve: ").append(toIndentedString(jackpotPercentReserve)).append("\n");
    sb.append("    jackpotLowLimit: ").append(toIndentedString(jackpotLowLimit)).append("\n");
    sb.append("    jackpotHighLimit: ").append(toIndentedString(jackpotHighLimit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

