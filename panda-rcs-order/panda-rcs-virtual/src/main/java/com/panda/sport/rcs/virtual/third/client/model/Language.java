/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Language information 
 */
@ApiModel(description = "Language information ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class Language {
  @SerializedName("country")
  private String country = null;

  @SerializedName("internationalLangName")
  private String internationalLangName = null;

  @SerializedName("localLangName")
  private String localLangName = null;

  @SerializedName("isoName")
  private String isoName = null;

  public Language country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Language country
   * @return country
  **/
  @ApiModelProperty(value = "Language country")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public Language internationalLangName(String internationalLangName) {
    this.internationalLangName = internationalLangName;
    return this;
  }

   /**
   * International language name
   * @return internationalLangName
  **/
  @ApiModelProperty(value = "International language name")
  public String getInternationalLangName() {
    return internationalLangName;
  }

  public void setInternationalLangName(String internationalLangName) {
    this.internationalLangName = internationalLangName;
  }

  public Language localLangName(String localLangName) {
    this.localLangName = localLangName;
    return this;
  }

   /**
   * Local language name
   * @return localLangName
  **/
  @ApiModelProperty(value = "Local language name")
  public String getLocalLangName() {
    return localLangName;
  }

  public void setLocalLangName(String localLangName) {
    this.localLangName = localLangName;
  }

  public Language isoName(String isoName) {
    this.isoName = isoName;
    return this;
  }

   /**
   * Language iso name
   * @return isoName
  **/
  @ApiModelProperty(value = "Language iso name")
  public String getIsoName() {
    return isoName;
  }

  public void setIsoName(String isoName) {
    this.isoName = isoName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Language language = (Language) o;
    return Objects.equals(this.country, language.country) &&
        Objects.equals(this.internationalLangName, language.internationalLangName) &&
        Objects.equals(this.localLangName, language.localLangName) &&
        Objects.equals(this.isoName, language.isoName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(country, internationalLangName, localLangName, isoName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Language {\n");
    
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    internationalLangName: ").append(toIndentedString(internationalLangName)).append("\n");
    sb.append("    localLangName: ").append(toIndentedString(localLangName)).append("\n");
    sb.append("    isoName: ").append(toIndentedString(isoName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

