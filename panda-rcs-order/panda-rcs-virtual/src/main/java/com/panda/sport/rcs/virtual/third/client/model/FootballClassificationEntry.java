/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about football team classification. 
 */
@ApiModel(description = "Information about football team classification. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class FootballClassificationEntry {
  @SerializedName("teamId")
  private String teamId = null;

  @SerializedName("fifaCode")
  private String fifaCode = null;

  @SerializedName("ranking")
  private Integer ranking = null;

  @SerializedName("points")
  private Integer points = null;

  @SerializedName("history")
  private List<String> history = null;

  @SerializedName("win")
  private Integer win = null;

  @SerializedName("lost")
  private Integer lost = null;

  @SerializedName("draw")
  private Integer draw = null;

  @SerializedName("goalsScored")
  private Integer goalsScored = null;

  @SerializedName("goalsConceded")
  private Integer goalsConceded = null;

  @SerializedName("yellowCards")
  private Integer yellowCards = null;

  public FootballClassificationEntry teamId(String teamId) {
    this.teamId = teamId;
    return this;
  }

   /**
   * Unique identifier of team
   * @return teamId
  **/
  @ApiModelProperty(value = "Unique identifier of team")
  public String getTeamId() {
    return teamId;
  }

  public void setTeamId(String teamId) {
    this.teamId = teamId;
  }

  public FootballClassificationEntry fifaCode(String fifaCode) {
    this.fifaCode = fifaCode;
    return this;
  }

   /**
   * FIFA Code of team
   * @return fifaCode
  **/
  @ApiModelProperty(value = "FIFA Code of team")
  public String getFifaCode() {
    return fifaCode;
  }

  public void setFifaCode(String fifaCode) {
    this.fifaCode = fifaCode;
  }

  public FootballClassificationEntry ranking(Integer ranking) {
    this.ranking = ranking;
    return this;
  }

   /**
   * Position in Ranking FIFA
   * @return ranking
  **/
  @ApiModelProperty(value = "Position in Ranking FIFA")
  public Integer getRanking() {
    return ranking;
  }

  public void setRanking(Integer ranking) {
    this.ranking = ranking;
  }

  public FootballClassificationEntry points(Integer points) {
    this.points = points;
    return this;
  }

   /**
   * Points of a team
   * @return points
  **/
  @ApiModelProperty(value = "Points of a team")
  public Integer getPoints() {
    return points;
  }

  public void setPoints(Integer points) {
    this.points = points;
  }

  public FootballClassificationEntry history(List<String> history) {
    this.history = history;
    return this;
  }

  public FootballClassificationEntry addHistoryItem(String historyItem) {
    if (this.history == null) {
      this.history = new ArrayList<String>();
    }
    this.history.add(historyItem);
    return this;
  }

   /**
   * Represent de last five matches result. 
   * @return history
  **/
  @ApiModelProperty(value = "Represent de last five matches result. ")
  public List<String> getHistory() {
    return history;
  }

  public void setHistory(List<String> history) {
    this.history = history;
  }

  public FootballClassificationEntry win(Integer win) {
    this.win = win;
    return this;
  }

   /**
   * Total of matches won
   * @return win
  **/
  @ApiModelProperty(value = "Total of matches won")
  public Integer getWin() {
    return win;
  }

  public void setWin(Integer win) {
    this.win = win;
  }

  public FootballClassificationEntry lost(Integer lost) {
    this.lost = lost;
    return this;
  }

   /**
   * Total of matches lost
   * @return lost
  **/
  @ApiModelProperty(value = "Total of matches lost")
  public Integer getLost() {
    return lost;
  }

  public void setLost(Integer lost) {
    this.lost = lost;
  }

  public FootballClassificationEntry draw(Integer draw) {
    this.draw = draw;
    return this;
  }

   /**
   * Total of matches draw
   * @return draw
  **/
  @ApiModelProperty(value = "Total of matches draw")
  public Integer getDraw() {
    return draw;
  }

  public void setDraw(Integer draw) {
    this.draw = draw;
  }

  public FootballClassificationEntry goalsScored(Integer goalsScored) {
    this.goalsScored = goalsScored;
    return this;
  }

   /**
   * Total of goals scored
   * @return goalsScored
  **/
  @ApiModelProperty(value = "Total of goals scored")
  public Integer getGoalsScored() {
    return goalsScored;
  }

  public void setGoalsScored(Integer goalsScored) {
    this.goalsScored = goalsScored;
  }

  public FootballClassificationEntry goalsConceded(Integer goalsConceded) {
    this.goalsConceded = goalsConceded;
    return this;
  }

   /**
   * Total of conceded
   * @return goalsConceded
  **/
  @ApiModelProperty(value = "Total of conceded")
  public Integer getGoalsConceded() {
    return goalsConceded;
  }

  public void setGoalsConceded(Integer goalsConceded) {
    this.goalsConceded = goalsConceded;
  }

  public FootballClassificationEntry yellowCards(Integer yellowCards) {
    this.yellowCards = yellowCards;
    return this;
  }

   /**
   * Total of yellow cards
   * @return yellowCards
  **/
  @ApiModelProperty(value = "Total of yellow cards")
  public Integer getYellowCards() {
    return yellowCards;
  }

  public void setYellowCards(Integer yellowCards) {
    this.yellowCards = yellowCards;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FootballClassificationEntry footballClassificationEntry = (FootballClassificationEntry) o;
    return Objects.equals(this.teamId, footballClassificationEntry.teamId) &&
        Objects.equals(this.fifaCode, footballClassificationEntry.fifaCode) &&
        Objects.equals(this.ranking, footballClassificationEntry.ranking) &&
        Objects.equals(this.points, footballClassificationEntry.points) &&
        Objects.equals(this.history, footballClassificationEntry.history) &&
        Objects.equals(this.win, footballClassificationEntry.win) &&
        Objects.equals(this.lost, footballClassificationEntry.lost) &&
        Objects.equals(this.draw, footballClassificationEntry.draw) &&
        Objects.equals(this.goalsScored, footballClassificationEntry.goalsScored) &&
        Objects.equals(this.goalsConceded, footballClassificationEntry.goalsConceded) &&
        Objects.equals(this.yellowCards, footballClassificationEntry.yellowCards);
  }

  @Override
  public int hashCode() {
    return Objects.hash(teamId, fifaCode, ranking, points, history, win, lost, draw, goalsScored, goalsConceded, yellowCards);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FootballClassificationEntry {\n");
    
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    fifaCode: ").append(toIndentedString(fifaCode)).append("\n");
    sb.append("    ranking: ").append(toIndentedString(ranking)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    history: ").append(toIndentedString(history)).append("\n");
    sb.append("    win: ").append(toIndentedString(win)).append("\n");
    sb.append("    lost: ").append(toIndentedString(lost)).append("\n");
    sb.append("    draw: ").append(toIndentedString(draw)).append("\n");
    sb.append("    goalsScored: ").append(toIndentedString(goalsScored)).append("\n");
    sb.append("    goalsConceded: ").append(toIndentedString(goalsConceded)).append("\n");
    sb.append("    yellowCards: ").append(toIndentedString(yellowCards)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

