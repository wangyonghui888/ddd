/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.CurrencyRateInfo;
import java.io.IOException;

/**
 * Object to define balance account data per currency
 */
@ApiModel(description = "Object to define balance account data per currency")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class InvoiceReportCurrencyData {
  @SerializedName("currency")
  private String currency = null;

  @SerializedName("currencyRate")
  private CurrencyRateInfo currencyRate = null;

  @SerializedName("netTurnover")
  private Double netTurnover = null;

  @SerializedName("netPaidOut")
  private Double netPaidOut = null;

  @SerializedName("balance")
  private Double balance = null;

  @SerializedName("netWon")
  private Double netWon = null;

  @SerializedName("total")
  private Double total = null;

  @SerializedName("outputCurrency")
  private String outputCurrency = null;

  @SerializedName("outputCurrencyRate")
  private CurrencyRateInfo outputCurrencyRate = null;

  @SerializedName("totalExchange")
  private Double totalExchange = null;

  @SerializedName("entitiesWithTickets")
  private Integer entitiesWithTickets = null;

  @SerializedName("playedTickets")
  private Integer playedTickets = null;

  @SerializedName("stakeTaxes")
  private Double stakeTaxes = 0.0d;

  @SerializedName("paidOutTaxes")
  private Double paidOutTaxes = 0.0d;

  @SerializedName("currencyRateApplied")
  private Double currencyRateApplied = null;

  public InvoiceReportCurrencyData currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency.
   * @return currency
  **/
  @ApiModelProperty(value = "Currency.")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public InvoiceReportCurrencyData currencyRate(CurrencyRateInfo currencyRate) {
    this.currencyRate = currencyRate;
    return this;
  }

   /**
   * Get currencyRate
   * @return currencyRate
  **/
  @ApiModelProperty(value = "")
  public CurrencyRateInfo getCurrencyRate() {
    return currencyRate;
  }

  public void setCurrencyRate(CurrencyRateInfo currencyRate) {
    this.currencyRate = currencyRate;
  }

  public InvoiceReportCurrencyData netTurnover(Double netTurnover) {
    this.netTurnover = netTurnover;
    return this;
  }

   /**
   * Net turnover. Diference between net stake amount and net cancelled stake amount.
   * @return netTurnover
  **/
  @ApiModelProperty(value = "Net turnover. Diference between net stake amount and net cancelled stake amount.")
  public Double getNetTurnover() {
    return netTurnover;
  }

  public void setNetTurnover(Double netTurnover) {
    this.netTurnover = netTurnover;
  }

  public InvoiceReportCurrencyData netPaidOut(Double netPaidOut) {
    this.netPaidOut = netPaidOut;
    return this;
  }

   /**
   * Net paid out. Include paid out, bonus paid, jackpot paid  and mega jackpot paid.
   * @return netPaidOut
  **/
  @ApiModelProperty(value = "Net paid out. Include paid out, bonus paid, jackpot paid  and mega jackpot paid.")
  public Double getNetPaidOut() {
    return netPaidOut;
  }

  public void setNetPaidOut(Double netPaidOut) {
    this.netPaidOut = netPaidOut;
  }

  public InvoiceReportCurrencyData balance(Double balance) {
    this.balance = balance;
    return this;
  }

   /**
   * The balance amount. Difference between the net turnover amount and the net paid out amount.
   * @return balance
  **/
  @ApiModelProperty(value = "The balance amount. Difference between the net turnover amount and the net paid out amount.")
  public Double getBalance() {
    return balance;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }

  public InvoiceReportCurrencyData netWon(Double netWon) {
    this.netWon = netWon;
    return this;
  }

   /**
   * Net won amount. Include won, bonus won, jackpot won and mega jackpot won.
   * @return netWon
  **/
  @ApiModelProperty(value = "Net won amount. Include won, bonus won, jackpot won and mega jackpot won.")
  public Double getNetWon() {
    return netWon;
  }

  public void setNetWon(Double netWon) {
    this.netWon = netWon;
  }

  public InvoiceReportCurrencyData total(Double total) {
    this.total = total;
    return this;
  }

   /**
   * Total amount after applying software license fee
   * @return total
  **/
  @ApiModelProperty(value = "Total amount after applying software license fee")
  public Double getTotal() {
    return total;
  }

  public void setTotal(Double total) {
    this.total = total;
  }

  public InvoiceReportCurrencyData outputCurrency(String outputCurrency) {
    this.outputCurrency = outputCurrency;
    return this;
  }

   /**
   * Output Currency. 
   * @return outputCurrency
  **/
  @ApiModelProperty(value = "Output Currency. ")
  public String getOutputCurrency() {
    return outputCurrency;
  }

  public void setOutputCurrency(String outputCurrency) {
    this.outputCurrency = outputCurrency;
  }

  public InvoiceReportCurrencyData outputCurrencyRate(CurrencyRateInfo outputCurrencyRate) {
    this.outputCurrencyRate = outputCurrencyRate;
    return this;
  }

   /**
   * Get outputCurrencyRate
   * @return outputCurrencyRate
  **/
  @ApiModelProperty(value = "")
  public CurrencyRateInfo getOutputCurrencyRate() {
    return outputCurrencyRate;
  }

  public void setOutputCurrencyRate(CurrencyRateInfo outputCurrencyRate) {
    this.outputCurrencyRate = outputCurrencyRate;
  }

  public InvoiceReportCurrencyData totalExchange(Double totalExchange) {
    this.totalExchange = totalExchange;
    return this;
  }

   /**
   * Total amount after applying software license fee to be remitted by output currency.
   * @return totalExchange
  **/
  @ApiModelProperty(value = "Total amount after applying software license fee to be remitted by output currency.")
  public Double getTotalExchange() {
    return totalExchange;
  }

  public void setTotalExchange(Double totalExchange) {
    this.totalExchange = totalExchange;
  }

  public InvoiceReportCurrencyData entitiesWithTickets(Integer entitiesWithTickets) {
    this.entitiesWithTickets = entitiesWithTickets;
    return this;
  }

   /**
   * Number of entities with tickets played.
   * @return entitiesWithTickets
  **/
  @ApiModelProperty(value = "Number of entities with tickets played.")
  public Integer getEntitiesWithTickets() {
    return entitiesWithTickets;
  }

  public void setEntitiesWithTickets(Integer entitiesWithTickets) {
    this.entitiesWithTickets = entitiesWithTickets;
  }

  public InvoiceReportCurrencyData playedTickets(Integer playedTickets) {
    this.playedTickets = playedTickets;
    return this;
  }

   /**
   * Number of tickets played.
   * @return playedTickets
  **/
  @ApiModelProperty(value = "Number of tickets played.")
  public Integer getPlayedTickets() {
    return playedTickets;
  }

  public void setPlayedTickets(Integer playedTickets) {
    this.playedTickets = playedTickets;
  }

  public InvoiceReportCurrencyData stakeTaxes(Double stakeTaxes) {
    this.stakeTaxes = stakeTaxes;
    return this;
  }

   /**
   * Total Stake Taxes.
   * @return stakeTaxes
  **/
  @ApiModelProperty(value = "Total Stake Taxes.")
  public Double getStakeTaxes() {
    return stakeTaxes;
  }

  public void setStakeTaxes(Double stakeTaxes) {
    this.stakeTaxes = stakeTaxes;
  }

  public InvoiceReportCurrencyData paidOutTaxes(Double paidOutTaxes) {
    this.paidOutTaxes = paidOutTaxes;
    return this;
  }

   /**
   * Won taxes retained.
   * @return paidOutTaxes
  **/
  @ApiModelProperty(value = "Won taxes retained.")
  public Double getPaidOutTaxes() {
    return paidOutTaxes;
  }

  public void setPaidOutTaxes(Double paidOutTaxes) {
    this.paidOutTaxes = paidOutTaxes;
  }

  public InvoiceReportCurrencyData currencyRateApplied(Double currencyRateApplied) {
    this.currencyRateApplied = currencyRateApplied;
    return this;
  }

   /**
   * Final rate applied between base currency and output currency.
   * @return currencyRateApplied
  **/
  @ApiModelProperty(value = "Final rate applied between base currency and output currency.")
  public Double getCurrencyRateApplied() {
    return currencyRateApplied;
  }

  public void setCurrencyRateApplied(Double currencyRateApplied) {
    this.currencyRateApplied = currencyRateApplied;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceReportCurrencyData invoiceReportCurrencyData = (InvoiceReportCurrencyData) o;
    return Objects.equals(this.currency, invoiceReportCurrencyData.currency) &&
        Objects.equals(this.currencyRate, invoiceReportCurrencyData.currencyRate) &&
        Objects.equals(this.netTurnover, invoiceReportCurrencyData.netTurnover) &&
        Objects.equals(this.netPaidOut, invoiceReportCurrencyData.netPaidOut) &&
        Objects.equals(this.balance, invoiceReportCurrencyData.balance) &&
        Objects.equals(this.netWon, invoiceReportCurrencyData.netWon) &&
        Objects.equals(this.total, invoiceReportCurrencyData.total) &&
        Objects.equals(this.outputCurrency, invoiceReportCurrencyData.outputCurrency) &&
        Objects.equals(this.outputCurrencyRate, invoiceReportCurrencyData.outputCurrencyRate) &&
        Objects.equals(this.totalExchange, invoiceReportCurrencyData.totalExchange) &&
        Objects.equals(this.entitiesWithTickets, invoiceReportCurrencyData.entitiesWithTickets) &&
        Objects.equals(this.playedTickets, invoiceReportCurrencyData.playedTickets) &&
        Objects.equals(this.stakeTaxes, invoiceReportCurrencyData.stakeTaxes) &&
        Objects.equals(this.paidOutTaxes, invoiceReportCurrencyData.paidOutTaxes) &&
        Objects.equals(this.currencyRateApplied, invoiceReportCurrencyData.currencyRateApplied);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, currencyRate, netTurnover, netPaidOut, balance, netWon, total, outputCurrency, outputCurrencyRate, totalExchange, entitiesWithTickets, playedTickets, stakeTaxes, paidOutTaxes, currencyRateApplied);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceReportCurrencyData {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    currencyRate: ").append(toIndentedString(currencyRate)).append("\n");
    sb.append("    netTurnover: ").append(toIndentedString(netTurnover)).append("\n");
    sb.append("    netPaidOut: ").append(toIndentedString(netPaidOut)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    netWon: ").append(toIndentedString(netWon)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    outputCurrency: ").append(toIndentedString(outputCurrency)).append("\n");
    sb.append("    outputCurrencyRate: ").append(toIndentedString(outputCurrencyRate)).append("\n");
    sb.append("    totalExchange: ").append(toIndentedString(totalExchange)).append("\n");
    sb.append("    entitiesWithTickets: ").append(toIndentedString(entitiesWithTickets)).append("\n");
    sb.append("    playedTickets: ").append(toIndentedString(playedTickets)).append("\n");
    sb.append("    stakeTaxes: ").append(toIndentedString(stakeTaxes)).append("\n");
    sb.append("    paidOutTaxes: ").append(toIndentedString(paidOutTaxes)).append("\n");
    sb.append("    currencyRateApplied: ").append(toIndentedString(currencyRateApplied)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

