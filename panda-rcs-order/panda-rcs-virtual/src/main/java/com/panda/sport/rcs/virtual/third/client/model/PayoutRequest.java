/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.panda.sport.rcs.virtual.third.client.model.ServerTicket;
import com.panda.sport.rcs.virtual.third.client.model.WalletRequest;
import java.io.IOException;

/**
 * Includes ticket detail if detail_on_payout is enabled on account. 
 */
@ApiModel(description = "Includes ticket detail if detail_on_payout is enabled on account. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class PayoutRequest extends WalletRequest {
  @SerializedName("extTicketId")
  private String extTicketId = null;

  @SerializedName("currencyCode")
  private String currencyCode = null;

  @SerializedName("amount")
  private Double amount = null;

  @SerializedName("ticket")
  private ServerTicket ticket = null;

  public PayoutRequest extTicketId(String extTicketId) {
    this.extTicketId = extTicketId;
    return this;
  }

   /**
   * id of ticket created as a result of original transaction.
   * @return extTicketId
  **/
  @ApiModelProperty(value = "id of ticket created as a result of original transaction.")
  public String getExtTicketId() {
    return extTicketId;
  }

  public void setExtTicketId(String extTicketId) {
    this.extTicketId = extTicketId;
  }

  public PayoutRequest currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * ISO Currency code
   * @return currencyCode
  **/
  @ApiModelProperty(value = "ISO Currency code")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public PayoutRequest amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Positive amount to decrease current credit after payment
   * @return amount
  **/
  @ApiModelProperty(value = "Positive amount to decrease current credit after payment")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public PayoutRequest ticket(ServerTicket ticket) {
    this.ticket = ticket;
    return this;
  }

   /**
   * Get ticket
   * @return ticket
  **/
  @ApiModelProperty(value = "")
  public ServerTicket getTicket() {
    return ticket;
  }

  public void setTicket(ServerTicket ticket) {
    this.ticket = ticket;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayoutRequest payoutRequest = (PayoutRequest) o;
    return Objects.equals(this.extTicketId, payoutRequest.extTicketId) &&
        Objects.equals(this.currencyCode, payoutRequest.currencyCode) &&
        Objects.equals(this.amount, payoutRequest.amount) &&
        Objects.equals(this.ticket, payoutRequest.ticket) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(extTicketId, currencyCode, amount, ticket, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayoutRequest {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    extTicketId: ").append(toIndentedString(extTicketId)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    ticket: ").append(toIndentedString(ticket)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

