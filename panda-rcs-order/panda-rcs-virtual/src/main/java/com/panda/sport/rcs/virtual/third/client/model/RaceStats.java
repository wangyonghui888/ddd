/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.panda.sport.rcs.virtual.third.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The race participant information that relates race data with general stats. 
 */
@ApiModel(description = "The race participant information that relates race data with general stats. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-25T13:53:10.996Z")



public class RaceStats {
  @SerializedName("prob")
  private Double prob = null;

  @SerializedName("forecast")
  private List<String> forecast = null;

  @SerializedName("form")
  private Double form = null;

  @SerializedName("median")
  private Double median = null;

  @SerializedName("standardDeviation")
  private Double standardDeviation = null;

  @SerializedName("risk")
  private Integer risk = null;

  public RaceStats prob(Double prob) {
    this.prob = prob;
    return this;
  }

   /**
   * Get prob
   * @return prob
  **/
  @ApiModelProperty(value = "")
  public Double getProb() {
    return prob;
  }

  public void setProb(Double prob) {
    this.prob = prob;
  }

  public RaceStats forecast(List<String> forecast) {
    this.forecast = forecast;
    return this;
  }

  public RaceStats addForecastItem(String forecastItem) {
    if (this.forecast == null) {
      this.forecast = new ArrayList<String>();
    }
    this.forecast.add(forecastItem);
    return this;
  }

   /**
   * Array forecast.  
   * @return forecast
  **/
  @ApiModelProperty(value = "Array forecast.  ")
  public List<String> getForecast() {
    return forecast;
  }

  public void setForecast(List<String> forecast) {
    this.forecast = forecast;
  }

  public RaceStats form(Double form) {
    this.form = form;
    return this;
  }

   /**
   * Get form
   * @return form
  **/
  @ApiModelProperty(value = "")
  public Double getForm() {
    return form;
  }

  public void setForm(Double form) {
    this.form = form;
  }

  public RaceStats median(Double median) {
    this.median = median;
    return this;
  }

   /**
   * Get median
   * @return median
  **/
  @ApiModelProperty(value = "")
  public Double getMedian() {
    return median;
  }

  public void setMedian(Double median) {
    this.median = median;
  }

  public RaceStats standardDeviation(Double standardDeviation) {
    this.standardDeviation = standardDeviation;
    return this;
  }

   /**
   * Get standardDeviation
   * @return standardDeviation
  **/
  @ApiModelProperty(value = "")
  public Double getStandardDeviation() {
    return standardDeviation;
  }

  public void setStandardDeviation(Double standardDeviation) {
    this.standardDeviation = standardDeviation;
  }

  public RaceStats risk(Integer risk) {
    this.risk = risk;
    return this;
  }

   /**
   * Get risk
   * @return risk
  **/
  @ApiModelProperty(value = "")
  public Integer getRisk() {
    return risk;
  }

  public void setRisk(Integer risk) {
    this.risk = risk;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RaceStats raceStats = (RaceStats) o;
    return Objects.equals(this.prob, raceStats.prob) &&
        Objects.equals(this.forecast, raceStats.forecast) &&
        Objects.equals(this.form, raceStats.form) &&
        Objects.equals(this.median, raceStats.median) &&
        Objects.equals(this.standardDeviation, raceStats.standardDeviation) &&
        Objects.equals(this.risk, raceStats.risk);
  }

  @Override
  public int hashCode() {
    return Objects.hash(prob, forecast, form, median, standardDeviation, risk);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RaceStats {\n");
    
    sb.append("    prob: ").append(toIndentedString(prob)).append("\n");
    sb.append("    forecast: ").append(toIndentedString(forecast)).append("\n");
    sb.append("    form: ").append(toIndentedString(form)).append("\n");
    sb.append("    median: ").append(toIndentedString(median)).append("\n");
    sb.append("    standardDeviation: ").append(toIndentedString(standardDeviation)).append("\n");
    sb.append("    risk: ").append(toIndentedString(risk)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

