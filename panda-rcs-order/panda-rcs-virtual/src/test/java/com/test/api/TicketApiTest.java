/*
 * GoldenRace External API
 * Definitions of External API for GoldenRace Java Server 
 *
 * OpenAPI spec version: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.test.api;

import com.panda.sport.rcs.virtual.third.client.model.*;
import org.junit.Ignore;
import org.junit.Test;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;

/**
 * API tests for TicketApi
 */
@Ignore
public class TicketApiTest {

    private final com.panda.sport.rcs.virtual.third.client.api.TicketApi api = new com.panda.sport.rcs.virtual.third.client.api.TicketApi();

    
    /**
     * 
     *
     * 
     *
     * @throws com.panda.sport.rcs.virtual.third.client.ApiException
     *          if the Api call fails
     */
    @Test
    public void ticketCancelTest() throws com.panda.sport.rcs.virtual.third.client.ApiException {
        List<Long> ticketIds = null;
        List<com.panda.sport.rcs.virtual.third.client.model.ServerTicket> response = api.ticketCancel(ticketIds);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Method to change the status of impression of a ticket. 
     *
     * @throws com.panda.sport.rcs.virtual.third.client.ApiException
     *          if the Api call fails
     */
    @Test
    public void ticketChangePrintStatusTest() throws com.panda.sport.rcs.virtual.third.client.ApiException {
        Long ticketId = null;
        String ticketPrintedStatus = null;
        com.panda.sport.rcs.virtual.third.client.model.ServerTicket response = api.ticketChangePrintStatus(ticketId, ticketPrintedStatus);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *   SellTicketExternal对象必传字段
     * 	timeSend：时间
     * 	calculationId：由EntityApiTest.getCalculationIdByEntityIdTest()方法得到.
     * 	entityExtId：用户id
     * 	parentId： 父类id,可以直接传递最上层父类，目前测试环境为1548
     * 	Details: 接收TicketDetail对象，用户的投注额度信息等在这个对象，List集合
     * TicketDetail对象必传字段：
     * 	eventId:赛事id
     * 	playlistId:联赛id
     * 	bets：接收TicketBet对象，用户对这场赛事的下注信息,List集合
     * TicketBet对象必传字段：
     * 	marketId:数据商给的盘口id
     * 	oddId:数据商给的投注项id
     * 	oddValue:数据商给的赔率值
     * 	stake：针对这个投注项用户下的额度值
     * @throws com.panda.sport.rcs.virtual.third.client.ApiException
     *          if the Api call fails
     */
    @Test
    public void ticketCreateTest() throws com.panda.sport.rcs.virtual.third.client.ApiException {

        ApiTest.setApiDomain();
        com.panda.sport.rcs.virtual.third.client.model.SellTicketExternal ticket = new com.panda.sport.rcs.virtual.third.client.model.SellTicketExternal();
        ticket.setCalculationId(2202);
        ticket.setParentId(1548);
        //ticket.setStaffParentId(1548);
        ticket.setTimeSend(OffsetDateTime.now());
        ticket.setEntityExtId("test01");//4018
        com.panda.sport.rcs.virtual.third.client.model.TicketDetail ticketDetail = new com.panda.sport.rcs.virtual.third.client.model.TicketDetail();
        ticket.setDetails(ticketDetail);
        List<com.panda.sport.rcs.virtual.third.client.model.TicketEvent> eventList = new ArrayList<>();//ticket.getDetails().getEvents();
        ticketDetail.setEvents(eventList);
        List<com.panda.sport.rcs.virtual.third.client.model.SystemBet> systemBetList = new ArrayList<>();
        ticketDetail.setSystemBets(systemBetList);
        com.panda.sport.rcs.virtual.third.client.model.TicketEvent ticketEvent = new com.panda.sport.rcs.virtual.third.client.model.TicketEvent();
        eventList.add(ticketEvent);
        ticketEvent.setEventId(665741L);
        ticketEvent.setPlaylistId(14002);
        ticketEvent.setIsBanker(false);
        List<com.panda.sport.rcs.virtual.third.client.model.TicketBet> betList = new ArrayList<>();
        ticketEvent.setBets(betList);
//        ticketEvent.setExtId("test04");
        com.panda.sport.rcs.virtual.third.client.model.TicketBet ticketBet = new com.panda.sport.rcs.virtual.third.client.model.TicketBet();
        betList.add(ticketBet);
        ticketBet.setMarketId("Match_result");
        ticketBet.setOddId("Home");
        ticketBet.setOddValue("1.97");
        ticketBet.setStake(1D);
        System.err.println(ticket);
        try {
            com.panda.sport.rcs.virtual.third.client.model.TicketTransaction response = api.ticketCreate(ticket);
            System.err.println(response);
        } catch (com.panda.sport.rcs.virtual.third.client.ApiException api){
            System.err.println(api);
            System.err.println(api.getResponseBody());

        }
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws com.panda.sport.rcs.virtual.third.client.ApiException
     *          if the Api call fails
     */
    @Test
    public void ticketFindTest() throws com.panda.sport.rcs.virtual.third.client.ApiException {
        Integer entityId = null;
        OffsetDateTime startTime = null;
        Integer first = null;
        Integer n = null;
        Integer levelDetails = null;
        String orderBy = null;
        String extTicketId = null;
        OffsetDateTime endTime = null;
        List<String> status = null;
        Boolean printed = null;
        Boolean isJackpotWin = null;
        String tags = null;
        Boolean withChildren = null;
        List<com.panda.sport.rcs.virtual.third.client.model.ServerTicket> response = api.ticketFind(entityId, startTime, first, n, levelDetails, orderBy, extTicketId, endTime, status, printed, isJackpotWin, tags, withChildren);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Find a ticket by unique ticket Id, under a root entity. 
     *
     * @throws com.panda.sport.rcs.virtual.third.client.ApiException
     *          if the Api call fails
     */
    @Test
    public void ticketFindByIdTest() throws com.panda.sport.rcs.virtual.third.client.ApiException {
        Integer entityId = null;
        Long ticketId = null;
        String extTicketId = null;
        Boolean advancedInfo = null;
        Boolean withChildren = null;
        com.panda.sport.rcs.virtual.third.client.model.ServerTicket response = api.ticketFindById(entityId, ticketId, extTicketId, advancedInfo, withChildren);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws com.panda.sport.rcs.virtual.third.client.ApiException
     *          if the Api call fails
     */
    @Test
    public void ticketPayoutTest() throws com.panda.sport.rcs.virtual.third.client.ApiException {
        List<Long> ticketIds = null;
        List<com.panda.sport.rcs.virtual.third.client.model.ServerTicket> response = api.ticketPayout(ticketIds);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Method to request the resolution of  the ticket by id. 
     *
     * @throws com.panda.sport.rcs.virtual.third.client.ApiException
     *          if the Api call fails
     */
    @Test
    public void ticketRequestSolveTest() throws com.panda.sport.rcs.virtual.third.client.ApiException {
        Long extId = null;
        Long ticketId = null;
        Long ticketExtId = null;
        Integer entityParentId = null;
        Integer staffParentId = null;
        String staffExtId = null;
        com.panda.sport.rcs.virtual.third.client.model.ServerTicket response = api.ticketRequestSolve(extId, ticketId, ticketExtId, entityParentId, staffParentId, staffExtId);

        // TODO: test validations
    }
    
}
