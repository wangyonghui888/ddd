<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.panda.sport.rcs.data.mapper.StandardSportRegionMapper">
  <resultMap id="BaseResultMap" type="com.panda.sport.rcs.pojo.StandardSportRegion">
    <!--@mbg.generated-->
    <!--@Table standard_sport_region-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="visible" jdbcType="TINYINT" property="visible" />
    <result column="name_code" jdbcType="BIGINT" property="nameCode" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="spell" jdbcType="VARCHAR" property="spell" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="modify_time" jdbcType="BIGINT" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, visible, name_code, introduction, spell, remark, create_time, modify_time
  </sql>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into standard_sport_region
    (id,visible, name_code, introduction, spell, remark, create_time, modify_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT},#{item.visible,jdbcType=TINYINT}, #{item.nameCode,jdbcType=BIGINT}, #{item.introduction,jdbcType=VARCHAR},
        #{item.spell,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR}, #{item.createTime,jdbcType=BIGINT},
      #{item.modifyTime,jdbcType=BIGINT})
    </foreach>
  </insert>

  <insert id="batchInsertOrUpdate" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into standard_sport_region
    (id,visible, name_code, introduction, spell, remark, create_time, modify_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT},#{item.visible,jdbcType=TINYINT}, #{item.nameCode,jdbcType=BIGINT}, #{item.introduction,jdbcType=VARCHAR},
      #{item.spell,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR}, #{item.createTime,jdbcType=BIGINT},
      #{item.modifyTime,jdbcType=BIGINT})
    </foreach>
    on duplicate key update
    <trim suffixOverrides=",">
      visible = values (visible),
      name_code = values (name_code),
      introduction = values (introduction),
      spell = values (spell),
      remark = values (remark),
      modify_time = values (modify_time),
    </trim>
  </insert>
</mapper>