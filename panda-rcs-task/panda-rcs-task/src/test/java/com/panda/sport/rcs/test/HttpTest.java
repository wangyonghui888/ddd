package com.panda.sport.rcs.test;


import java.util.HashMap;
import java.util.Map;

import com.alibaba.fastjson.JSONObject;

public class HttpTest {
	
	public static void main(String[] args) {
		String test = "26735,329250;26752,329435;26750,329447;26765,329609;26819,330397;26831,330577;26843,330785;26881,331405;26879,331515;26892,331622;26915,332042;26924,332261;26933,332472;26944,332694;26969,332901;26970,333006;26986,333221;27016,333767;27028,333986;27039,334187;27048,334386;27077,334803;27087,335007;27096,335212;27105,335420;27119,335621;27145,336026;27158,336229;35478,336437;28285,339480;36462,339975;28394,340243;28415,340408;28442,340574;28444,340582;28470,340701;28506,340897;28616,341455;28615,341545;28701,341902;28771,342137;28812,342504;28852,342701;28850,342714;28847,342786;28865,342908;28926,343342;29006,343913;29029,344051;29092,344311;29095,344325;29111,344452;29119,344609;29144,344668;29170,344802;29192,344889;29212,345053;29230,345141;29237,345218;29276,345612;29290,345661;29397,346569;29408,346725;29435,346975;29461,347113;29463,347186;29477,347256;36717,347387;29493,347443;29507,347569;29506,347574;29536,347774;29534,347825;29545,347899;29570,348148;29581,348266;29588,348330;29605,348524;29624,348814;29632,348874;29629,348933;29661,349387;29671,349565;29695,350066;29706,350285;29778,351169;29776,351240;29804,351534;29808,351643;29830,351765;29868,352199;29878,352316;29943,352894;29954,352956;29962,353078;29975,353297;29982,353345;29991,353519;29997,353546;30013,353742;30010,353746;30014,353775;30016,353829;30023,353945;30044,354242;30056,354439;30055,354477;30063,354506;30062,354538;30070,354632;35456,354697;30079,354725;30085,354855;35480,354889;30105,355219;30182,356641;30193,356817;30201,356911;30207,357009;30216,357095;30238,357268;30255,357429;30264,357520;30268,357538;30294,357780;30407,358542;30422,358645;30454,358817;30470,358946;30533,359249;30651,359955;30687,360121;30679,360146;30701,360229;30714,360311;30732,360388;30733,360469;30750,360496;30749,360561;30758,360573;30761,360628;30777,360670;30776,360705;30791,360786;30792,360821;30804,360861;30806,360867;30802,360888;30805,360942;30817,361020;30849,361178;37095,361333;37101,361474;30936,361859;30948,361966;30946,361973;30961,362026;30977,362101;30975,362114;30993,362173;30995,362244;31011,362279;31021,362391;31038,362451;31044,362518;31071,362662;31108,362800;31105,362802;31110,362866;31124,362943;31121,362952;31150,363096;31168,363236;31177,363334;31189,363382;31210,363483;31287,364176;31295,364241;31341,364820;31433,365866;31444,366002;31587,367465;31635,367782;31752,368517;31772,368533;31773,368610;31806,368698;31803,368707;31801,368733;31839,368869;31864,368952;35509,369129;35510,369201;36291,369272;31965,369288;32025,369508;32087,369658;32118,369725;32152,369797;32151,369811;32172,369891;32281,370171;32274,370190;32313,370235;32307,370272;32340,370346;32341,370356;32342,370376;32373,370427;32411,370507;32409,370510;32445,370580;32448,370662;32479,370674;32483,370738;32484,370749;32515,370816;32514,370836;32546,370893;32547,370909;32574,370961;32576,370984;32606,371067;32636,371141;32668,371215;32669,371288;32696,371369;32725,371445;32750,371511;32751,371516;32775,371585;32839,371958;32972,372465;32974,372527;33047,372938;33089,373478;33097,373538;36263,373805;36268,373856;33118,373867;33119,373925;33155,374256;33183,374506;33197,374668;33206,374722;33937,379287;33974,379486;33984,379565;35506,379670;34303,381882;34307,381892;34331,381950;34335,381961;34343,381981;34346,381987;35159,387514;35213,388389;35238,388839;35237,388844;35294,389701;35303,389897;35320,390426;35440,391356;35626,391499;35632,391509;35725,391601;35726,391602;36024,391890;36482,392287;36491,392296;36497,392302;36598,392405;36961,392761;37016,392808;37599,393538;37600,393539;37601,393541;37466,393570;37541,393576;37422,393588;37542,393744;37473,393745;37553,393761;37364,393764;37604,393767;37495,393777;37365,393787;37433,393790;37403,393807;37477,393848;37394,393855;37478,393886;37434,393900;37577,393907;37404,393915;37379,393919;37554,393938;37578,393950;37524,393956;37496,393959;37435,393967;37380,393980;37395,393989;37525,393993;37526,394000;37543,394004;37515,394006;37479,394011;37381,394018;37382,394040;37436,394052;37437,394061;37579,394071;37555,394094;37423,394113;37467,394120;37438,394125;37480,394139;37468,394145;37383,394157;37556,394176;37576,394179;37497,394189;37481,394191;37439,394220;37405,394223;37557,394233;37558,394245;37605,394248;37498,394269;37491,394275;37499,394278;37580,394291;37606,394301;37607,394303;37581,394333;37582,394405;37559,394418;37469,394426;37560,394432;37583,394464;37366,394470;37440,394546;37441,394562;37482,394593;37500,394621;37608,394627;37561,394628;37406,394630;37442,394639;37443,394682;37476,394710;37584,394711;37539,394719;37516,394769;37384,394796;37463,394809;37444,394843;37445,394850;37585,394860;37501,394951;37407,394955;37609,394970;37350,394985;37367,395064;37385,395098;37470,395220;37408,395263;37544,395319;37462,395342;37586,395367;37446,395403;37540,395418;37386,395420;37527,395444;37447,395465;37610,395506;37483,395512;37562,395522;37563,395548;37475,395553;37448,395592;37409,395612;37587,395624;37449,395631;37588,395698;37589,395711;37450,395712;37602,395728;37464,395736;37451,395743;37590,395745;37484,395761;37575,395775;37571,395796;37598,395816;37368,395828;37502,395892;37591,395910;37611,395922;37564,395929;37565,395954;37612,395980;37613,395997;37387,396057;37424,396058;37545,396063;37503,396064;37546,396067;37504,396070;37485,396072;37517,396073;37547,396081;37505,396082;37373,396085;37486,396091;37518,396092;37396,396104;37487,396108;37519,396110;37548,396114;37506,396115;37452,396141;37520,396151;37488,396153;37614,396166;37528,396172;37507,396174;37572,396177;37549,396180;37453,396181;37573,396198;37529,396200;37388,396222;37369,396224;37410,396235;37411,396236;37412,396237;37389,396238;37390,396239;37413,396240;37454,396241;37414,396242;37415,396243;37416,396248;37417,396249;37418,396250;37530,396260;37531,396261;37455,396266;37532,396278;37574,396279;37456,396283;37397,396284;37398,396287;37354,396288;37355,396289;37375,396294;37425,396299;37361,396300;37362,396303;37426,396306;37363,396308;37521,396321;37566,396362;37427,396384;37370,396385;37374,396386;37371,396387;37428,396388;37471,396391;37372,396393;37472,396394;37615,396399;37567,396400;37391,396408;37429,396409;37392,396410;37430,396411;37457,396412;37508,396413;37489,396414;37458,396415;37533,396419;37592,396420;37474,396425;37465,396431;37550,396432;37419,396433;37568,396439;37509,396440;37393,396441;37569,396442;37616,396443;37420,396447;37421,396448;37551,396452;37534,396453;37552,396454;37535,396455";
		
		Map<String, String> headers = new HashMap<String, String>();
		headers.put("Content-Type", "application/json");
		for(String key : test.split(";")) {
			JSONObject map = new JSONObject();
			map.put("id", key.split(",")[0]);
			map.put("matchInfoId", key.split(",")[1]);
			map.put("sellDateType", 1);
			map.put("sellMatchDate", "1583488800000");
			map.put("marketCount", "3");
			map.put("cardShow", "0");
			map.put("cornerShow", "0");
			JSONObject reslult = HttpRequestUtil.httpPost("http://pre.sportxxx278gwf4.com/fengkong/standardMarketSell/confirmSell", map);
			if(!reslult.getBooleanValue("success")) {
				System.err.println(reslult.toJSONString());
				System.err.println(map.toJSONString());
			}
			
			map.put("sellDateType", 2);
			reslult = HttpRequestUtil.httpPost("http://pre.sportxxx278gwf4.com/fengkong/standardMarketSell/confirmSell", map);
			if(!reslult.getBooleanValue("success")) {
				System.err.println(reslult.toJSONString());
				System.err.println(map.toJSONString());
			}
		}
	}

}
