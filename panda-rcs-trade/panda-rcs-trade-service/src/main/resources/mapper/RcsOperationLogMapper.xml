<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.panda.sport.rcs.mapper.RcsOperationLogMapper">
  <resultMap id="BaseResultMap" type="com.panda.sport.rcs.pojo.RcsOperationLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="handle_code" jdbcType="VARCHAR" property="handleCode" />
    <result column="hanler_id" jdbcType="VARCHAR" property="hanlerId" />
    <result column="update_pre_content" jdbcType="VARCHAR" property="updatePreContent" />
    <result column="update_content" jdbcType="VARCHAR" property="updateContent" />
    <result column="show_content" jdbcType="VARCHAR" property="showContent" />
    <result column="crt_time" jdbcType="TIMESTAMP" property="crtTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, handle_code, hanler_id, update_pre_content, update_content, show_content, crt_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rcs_operation_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rcs_operation_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.panda.sport.rcs.pojo.RcsOperationLog" useGeneratedKeys="true">
    insert into rcs_operation_log (handle_code, hanler_id, update_pre_content, 
      update_content, show_content, crt_time, 
      update_time)
    values (#{handleCode,jdbcType=VARCHAR}, #{hanlerId,jdbcType=VARCHAR}, #{updatePreContent,jdbcType=VARCHAR}, 
      #{updateContent,jdbcType=VARCHAR}, #{showContent,jdbcType=VARCHAR}, #{crtTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.panda.sport.rcs.pojo.RcsOperationLog" useGeneratedKeys="true">
    insert into rcs_operation_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="handleCode != null">
        handle_code,
      </if>
      <if test="hanlerId != null">
        hanler_id,
      </if>
      <if test="updatePreContent != null">
        update_pre_content,
      </if>
      <if test="updateContent != null">
        update_content,
      </if>
      <if test="showContent != null">
        show_content,
      </if>
      <if test="crtTime != null">
        crt_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="handleCode != null">
        #{handleCode,jdbcType=VARCHAR},
      </if>
      <if test="hanlerId != null">
        #{hanlerId,jdbcType=VARCHAR},
      </if>
      <if test="updatePreContent != null">
        #{updatePreContent,jdbcType=VARCHAR},
      </if>
      <if test="updateContent != null">
        #{updateContent,jdbcType=VARCHAR},
      </if>
      <if test="showContent != null">
        #{showContent,jdbcType=VARCHAR},
      </if>
      <if test="crtTime != null">
        #{crtTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.panda.sport.rcs.pojo.RcsOperationLog">
    update rcs_operation_log
    <set>
      <if test="handleCode != null">
        handle_code = #{handleCode,jdbcType=VARCHAR},
      </if>
      <if test="hanlerId != null">
        hanler_id = #{hanlerId,jdbcType=VARCHAR},
      </if>
      <if test="updatePreContent != null">
        update_pre_content = #{updatePreContent,jdbcType=VARCHAR},
      </if>
      <if test="updateContent != null">
        update_content = #{updateContent,jdbcType=VARCHAR},
      </if>
      <if test="showContent != null">
        show_content = #{showContent,jdbcType=VARCHAR},
      </if>
      <if test="crtTime != null">
        crt_time = #{crtTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.panda.sport.rcs.pojo.RcsOperationLog">
    update rcs_operation_log
    set handle_code = #{handleCode,jdbcType=VARCHAR},
      hanler_id = #{hanlerId,jdbcType=VARCHAR},
      update_pre_content = #{updatePreContent,jdbcType=VARCHAR},
      update_content = #{updateContent,jdbcType=VARCHAR},
      show_content = #{showContent,jdbcType=VARCHAR},
      crt_time = #{crtTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="queryByTournamentId" resultMap="BaseResultMap">
        SELECT
        *
    FROM
        rcs_operation_log
    WHERE
        handle_code = CONCAT('Tour_Template_2_', #{tournamentId} )

        OR handle_code in (
        SELECT
            CONCAT( 'Tour_Template_2_0_',live_template_id) AS template_id
        FROM
            rcs_tournament_template_ref  where tournament_id = #{tournamentId} UNION
        SELECT
            CONCAT( 'Tour_Template_2_1_',template_id) AS template_id
        FROM
            rcs_tournament_template_ref where tournament_id = #{tournamentId}
        )


        OR handle_code IN  (
          SELECT
             case
                when type=1 then CONCAT('Tour_Template_',type ,'_',match_type,'_', id)
                when type=2 then CONCAT('Tour_Template_',type ,'_',match_type,'_', type_val)
            end
          FROM
              rcs_tournament_template
          WHERE
              (TYPE = 1 AND type_val = #{tournamentLevel}) or
             (TYPE = 2 AND type_val = #{tournamentId})
          GROUP BY
              match_type,TYPE,type_val
        )

        order by id desc
  </select>

    <select id="selectRcsOperationLog" resultType="com.panda.sport.rcs.pojo.RcsOperationLog">
        SELECT * FROM  rcs_operation_log WHERE handle_code="user_config_history" AND hanler_id= #{handlerId} order by crt_time desc
    </select>

    <select id="selectRcsOperationLogByUser" resultType="com.panda.sport.rcs.vo.RcsOperationLogHistory">
        SELECT
        l.id,
        t.uid,
        t.username,
        t.merchant_code name,
        l.show_content type,
        l.update_content,
        l.crt_time
        FROM
        rcs_operation_log l
        LEFT JOIN t_user t ON l.hanler_id = t.uid
        WHERE
            l.handle_code = "user_config_history"
            <if test="type != null and type.size() > 0">
                AND l.show_content in
                <foreach collection="type" item="item" index="index" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="time!=null">
                AND l.crt_time &gt;=FROM_UNIXTIME( #{time} / 1000 )
            </if>
            <if test="user!=null">
                AND ( t.uid = #{user} OR t.username = #{user} OR t.uid like #{likeUser} OR t.username like #{likeUser})
            </if>
            ORDER BY l.crt_time DESC
    </select>

    <select id="selectRcsOperationLogByUserLimit" resultType="com.panda.sport.rcs.vo.RcsOperationLogHistory">
        SELECT
        l.id,
        t.uid,
        t.username,
        t.merchant_code name,
        l.show_content type,
        l.update_content,
        l.crt_time
        FROM
        rcs_operation_log l
        JOIN t_user t ON l.hanler_id = t.uid
        WHERE
        l.handle_code = "user_config_history"
        <if test="req.types != null and req.types.size() > 0">
            AND l.show_content in
            <foreach collection="req.types" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="req.startTime!=null">
            AND l.crt_time <![CDATA[ >= ]]> FROM_UNIXTIME( #{req.startTime} / 1000 )
        </if>
        <if test="req.endTime!=null">
            and l.crt_time <![CDATA[ <= ]]> FROM_UNIXTIME( #{req.endTime} / 1000 )
        </if>
        <if test="req.user!=null">
            AND ( t.uid = #{req.user} OR t.username like "%"#{req.user}"%")
        </if>
        <if test="req.merchantCodes != null and req.merchantCodes.size() > 0">
            AND t.merchant_code in
            <foreach collection="req.merchantCodes" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        ORDER BY l.crt_time DESC
        LIMIT #{req.pageNum} ,#{req.pageSize}
    </select>
    <select id="selectRcsOperationLogByUserLimitCount" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        rcs_operation_log l
        JOIN t_user t ON l.hanler_id = t.uid
        WHERE
        l.handle_code = "user_config_history"
        <if test="req.types != null and req.types.size() > 0">
            AND l.show_content in
            <foreach collection="req.types" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="req.startTime!=null">
            AND l.crt_time <![CDATA[ >= ]]> FROM_UNIXTIME( #{req.startTime} / 1000 )
        </if>
        <if test="req.endTime!=null">
            and l.crt_time <![CDATA[ <= ]]> FROM_UNIXTIME( #{req.endTime} / 1000 )
        </if>
        <if test="req.user!=null">
            AND ( t.uid = #{req.user} OR t.username like "%"#{req.user}"%")
        </if>
        <if test="req.merchantCodes != null and req.merchantCodes.size() > 0">
            AND t.merchant_code in
            <foreach collection="req.merchantCodes" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        ORDER BY l.crt_time DESC
    </select>

    <select id="selectRcsOperationLogByOnLine" resultType="com.panda.sport.rcs.vo.RcsUserException">
        SELECT
        l.id,
        t.uid,
        t.username as userName,
        t.merchant_code as merchantCode,
        l.update_content  as updateContent,
        l.show_content  as type,
        l.crt_time  as crtTime
        FROM
        rcs_operation_log l
        JOIN t_user t ON l.hanler_id = t.uid
        WHERE l.handle_code = "user_config_history"
        AND l.show_content in(3,14,17,18,20,21,22)
        <if test="req.startTime != null">
            AND l.crt_time &gt;=FROM_UNIXTIME( #{req.startTime} / 1000 )
        </if>
        <if test="req.endTime!=null">
            and l.crt_time &lt;= FROM_UNIXTIME( #{req.endTime} / 1000 )
        </if>
        <if test="req.user!=null">
            AND ( t.uid = #{req.user} OR t.username like "%"#{req.user}"%")
        </if>
        <if test="req.merchantCode!=null">
            AND t.merchant_code=#{req.merchantCode}
        </if>
        <if test="req.merchantCodes!=null and req.merchantCodes.size() > 0">
            AND t.merchant_code in
            <foreach collection="req.merchantCodes" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        ORDER BY  l.crt_time DESC
        LIMIT #{req.pageNum} ,#{req.pageSize}
    </select>

    <select id="selectRcsOperationLogByList" resultType="com.panda.sport.rcs.vo.RcsUserException">
        SELECT
        l.id,
        t.uid,
        t.username as userName,
        t.merchant_code as merchantCode,
        l.update_content  as updateContent,
        l.show_content  as type,
        l.crt_time  as crtTime
        FROM
        rcs_operation_log l
        JOIN t_user t ON l.hanler_id = t.uid
        WHERE l.handle_code = "user_config_history"
        AND l.show_content in(3,14,17,18,20,21,22)
        <if test="req.startTime != null">
            AND l.crt_time &gt;=FROM_UNIXTIME( #{req.startTime} / 1000 )
        </if>
        <if test="req.endTime!=null">
            and l.crt_time &lt;= FROM_UNIXTIME( #{req.endTime} / 1000 )
        </if>
        <if test="req.user!=null">
            AND ( t.uid = #{req.user} OR t.username like "%"#{req.user}"%")
        </if>
        <if test="req.merchantCode!=null">
            AND t.merchant_code=#{req.merchantCode}
        </if>
        <if test="req.merchantCodes!=null and req.merchantCodes.size() > 0">
            AND t.merchant_code in
            <foreach collection="req.merchantCodes" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        ORDER BY l.crt_time DESC
    </select>

    <select id="selectRcsOperationLogByOnLineCount" resultType="Integer">
        SELECT
        count(1)
        FROM
        rcs_operation_log l
        JOIN t_user t ON l.hanler_id = t.uid
        WHERE l.handle_code = "user_config_history"
        AND l.show_content in(3,14,17,18,20,21,22)
        <if test="req.startTime != null">
            AND l.crt_time &gt;=FROM_UNIXTIME( #{req.startTime} / 1000 )
        </if>
        <if test="req.endTime!=null">
            and l.crt_time &lt;= FROM_UNIXTIME( #{req.endTime} / 1000 )
        </if>
        <if test="req.user!=null">
            AND ( t.uid = #{req.user} OR t.username like "%"#{req.user}"%")
        </if>
        <if test="req.merchantCode!=null">
            AND t.merchant_code=#{req.merchantCode}
        </if>
        <if test="req.merchantCodes!=null and req.merchantCodes.size() > 0">
            AND t.merchant_code in
            <foreach collection="req.merchantCodes" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        ORDER BY l.crt_time DESC
    </select>

    <select id="selectRcsOperationLogByGroupCount" resultType="Integer">
        SELECT
        count(1)
        from `rcs_operation_log` a
        INNER JOIN(
        select MAX(h.id) as id,h.hanler_id as hanler_id ,DATE_FORMAT(h.crt_time,'%Y-%m-%d') as crt_time
        from rcs_operation_log h where h.crt_time &gt;= FROM_UNIXTIME( #{req.startTime} / 1000 )
        AND h.crt_time &lt;= FROM_UNIXTIME( #{req.endTime} / 1000 )
        GROUP BY h.hanler_id,DATE_FORMAT(h.crt_time,'%Y-%m-%d')
        ) as b  on a.hanler_id=b.hanler_id and a.id=b.id
        INNER JOIN t_user t on t.uid=a.hanler_id
        where a.show_content in('3','14','17','18','20','21','22') AND a.handle_code='user_config_history'
        <if test="req.user!=null">
            AND ( t.uid = #{req.user} OR t.username like "%"#{req.user}"%")
        </if>
        <if test="req.merchantCode!=null">
            AND t.merchant_code=#{req.merchantCode}
        </if>
        <if test="req.merchantCodes!=null and req.merchantCodes.size() > 0">
            AND t.merchant_code in
            <foreach collection="req.merchantCodes" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        ORDER BY b.crt_time DESC
    </select>

    <select id="selectRcsOperationLogByGroup" resultType="com.panda.sport.rcs.vo.RcsUserException">
        select b.id,
               t.uid,
               t.username as userName,
               t.merchant_code as merchantCode,
               a.update_content as updateContent,
               a.show_content  as type,
               b.crt_time as crttime
        from `rcs_operation_log` a
        INNER JOIN(
        select MAX(h.id) as id,h.hanler_id as hanler_id ,DATE_FORMAT(h.crt_time,'%Y-%m-%d') as crt_time
        from rcs_operation_log h where h.crt_time &gt;= FROM_UNIXTIME( #{req.startTime} / 1000 )
        AND h.crt_time &lt;= FROM_UNIXTIME( #{req.endTime} / 1000 )
        GROUP BY h.hanler_id,DATE_FORMAT(h.crt_time,'%Y-%m-%d')
        ) as b  on a.hanler_id=b.hanler_id and a.id=b.id
        INNER JOIN t_user t on t.uid=a.hanler_id
        where a.show_content in('3','14','17','18','20','21','22') AND a.handle_code='user_config_history'
        <if test="req.user!=null">
            AND ( t.uid = #{req.user} OR t.username like "%"#{req.user}"%")
        </if>
        <if test="req.merchantCode!=null">
            AND t.merchant_code=#{req.merchantCode}
        </if>
        <if test="req.merchantCodes!=null and req.merchantCodes.size() > 0">
            AND t.merchant_code in
            <foreach collection="req.merchantCodes" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        ORDER BY a.crt_time DESC
    </select>

    <select id="getCurrentDayCount" resultType="java.lang.Integer">
        SELECT count(1) FROM rcs_operation_log l LEFT JOIN t_user t ON l.hanler_id = t.uid
        WHERE l.handle_code = "user_config_history" and unix_timestamp(l.crt_time) &gt;= unix_timestamp(date_format(now(), '%Y-%m-%d'))
    </select>

    <select id="selectRcsOperationLogToatlByUser" resultType="com.panda.sport.rcs.vo.RcsOperationLogHistory">
        SELECT
        l.id,
        t.uid,
        t.username,
        t.merchant_code name,
        l.show_content type,
        l.update_content,
        l.crt_time
        FROM
        rcs_operation_log l
        LEFT JOIN t_user t ON l.hanler_id = t.uid
        WHERE l.handle_code = "user_config_history"
        <if test="type != null and type.size() > 0">
            AND l.show_content in
            <foreach collection="type" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="startTime!=null">
            AND l.crt_time &gt;=FROM_UNIXTIME( #{startTime} / 1000 )
        </if>
        <if test="endTime!=null">
            and l.crt_time &lt;= FROM_UNIXTIME( #{endTime} / 1000 )
        </if>
        <if test="user!=null">
            AND ( t.uid = #{user} OR t.username = CONCAT(#{user},''))
        </if>

        ORDER BY l.crt_time DESC
        LIMIT #{total}
    </select>

    <update id="saveBatchRcsOperationLog">
        <foreach  collection="rcsOperationLogList" item="item"  separator="; ">
            INSERT INTO `panda_rcs`.`rcs_operation_log` ( `handle_code`, `hanler_id`, `update_pre_content`, `update_content`, `show_content` )
            VALUES
            ( 'user_config_history', #{item.hanlerId}, #{item.updatePreContent}, #{item.updateContent}, #{item.showContent} )
        </foreach>
    </update>
</mapper>